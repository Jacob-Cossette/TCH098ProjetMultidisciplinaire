
Projet_Multi_4X4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  000017a4  00001838  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017a4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000016e  0080013a  0080013a  00001872  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001872  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000018d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002f0  00000000  00000000  00001910  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002be7  00000000  00000000  00001c00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000102f  00000000  00000000  000047e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001829  00000000  00000000  00005816  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000914  00000000  00000000  00007040  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c84  00000000  00000000  00007954  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002650  00000000  00000000  000085d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002a8  00000000  00000000  0000ac28  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 89 00 	jmp	0x112	; 0x112 <__ctors_end>
       4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
       8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
       c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      10:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      14:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      18:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      1c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      20:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      24:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      28:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      2c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      30:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      34:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      38:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      3c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      40:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      44:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      48:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      4c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      50:	0c 94 66 04 	jmp	0x8cc	; 0x8cc <__vector_20>
      54:	0c 94 35 04 	jmp	0x86a	; 0x86a <__vector_21>
      58:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      5c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      60:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      64:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      68:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      6c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      70:	0c 94 bf 04 	jmp	0x97e	; 0x97e <__vector_28>
      74:	0c 94 8e 04 	jmp	0x91c	; 0x91c <__vector_29>
      78:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      7c:	0c 02       	muls	r16, r28
      7e:	0c 02       	muls	r16, r28
      80:	0c 02       	muls	r16, r28
      82:	0c 02       	muls	r16, r28
      84:	0c 02       	muls	r16, r28
      86:	22 02       	muls	r18, r18
      88:	22 02       	muls	r18, r18
      8a:	24 02       	muls	r18, r20
      8c:	0e 02       	muls	r16, r30
      8e:	0e 02       	muls	r16, r30
      90:	0e 02       	muls	r16, r30
      92:	0e 02       	muls	r16, r30
      94:	10 02       	muls	r17, r16
      96:	10 02       	muls	r17, r16
      98:	10 02       	muls	r17, r16
      9a:	10 02       	muls	r17, r16
      9c:	22 02       	muls	r18, r18
      9e:	22 02       	muls	r18, r18
      a0:	12 02       	muls	r17, r18
      a2:	12 02       	muls	r17, r18
      a4:	12 02       	muls	r17, r18
      a6:	12 02       	muls	r17, r18
      a8:	12 02       	muls	r17, r18
      aa:	22 02       	muls	r18, r18
      ac:	22 02       	muls	r18, r18
      ae:	14 02       	muls	r17, r20
      b0:	14 02       	muls	r17, r20
      b2:	14 02       	muls	r17, r20
      b4:	14 02       	muls	r17, r20
      b6:	22 02       	muls	r18, r18
      b8:	22 02       	muls	r18, r18
      ba:	22 02       	muls	r18, r18
      bc:	16 02       	muls	r17, r22
      be:	16 02       	muls	r17, r22
      c0:	16 02       	muls	r17, r22
      c2:	16 02       	muls	r17, r22
      c4:	16 02       	muls	r17, r22
      c6:	22 02       	muls	r18, r18
      c8:	22 02       	muls	r18, r18
      ca:	18 02       	muls	r17, r24
      cc:	1a 02       	muls	r17, r26
      ce:	1a 02       	muls	r17, r26
      d0:	1a 02       	muls	r17, r26
      d2:	1a 02       	muls	r17, r26
      d4:	1c 02       	muls	r17, r28
      d6:	1c 02       	muls	r17, r28
      d8:	1c 02       	muls	r17, r28
      da:	1c 02       	muls	r17, r28
      dc:	22 02       	muls	r18, r18
      de:	22 02       	muls	r18, r18
      e0:	1e 02       	muls	r17, r30
      e2:	1e 02       	muls	r17, r30
      e4:	1e 02       	muls	r17, r30
      e6:	1e 02       	muls	r17, r30
      e8:	1e 02       	muls	r17, r30
      ea:	22 02       	muls	r18, r18
      ec:	22 02       	muls	r18, r18
      ee:	20 02       	muls	r18, r16
      f0:	20 02       	muls	r18, r16
      f2:	20 02       	muls	r18, r16
      f4:	20 02       	muls	r18, r16
      f6:	87 02       	muls	r24, r23
      f8:	8b 02       	muls	r24, r27
      fa:	8f 02       	muls	r24, r31
      fc:	a1 02       	muls	r26, r17
      fe:	b3 02       	muls	r27, r19
     100:	bf 02       	muls	r27, r31
     102:	c8 02       	muls	r28, r24
     104:	ce 02       	muls	r28, r30

00000106 <__trampolines_end>:
     106:	63 64       	ori	r22, 0x43	; 67
     108:	69 6e       	ori	r22, 0xE9	; 233
     10a:	6f 70       	andi	r22, 0x0F	; 15
     10c:	73 75       	andi	r23, 0x53	; 83
     10e:	78 58       	subi	r23, 0x88	; 136
     110:	5b 00       	.word	0x005b	; ????

00000112 <__ctors_end>:
     112:	11 24       	eor	r1, r1
     114:	1f be       	out	0x3f, r1	; 63
     116:	cf ef       	ldi	r28, 0xFF	; 255
     118:	d8 e0       	ldi	r29, 0x08	; 8
     11a:	de bf       	out	0x3e, r29	; 62
     11c:	cd bf       	out	0x3d, r28	; 61

0000011e <__do_copy_data>:
     11e:	11 e0       	ldi	r17, 0x01	; 1
     120:	a0 e0       	ldi	r26, 0x00	; 0
     122:	b1 e0       	ldi	r27, 0x01	; 1
     124:	e4 ea       	ldi	r30, 0xA4	; 164
     126:	f7 e1       	ldi	r31, 0x17	; 23
     128:	02 c0       	rjmp	.+4      	; 0x12e <__do_copy_data+0x10>
     12a:	05 90       	lpm	r0, Z+
     12c:	0d 92       	st	X+, r0
     12e:	aa 33       	cpi	r26, 0x3A	; 58
     130:	b1 07       	cpc	r27, r17
     132:	d9 f7       	brne	.-10     	; 0x12a <__do_copy_data+0xc>

00000134 <__do_clear_bss>:
     134:	22 e0       	ldi	r18, 0x02	; 2
     136:	aa e3       	ldi	r26, 0x3A	; 58
     138:	b1 e0       	ldi	r27, 0x01	; 1
     13a:	01 c0       	rjmp	.+2      	; 0x13e <.do_clear_bss_start>

0000013c <.do_clear_bss_loop>:
     13c:	1d 92       	st	X+, r1

0000013e <.do_clear_bss_start>:
     13e:	a8 3a       	cpi	r26, 0xA8	; 168
     140:	b2 07       	cpc	r27, r18
     142:	e1 f7       	brne	.-8      	; 0x13c <.do_clear_bss_loop>
     144:	0e 94 26 03 	call	0x64c	; 0x64c <main>
     148:	0c 94 d0 0b 	jmp	0x17a0	; 0x17a0 <_exit>

0000014c <__bad_interrupt>:
     14c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000150 <pwm0_init>:

void pwm1_set_PD5(uint16_t limit){ 
	OCR1A = limit;
}
void pwm1_set_PD4(uint16_t limit){
	OCR1B = limit;
     150:	84 b1       	in	r24, 0x04	; 4
     152:	80 61       	ori	r24, 0x10	; 16
     154:	84 b9       	out	0x04, r24	; 4
     156:	84 b1       	in	r24, 0x04	; 4
     158:	88 60       	ori	r24, 0x08	; 8
     15a:	84 b9       	out	0x04, r24	; 4
     15c:	84 b5       	in	r24, 0x24	; 36
     15e:	80 68       	ori	r24, 0x80	; 128
     160:	84 bd       	out	0x24, r24	; 36
     162:	84 b5       	in	r24, 0x24	; 36
     164:	80 62       	ori	r24, 0x20	; 32
     166:	84 bd       	out	0x24, r24	; 36
     168:	84 b5       	in	r24, 0x24	; 36
     16a:	8f 7b       	andi	r24, 0xBF	; 191
     16c:	84 bd       	out	0x24, r24	; 36
     16e:	84 b5       	in	r24, 0x24	; 36
     170:	8f 7e       	andi	r24, 0xEF	; 239
     172:	84 bd       	out	0x24, r24	; 36
     174:	84 b5       	in	r24, 0x24	; 36
     176:	81 60       	ori	r24, 0x01	; 1
     178:	84 bd       	out	0x24, r24	; 36
     17a:	84 b5       	in	r24, 0x24	; 36
     17c:	8d 7f       	andi	r24, 0xFD	; 253
     17e:	84 bd       	out	0x24, r24	; 36
     180:	16 bc       	out	0x26, r1	; 38
     182:	85 b5       	in	r24, 0x25	; 37
     184:	81 60       	ori	r24, 0x01	; 1
     186:	85 bd       	out	0x25, r24	; 37
     188:	85 b5       	in	r24, 0x25	; 37
     18a:	8d 7f       	andi	r24, 0xFD	; 253
     18c:	85 bd       	out	0x25, r24	; 37
     18e:	85 b5       	in	r24, 0x25	; 37
     190:	8b 7f       	andi	r24, 0xFB	; 251
     192:	85 bd       	out	0x25, r24	; 37
     194:	08 95       	ret

00000196 <pwm0_set_PB3>:
     196:	87 bd       	out	0x27, r24	; 39
     198:	08 95       	ret

0000019a <pwm0_set_PB4>:
     19a:	88 bd       	out	0x28, r24	; 40
     19c:	08 95       	ret

0000019e <pwm2_init>:
}

void pwm2_init(){
	// broches de PWM en sortie
	DDRD = set_bit(DDRD, PD6);
     19e:	8a b1       	in	r24, 0x0a	; 10
     1a0:	80 64       	ori	r24, 0x40	; 64
     1a2:	8a b9       	out	0x0a, r24	; 10
	DDRD = set_bit(DDRD, PD7);
     1a4:	8a b1       	in	r24, 0x0a	; 10
     1a6:	80 68       	ori	r24, 0x80	; 128
     1a8:	8a b9       	out	0x0a, r24	; 10
	// PEUT ETRE AUTRE CHOSE
	// 2-Initialisation du TIMER 0
	// 2.1- Mode de comparaison : "Toggle on compare match"

	
	TCCR2A = set_bit(TCCR2A,COM0A1);
     1aa:	e0 eb       	ldi	r30, 0xB0	; 176
     1ac:	f0 e0       	ldi	r31, 0x00	; 0
     1ae:	80 81       	ld	r24, Z
     1b0:	80 68       	ori	r24, 0x80	; 128
     1b2:	80 83       	st	Z, r24
	TCCR2A = set_bit(TCCR2A,COM0B1);
     1b4:	80 81       	ld	r24, Z
     1b6:	80 62       	ori	r24, 0x20	; 32
     1b8:	80 83       	st	Z, r24
	TCCR2A = clear_bit(TCCR2A,COM0A0);
     1ba:	80 81       	ld	r24, Z
     1bc:	8f 7b       	andi	r24, 0xBF	; 191
     1be:	80 83       	st	Z, r24
	TCCR2A = clear_bit(TCCR2A,COM0B0);
     1c0:	80 81       	ld	r24, Z
     1c2:	8f 7e       	andi	r24, 0xEF	; 239
     1c4:	80 83       	st	Z, r24
	
	
	
	// 2.2- Mode du compteur :  "PWM phase correct"
	
	TCCR2A = set_bit(TCCR2A,WGM00);
     1c6:	80 81       	ld	r24, Z
     1c8:	81 60       	ori	r24, 0x01	; 1
     1ca:	80 83       	st	Z, r24
	TCCR2A = clear_bit(TCCR2A,WGM01);
     1cc:	80 81       	ld	r24, Z
     1ce:	8d 7f       	andi	r24, 0xFD	; 253
     1d0:	80 83       	st	Z, r24
	
	// 2.3- Fixer la valeur initiale du compteur 0 à 0
	
	TCNT2 = 0;
     1d2:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
	
	// 2.4- Facteur de division de fréquence : 1
	
	TCCR2B = set_bit(TCCR2B,CS00);
     1d6:	e1 eb       	ldi	r30, 0xB1	; 177
     1d8:	f0 e0       	ldi	r31, 0x00	; 0
     1da:	80 81       	ld	r24, Z
     1dc:	81 60       	ori	r24, 0x01	; 1
     1de:	80 83       	st	Z, r24
	TCCR2B = clear_bit(TCCR2B,CS01);
     1e0:	80 81       	ld	r24, Z
     1e2:	8d 7f       	andi	r24, 0xFD	; 253
     1e4:	80 83       	st	Z, r24
	TCCR2B = clear_bit(TCCR2B,CS02);
     1e6:	80 81       	ld	r24, Z
     1e8:	8b 7f       	andi	r24, 0xFB	; 251
     1ea:	80 83       	st	Z, r24
     1ec:	08 95       	ret

000001ee <fifo_init>:
void fifo_clean(fifo_t* fifo){
	
	fifo->in_offset = fifo->out_offset;
	fifo->is_full = FALSE;
	fifo->is_empty = TRUE;
	fifo->nb_line = 0;
     1ee:	fc 01       	movw	r30, r24
     1f0:	71 83       	std	Z+1, r23	; 0x01
     1f2:	60 83       	st	Z, r22
     1f4:	42 83       	std	Z+2, r20	; 0x02
     1f6:	13 82       	std	Z+3, r1	; 0x03
     1f8:	14 82       	std	Z+4, r1	; 0x04
     1fa:	81 e0       	ldi	r24, 0x01	; 1
     1fc:	85 83       	std	Z+5, r24	; 0x05
     1fe:	16 82       	std	Z+6, r1	; 0x06
     200:	17 82       	std	Z+7, r1	; 0x07
     202:	08 95       	ret

00000204 <fifo_push>:
     204:	fc 01       	movw	r30, r24
     206:	86 81       	ldd	r24, Z+6	; 0x06
     208:	81 11       	cpse	r24, r1
     20a:	1f c0       	rjmp	.+62     	; 0x24a <fifo_push+0x46>
     20c:	a0 81       	ld	r26, Z
     20e:	b1 81       	ldd	r27, Z+1	; 0x01
     210:	83 81       	ldd	r24, Z+3	; 0x03
     212:	a8 0f       	add	r26, r24
     214:	b1 1d       	adc	r27, r1
     216:	6c 93       	st	X, r22
     218:	15 82       	std	Z+5, r1	; 0x05
     21a:	23 81       	ldd	r18, Z+3	; 0x03
     21c:	42 2f       	mov	r20, r18
     21e:	50 e0       	ldi	r21, 0x00	; 0
     220:	82 81       	ldd	r24, Z+2	; 0x02
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	01 97       	sbiw	r24, 0x01	; 1
     226:	48 17       	cp	r20, r24
     228:	59 07       	cpc	r21, r25
     22a:	11 f4       	brne	.+4      	; 0x230 <fifo_push+0x2c>
     22c:	13 82       	std	Z+3, r1	; 0x03
     22e:	02 c0       	rjmp	.+4      	; 0x234 <fifo_push+0x30>
     230:	2f 5f       	subi	r18, 0xFF	; 255
     232:	23 83       	std	Z+3, r18	; 0x03
     234:	6a 30       	cpi	r22, 0x0A	; 10
     236:	19 f4       	brne	.+6      	; 0x23e <fifo_push+0x3a>
     238:	87 81       	ldd	r24, Z+7	; 0x07
     23a:	8f 5f       	subi	r24, 0xFF	; 255
     23c:	87 83       	std	Z+7, r24	; 0x07
     23e:	93 81       	ldd	r25, Z+3	; 0x03
     240:	84 81       	ldd	r24, Z+4	; 0x04
     242:	98 13       	cpse	r25, r24
     244:	02 c0       	rjmp	.+4      	; 0x24a <fifo_push+0x46>
     246:	81 e0       	ldi	r24, 0x01	; 1
     248:	86 83       	std	Z+6, r24	; 0x06
     24a:	08 95       	ret

0000024c <fifo_pop>:
     24c:	fc 01       	movw	r30, r24
     24e:	85 81       	ldd	r24, Z+5	; 0x05
     250:	81 11       	cpse	r24, r1
     252:	20 c0       	rjmp	.+64     	; 0x294 <fifo_pop+0x48>
     254:	a0 81       	ld	r26, Z
     256:	b1 81       	ldd	r27, Z+1	; 0x01
     258:	94 81       	ldd	r25, Z+4	; 0x04
     25a:	49 2f       	mov	r20, r25
     25c:	50 e0       	ldi	r21, 0x00	; 0
     25e:	a4 0f       	add	r26, r20
     260:	b5 1f       	adc	r27, r21
     262:	8c 91       	ld	r24, X
     264:	16 82       	std	Z+6, r1	; 0x06
     266:	22 81       	ldd	r18, Z+2	; 0x02
     268:	30 e0       	ldi	r19, 0x00	; 0
     26a:	21 50       	subi	r18, 0x01	; 1
     26c:	31 09       	sbc	r19, r1
     26e:	42 17       	cp	r20, r18
     270:	53 07       	cpc	r21, r19
     272:	11 f4       	brne	.+4      	; 0x278 <fifo_pop+0x2c>
     274:	14 82       	std	Z+4, r1	; 0x04
     276:	02 c0       	rjmp	.+4      	; 0x27c <fifo_pop+0x30>
     278:	9f 5f       	subi	r25, 0xFF	; 255
     27a:	94 83       	std	Z+4, r25	; 0x04
     27c:	8a 30       	cpi	r24, 0x0A	; 10
     27e:	19 f4       	brne	.+6      	; 0x286 <fifo_pop+0x3a>
     280:	97 81       	ldd	r25, Z+7	; 0x07
     282:	91 50       	subi	r25, 0x01	; 1
     284:	97 83       	std	Z+7, r25	; 0x07
     286:	24 81       	ldd	r18, Z+4	; 0x04
     288:	93 81       	ldd	r25, Z+3	; 0x03
     28a:	29 13       	cpse	r18, r25
     28c:	04 c0       	rjmp	.+8      	; 0x296 <fifo_pop+0x4a>
     28e:	91 e0       	ldi	r25, 0x01	; 1
     290:	95 83       	std	Z+5, r25	; 0x05
     292:	08 95       	ret
     294:	80 e0       	ldi	r24, 0x00	; 0
     296:	08 95       	ret

00000298 <fifo_is_empty>:


bool fifo_is_empty(fifo_t* fifo) {

    return fifo->is_empty;
}
     298:	fc 01       	movw	r30, r24
     29a:	85 81       	ldd	r24, Z+5	; 0x05
     29c:	08 95       	ret

0000029e <clock_data>:

    COMMAND_MODE();

    clock_data(0b00010000 | right_left);     //Cursor or display shift

    DATA_MODE();
     29e:	88 b9       	out	0x08, r24	; 8
     2a0:	85 e8       	ldi	r24, 0x85	; 133
     2a2:	8a 95       	dec	r24
     2a4:	f1 f7       	brne	.-4      	; 0x2a2 <clock_data+0x4>
     2a6:	00 00       	nop
     2a8:	82 b1       	in	r24, 0x02	; 2
     2aa:	8f 77       	andi	r24, 0x7F	; 127
     2ac:	82 b9       	out	0x02, r24	; 2
     2ae:	85 e8       	ldi	r24, 0x85	; 133
     2b0:	8a 95       	dec	r24
     2b2:	f1 f7       	brne	.-4      	; 0x2b0 <clock_data+0x12>
     2b4:	00 00       	nop
     2b6:	82 b1       	in	r24, 0x02	; 2
     2b8:	80 68       	ori	r24, 0x80	; 128
     2ba:	82 b9       	out	0x02, r24	; 2
     2bc:	08 95       	ret

000002be <hd44780_clear_display>:
     2be:	82 b1       	in	r24, 0x02	; 2
     2c0:	8f 7d       	andi	r24, 0xDF	; 223
     2c2:	82 b9       	out	0x02, r24	; 2
     2c4:	81 e0       	ldi	r24, 0x01	; 1
     2c6:	0e 94 4f 01 	call	0x29e	; 0x29e <clock_data>
     2ca:	8f e9       	ldi	r24, 0x9F	; 159
     2cc:	9f e0       	ldi	r25, 0x0F	; 15
     2ce:	01 97       	sbiw	r24, 0x01	; 1
     2d0:	f1 f7       	brne	.-4      	; 0x2ce <hd44780_clear_display+0x10>
     2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <hd44780_clear_display+0x16>
     2d4:	00 00       	nop
     2d6:	82 b1       	in	r24, 0x02	; 2
     2d8:	80 62       	ori	r24, 0x20	; 32
     2da:	82 b9       	out	0x02, r24	; 2
     2dc:	08 95       	ret

000002de <hd44780_set_entry_mode>:
     2de:	81 30       	cpi	r24, 0x01	; 1
     2e0:	11 f4       	brne	.+4      	; 0x2e6 <hd44780_set_entry_mode+0x8>
     2e2:	82 e0       	ldi	r24, 0x02	; 2
     2e4:	01 c0       	rjmp	.+2      	; 0x2e8 <hd44780_set_entry_mode+0xa>
     2e6:	80 e0       	ldi	r24, 0x00	; 0
     2e8:	92 b1       	in	r25, 0x02	; 2
     2ea:	9f 7d       	andi	r25, 0xDF	; 223
     2ec:	92 b9       	out	0x02, r25	; 2
     2ee:	84 60       	ori	r24, 0x04	; 4
     2f0:	0e 94 4f 01 	call	0x29e	; 0x29e <clock_data>
     2f4:	82 b1       	in	r24, 0x02	; 2
     2f6:	80 62       	ori	r24, 0x20	; 32
     2f8:	82 b9       	out	0x02, r24	; 2
     2fa:	08 95       	ret

000002fc <hd44780_set_display_control>:
     2fc:	81 30       	cpi	r24, 0x01	; 1
     2fe:	11 f0       	breq	.+4      	; 0x304 <hd44780_set_display_control+0x8>
     300:	80 e0       	ldi	r24, 0x00	; 0
     302:	01 c0       	rjmp	.+2      	; 0x306 <hd44780_set_display_control+0xa>
     304:	84 e0       	ldi	r24, 0x04	; 4
     306:	61 30       	cpi	r22, 0x01	; 1
     308:	09 f4       	brne	.+2      	; 0x30c <hd44780_set_display_control+0x10>
     30a:	82 60       	ori	r24, 0x02	; 2
     30c:	41 30       	cpi	r20, 0x01	; 1
     30e:	09 f4       	brne	.+2      	; 0x312 <hd44780_set_display_control+0x16>
     310:	81 60       	ori	r24, 0x01	; 1
     312:	92 b1       	in	r25, 0x02	; 2
     314:	9f 7d       	andi	r25, 0xDF	; 223
     316:	92 b9       	out	0x02, r25	; 2
     318:	88 60       	ori	r24, 0x08	; 8
     31a:	0e 94 4f 01 	call	0x29e	; 0x29e <clock_data>
     31e:	82 b1       	in	r24, 0x02	; 2
     320:	80 62       	ori	r24, 0x20	; 32
     322:	82 b9       	out	0x02, r24	; 2
     324:	08 95       	ret

00000326 <hd44780_init>:
     326:	cf 93       	push	r28
     328:	df 93       	push	r29
     32a:	c6 2f       	mov	r28, r22
     32c:	d4 2f       	mov	r29, r20
     32e:	98 e3       	ldi	r25, 0x38	; 56
     330:	98 b9       	out	0x08, r25	; 8
     332:	92 b1       	in	r25, 0x02	; 2
     334:	9f 7d       	andi	r25, 0xDF	; 223
     336:	92 b9       	out	0x02, r25	; 2
     338:	92 b1       	in	r25, 0x02	; 2
     33a:	9f 7b       	andi	r25, 0xBF	; 191
     33c:	92 b9       	out	0x02, r25	; 2
     33e:	9f ef       	ldi	r25, 0xFF	; 255
     340:	97 b9       	out	0x07, r25	; 7
     342:	91 b1       	in	r25, 0x01	; 1
     344:	90 6e       	ori	r25, 0xE0	; 224
     346:	91 b9       	out	0x01, r25	; 1
     348:	ef e1       	ldi	r30, 0x1F	; 31
     34a:	fe e4       	ldi	r31, 0x4E	; 78
     34c:	31 97       	sbiw	r30, 0x01	; 1
     34e:	f1 f7       	brne	.-4      	; 0x34c <hd44780_init+0x26>
     350:	00 c0       	rjmp	.+0      	; 0x352 <hd44780_init+0x2c>
     352:	00 00       	nop
     354:	92 b1       	in	r25, 0x02	; 2
     356:	9f 77       	andi	r25, 0x7F	; 127
     358:	92 b9       	out	0x02, r25	; 2
     35a:	ef e0       	ldi	r30, 0x0F	; 15
     35c:	f7 e2       	ldi	r31, 0x27	; 39
     35e:	31 97       	sbiw	r30, 0x01	; 1
     360:	f1 f7       	brne	.-4      	; 0x35e <hd44780_init+0x38>
     362:	00 c0       	rjmp	.+0      	; 0x364 <hd44780_init+0x3e>
     364:	00 00       	nop
     366:	92 b1       	in	r25, 0x02	; 2
     368:	90 68       	ori	r25, 0x80	; 128
     36a:	92 b9       	out	0x02, r25	; 2
     36c:	ef e0       	ldi	r30, 0x0F	; 15
     36e:	f7 e2       	ldi	r31, 0x27	; 39
     370:	31 97       	sbiw	r30, 0x01	; 1
     372:	f1 f7       	brne	.-4      	; 0x370 <hd44780_init+0x4a>
     374:	00 c0       	rjmp	.+0      	; 0x376 <hd44780_init+0x50>
     376:	00 00       	nop
     378:	92 b1       	in	r25, 0x02	; 2
     37a:	9f 77       	andi	r25, 0x7F	; 127
     37c:	92 b9       	out	0x02, r25	; 2
     37e:	e7 ec       	ldi	r30, 0xC7	; 199
     380:	f0 e0       	ldi	r31, 0x00	; 0
     382:	31 97       	sbiw	r30, 0x01	; 1
     384:	f1 f7       	brne	.-4      	; 0x382 <hd44780_init+0x5c>
     386:	00 c0       	rjmp	.+0      	; 0x388 <hd44780_init+0x62>
     388:	00 00       	nop
     38a:	92 b1       	in	r25, 0x02	; 2
     38c:	90 68       	ori	r25, 0x80	; 128
     38e:	92 b9       	out	0x02, r25	; 2
     390:	e7 ec       	ldi	r30, 0xC7	; 199
     392:	f0 e0       	ldi	r31, 0x00	; 0
     394:	31 97       	sbiw	r30, 0x01	; 1
     396:	f1 f7       	brne	.-4      	; 0x394 <hd44780_init+0x6e>
     398:	00 c0       	rjmp	.+0      	; 0x39a <hd44780_init+0x74>
     39a:	00 00       	nop
     39c:	92 b1       	in	r25, 0x02	; 2
     39e:	9f 77       	andi	r25, 0x7F	; 127
     3a0:	92 b9       	out	0x02, r25	; 2
     3a2:	ef ef       	ldi	r30, 0xFF	; 255
     3a4:	f5 e0       	ldi	r31, 0x05	; 5
     3a6:	31 97       	sbiw	r30, 0x01	; 1
     3a8:	f1 f7       	brne	.-4      	; 0x3a6 <hd44780_init+0x80>
     3aa:	00 c0       	rjmp	.+0      	; 0x3ac <hd44780_init+0x86>
     3ac:	00 00       	nop
     3ae:	92 b1       	in	r25, 0x02	; 2
     3b0:	90 68       	ori	r25, 0x80	; 128
     3b2:	92 b9       	out	0x02, r25	; 2
     3b4:	0e 94 6f 01 	call	0x2de	; 0x2de <hd44780_set_entry_mode>
     3b8:	4d 2f       	mov	r20, r29
     3ba:	6c 2f       	mov	r22, r28
     3bc:	81 e0       	ldi	r24, 0x01	; 1
     3be:	0e 94 7e 01 	call	0x2fc	; 0x2fc <hd44780_set_display_control>
     3c2:	0e 94 5f 01 	call	0x2be	; 0x2be <hd44780_clear_display>
     3c6:	df 91       	pop	r29
     3c8:	cf 91       	pop	r28
     3ca:	08 95       	ret

000003cc <hd44780_set_cursor_position>:
     3cc:	61 30       	cpi	r22, 0x01	; 1
     3ce:	11 f0       	breq	.+4      	; 0x3d4 <hd44780_set_cursor_position+0x8>
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	01 c0       	rjmp	.+2      	; 0x3d6 <hd44780_set_cursor_position+0xa>
     3d4:	90 e4       	ldi	r25, 0x40	; 64
     3d6:	89 0f       	add	r24, r25
     3d8:	92 b1       	in	r25, 0x02	; 2
     3da:	9f 7d       	andi	r25, 0xDF	; 223
     3dc:	92 b9       	out	0x02, r25	; 2
     3de:	80 68       	ori	r24, 0x80	; 128
     3e0:	0e 94 4f 01 	call	0x29e	; 0x29e <clock_data>
     3e4:	82 b1       	in	r24, 0x02	; 2
     3e6:	80 62       	ori	r24, 0x20	; 32
     3e8:	82 b9       	out	0x02, r24	; 2
     3ea:	08 95       	ret

000003ec <hd44780_write_char>:
}


void hd44780_write_char(char character){
     3ec:	e8 2f       	mov	r30, r24
	const char MAX_CHAR = 255;
#else
	const char MAX_CHAR = CHAR_LEFT_ARROW;
#endif

    DATA_MODE();
     3ee:	82 b1       	in	r24, 0x02	; 2
     3f0:	80 62       	ori	r24, 0x20	; 32
     3f2:	82 b9       	out	0x02, r24	; 2

    if((character >= ' ') && (character <= MAX_CHAR)){
     3f4:	e0 32       	cpi	r30, 0x20	; 32
     3f6:	20 f0       	brcs	.+8      	; 0x400 <__EEPROM_REGION_LENGTH__>

            clock_data(character);
     3f8:	8e 2f       	mov	r24, r30
     3fa:	0e 94 4f 01 	call	0x29e	; 0x29e <clock_data>
     3fe:	08 95       	ret
    }

    else{
		
		switch(character){
     400:	8e 2f       	mov	r24, r30
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	fc 01       	movw	r30, r24
     406:	e0 5c       	subi	r30, 0xC0	; 192
     408:	f1 09       	sbc	r31, r1
     40a:	ed 33       	cpi	r30, 0x3D	; 61
     40c:	f1 05       	cpc	r31, r1
     40e:	d0 f4       	brcc	.+52     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
     410:	e2 5c       	subi	r30, 0xC2	; 194
     412:	ff 4f       	sbci	r31, 0xFF	; 255
     414:	0c 94 ac 05 	jmp	0xb58	; 0xb58 <__tablejump2__>
		case 0xC0:	//À
		case 0xC1:	//A accent aigue
		case 0xC2:	//Â
		case 0xC3:	//A ???
		case 0xC4:	//Ä
			character = 'A';
     418:	81 e4       	ldi	r24, 0x41	; 65
     41a:	17 c0       	rjmp	.+46     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
					
		case 0xC8:	//È
		case 0xC9:	//É
		case 0xCA:	//Ê
		case 0xCB:	//Ë
			character = 'E';
     41c:	85 e4       	ldi	r24, 0x45	; 69
			break;
     41e:	15 c0       	rjmp	.+42     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
					
		case 0xCC:	//Ì
		case 0xCD:	//I accent aigue
		case 0xCE:	//Î
		case 0xCF:	//Ï
			character = 'I';
     420:	89 e4       	ldi	r24, 0x49	; 73
			break;
     422:	13 c0       	rjmp	.+38     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
		case 0xD2:	//Ò
		case 0xD3:	//O accent aigue
		case 0xD4:	//Ô
		case 0xD5:	//O ???
		case 0xD6:	//Ö
			character = 'O';
     424:	8f e4       	ldi	r24, 0x4F	; 79
			break;
     426:	11 c0       	rjmp	.+34     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
					
		case 0xD9:	//Ù
		case 0xDA:	//U accent aigue
		case 0xDB:	//Û
		case 0xDC:	//Ü
			character = 'U';
     428:	85 e5       	ldi	r24, 0x55	; 85
			break;
     42a:	0f c0       	rjmp	.+30     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
		case 0xE0:	//à
		case 0xE1:	//a accent aigue
		case 0xE2:	//â
		case 0xE3:	//a ???
		case 0xE4:	//ä
			character = 'a';
     42c:	81 e6       	ldi	r24, 0x61	; 97
			break;
     42e:	0d c0       	rjmp	.+26     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
		
		case 0xE7:	//ç
			character = 'c';
     430:	83 e6       	ldi	r24, 0x63	; 99
			break;
     432:	0b c0       	rjmp	.+22     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
			
		case 0xE8:	//è
		case 0xE9:	//é
		case 0xEA:	//ê
		case 0xEB:	//ë
			character = 'e';
     434:	85 e6       	ldi	r24, 0x65	; 101
			break;
     436:	09 c0       	rjmp	.+18     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
			
		case 0xEC:	//ì
		case 0xED:	//i accent aigue
		case 0xEE:	//î
		case 0xEF:	//ï
			character = 'i';
     438:	89 e6       	ldi	r24, 0x69	; 105
			break;
     43a:	07 c0       	rjmp	.+14     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
		case 0xF2:	//ò
		case 0xF3:	//o accent aigue
		case 0xF4:	//ô
		case 0xF5:	//o ???
		case 0xF6:	//ö
			character = 'o';
     43c:	8f e6       	ldi	r24, 0x6F	; 111
			break;
     43e:	05 c0       	rjmp	.+10     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
			
		case 0xF9:	//ù
		case 0xFA:	//u accent aigue
		case 0xFB:	//û
		case 0xFC:	//ü
			character = 'u';
     440:	85 e7       	ldi	r24, 0x75	; 117
			break;
     442:	03 c0       	rjmp	.+6      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
		
		default:
			character = 0b10100101;  //une boule pas rapport
     444:	85 ea       	ldi	r24, 0xA5	; 165
			break;
     446:	01 c0       	rjmp	.+2      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
		case 0xC4:	//Ä
			character = 'A';
			break;
					
		case 0xC7:	//Ç
			character = 'C';
     448:	83 e4       	ldi	r24, 0x43	; 67
		default:
			character = 0b10100101;  //une boule pas rapport
			break;
		}				

        clock_data(character);  //une boule pas rapport
     44a:	0e 94 4f 01 	call	0x29e	; 0x29e <clock_data>
     44e:	08 95       	ret

00000450 <lcd_init>:
Global functions LCD
******************************************************************************/

void lcd_init(void){

    hd44780_init(TRUE, TRUE, FALSE);
     450:	40 e0       	ldi	r20, 0x00	; 0
     452:	61 e0       	ldi	r22, 0x01	; 1
     454:	81 e0       	ldi	r24, 0x01	; 1
     456:	0e 94 93 01 	call	0x326	; 0x326 <hd44780_init>

    local_index = 0;
     45a:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <local_index>
	clear_required_flag = FALSE;
     45e:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <__data_end>
     462:	08 95       	ret

00000464 <lcd_clear_display>:
}


void lcd_clear_display(){

    hd44780_clear_display();
     464:	0e 94 5f 01 	call	0x2be	; 0x2be <hd44780_clear_display>

    local_index = 0;
     468:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <local_index>
     46c:	08 95       	ret

0000046e <lcd_set_cursor_position>:
}


void lcd_set_cursor_position(uint8_t col, uint8_t row){
     46e:	cf 93       	push	r28
     470:	df 93       	push	r29

    if((col >= 0) && (col < LCD_NB_COL) && (row >= 0) && (row < LCD_NB_ROW)){
     472:	80 31       	cpi	r24, 0x10	; 16
     474:	68 f4       	brcc	.+26     	; 0x490 <lcd_set_cursor_position+0x22>
     476:	62 30       	cpi	r22, 0x02	; 2
     478:	58 f4       	brcc	.+22     	; 0x490 <lcd_set_cursor_position+0x22>
     47a:	d6 2f       	mov	r29, r22
     47c:	c8 2f       	mov	r28, r24

        hd44780_set_cursor_position(col, row);
     47e:	0e 94 e6 01 	call	0x3cc	; 0x3cc <hd44780_set_cursor_position>

        local_index = col + row * LCD_NB_COL;
     482:	8c 2f       	mov	r24, r28
     484:	90 e1       	ldi	r25, 0x10	; 16
     486:	d9 9f       	mul	r29, r25
     488:	80 0d       	add	r24, r0
     48a:	11 24       	eor	r1, r1
     48c:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <local_index>
    }
}
     490:	df 91       	pop	r29
     492:	cf 91       	pop	r28
     494:	08 95       	ret

00000496 <index_to_col>:
/* lcd */

uint8_t index_to_col(uint8_t index){

    return index % LCD_NB_COL;
}
     496:	8f 70       	andi	r24, 0x0F	; 15
     498:	08 95       	ret

0000049a <index_to_row>:


uint8_t index_to_row(uint8_t index){

    return index / LCD_NB_COL;
}
     49a:	82 95       	swap	r24
     49c:	8f 70       	andi	r24, 0x0F	; 15
     49e:	08 95       	ret

000004a0 <shift_local_index>:

bool shift_local_index(bool foward){
     4a0:	1f 93       	push	r17
     4a2:	cf 93       	push	r28
     4a4:	df 93       	push	r29
     4a6:	18 2f       	mov	r17, r24

    uint8_t previous_row;

    previous_row = index_to_row(local_index);
     4a8:	c0 91 3b 01 	lds	r28, 0x013B	; 0x80013b <local_index>
     4ac:	8c 2f       	mov	r24, r28
     4ae:	0e 94 4d 02 	call	0x49a	; 0x49a <index_to_row>
     4b2:	d8 2f       	mov	r29, r24

    /* Si on est dans le sens foward */
    if(foward == TRUE){
     4b4:	11 30       	cpi	r17, 0x01	; 1
     4b6:	49 f4       	brne	.+18     	; 0x4ca <shift_local_index+0x2a>

        /* Si on est à la fin */
        if(local_index >= MAX_INDEX - 1){
     4b8:	cf 31       	cpi	r28, 0x1F	; 31
     4ba:	18 f0       	brcs	.+6      	; 0x4c2 <shift_local_index+0x22>

			local_index = 0;
     4bc:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <local_index>
     4c0:	0d c0       	rjmp	.+26     	; 0x4dc <shift_local_index+0x3c>
        }

        else{

            local_index++;
     4c2:	cf 5f       	subi	r28, 0xFF	; 255
     4c4:	c0 93 3b 01 	sts	0x013B, r28	; 0x80013b <local_index>
     4c8:	09 c0       	rjmp	.+18     	; 0x4dc <shift_local_index+0x3c>

    /* Si on est dans le sens décrémental foward ou incrémental backward*/
    else{

        /* Si on est au début */
        if(local_index <= 0){
     4ca:	c1 11       	cpse	r28, r1
     4cc:	04 c0       	rjmp	.+8      	; 0x4d6 <shift_local_index+0x36>
			
            local_index = MAX_INDEX - 1;
     4ce:	8f e1       	ldi	r24, 0x1F	; 31
     4d0:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <local_index>
     4d4:	03 c0       	rjmp	.+6      	; 0x4dc <shift_local_index+0x3c>
        }

        else{

            local_index--;
     4d6:	c1 50       	subi	r28, 0x01	; 1
     4d8:	c0 93 3b 01 	sts	0x013B, r28	; 0x80013b <local_index>
        }
    }

    /* Si la row actuelle ne correspond pas à l'ancienne il va falloir manuellement
    déplacer le curseur */
    return (previous_row != index_to_row(local_index));
     4dc:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <local_index>
     4e0:	0e 94 4d 02 	call	0x49a	; 0x49a <index_to_row>
     4e4:	91 e0       	ldi	r25, 0x01	; 1
     4e6:	d8 13       	cpse	r29, r24
     4e8:	01 c0       	rjmp	.+2      	; 0x4ec <shift_local_index+0x4c>
     4ea:	90 e0       	ldi	r25, 0x00	; 0
}
     4ec:	89 2f       	mov	r24, r25
     4ee:	df 91       	pop	r29
     4f0:	cf 91       	pop	r28
     4f2:	1f 91       	pop	r17
     4f4:	08 95       	ret

000004f6 <lcd_shift_cursor>:
        local_index = col + row * LCD_NB_COL;
    }
}


void lcd_shift_cursor(lcd_shift_e shift){
     4f6:	cf 93       	push	r28
     4f8:	df 93       	push	r29

    switch(shift){
     4fa:	90 e0       	ldi	r25, 0x00	; 0
     4fc:	88 30       	cpi	r24, 0x08	; 8
     4fe:	91 05       	cpc	r25, r1
     500:	08 f0       	brcs	.+2      	; 0x504 <lcd_shift_cursor+0xe>
     502:	51 c0       	rjmp	.+162    	; 0x5a6 <lcd_shift_cursor+0xb0>
     504:	fc 01       	movw	r30, r24
     506:	e5 58       	subi	r30, 0x85	; 133
     508:	ff 4f       	sbci	r31, 0xFF	; 255
     50a:	0c 94 ac 05 	jmp	0xb58	; 0xb58 <__tablejump2__>
    case LCD_SHIFT_RIGHT:

        shift_local_index(TRUE);
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	0e 94 50 02 	call	0x4a0	; 0x4a0 <shift_local_index>

        break;
     514:	48 c0       	rjmp	.+144    	; 0x5a6 <lcd_shift_cursor+0xb0>

    case LCD_SHIFT_LEFT:

        shift_local_index(FALSE);
     516:	80 e0       	ldi	r24, 0x00	; 0
     518:	0e 94 50 02 	call	0x4a0	; 0x4a0 <shift_local_index>

        break;
     51c:	44 c0       	rjmp	.+136    	; 0x5a6 <lcd_shift_cursor+0xb0>

    case LCD_SHIFT_UP:

		// Si on est sur la ligne du haut
        if(index_to_row(local_index) <= 0){
     51e:	c0 91 3b 01 	lds	r28, 0x013B	; 0x80013b <local_index>
     522:	8c 2f       	mov	r24, r28
     524:	0e 94 4d 02 	call	0x49a	; 0x49a <index_to_row>
     528:	81 11       	cpse	r24, r1
     52a:	07 c0       	rjmp	.+14     	; 0x53a <lcd_shift_cursor+0x44>

			// On se rend à la fin moins une ligne
            local_index += (MAX_INDEX - LCD_NB_COL);
     52c:	c0 5f       	subi	r28, 0xF0	; 240
     52e:	c0 93 3b 01 	sts	0x013B, r28	; 0x80013b <local_index>
			
			clear_required_flag = TRUE;
     532:	81 e0       	ldi	r24, 0x01	; 1
     534:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
     538:	36 c0       	rjmp	.+108    	; 0x5a6 <lcd_shift_cursor+0xb0>
        }

        else{
			
			// On recule d'une ligne
            local_index -= LCD_NB_COL;
     53a:	c0 51       	subi	r28, 0x10	; 16
     53c:	c0 93 3b 01 	sts	0x013B, r28	; 0x80013b <local_index>
     540:	32 c0       	rjmp	.+100    	; 0x5a6 <lcd_shift_cursor+0xb0>
        break;

    case LCD_SHIFT_DOWN:

		// Si on est rendu à la dernière ligne
        if(index_to_row(local_index) >= LCD_NB_ROW - 1){
     542:	c0 91 3b 01 	lds	r28, 0x013B	; 0x80013b <local_index>
     546:	8c 2f       	mov	r24, r28
     548:	0e 94 4d 02 	call	0x49a	; 0x49a <index_to_row>
     54c:	88 23       	and	r24, r24
     54e:	39 f0       	breq	.+14     	; 0x55e <lcd_shift_cursor+0x68>

			// On ne garde que le numéro de colone (donc sa ramène sur la première ligne)
            local_index %= LCD_NB_COL;
     550:	cf 70       	andi	r28, 0x0F	; 15
     552:	c0 93 3b 01 	sts	0x013B, r28	; 0x80013b <local_index>
			
			clear_required_flag = TRUE;
     556:	81 e0       	ldi	r24, 0x01	; 1
     558:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
     55c:	24 c0       	rjmp	.+72     	; 0x5a6 <lcd_shift_cursor+0xb0>
        }

        else{

			// On avance d'une ligne
            local_index += LCD_NB_COL;
     55e:	c0 5f       	subi	r28, 0xF0	; 240
     560:	c0 93 3b 01 	sts	0x013B, r28	; 0x80013b <local_index>
     564:	20 c0       	rjmp	.+64     	; 0x5a6 <lcd_shift_cursor+0xb0>

        break;
	
	case LCD_SHIFT_END:
	
		local_index = ((index_to_row(local_index) + 1) * LCD_NB_COL) - 1;
     566:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <local_index>
     56a:	0e 94 4d 02 	call	0x49a	; 0x49a <index_to_row>
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	01 96       	adiw	r24, 0x01	; 1
     572:	82 95       	swap	r24
     574:	80 7f       	andi	r24, 0xF0	; 240
     576:	81 50       	subi	r24, 0x01	; 1
     578:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <local_index>
		
		break;
     57c:	14 c0       	rjmp	.+40     	; 0x5a6 <lcd_shift_cursor+0xb0>
		
	case LCD_SHIFT_START:
		
		local_index = index_to_row(local_index) * LCD_NB_COL;
     57e:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <local_index>
     582:	0e 94 4d 02 	call	0x49a	; 0x49a <index_to_row>
     586:	82 95       	swap	r24
     588:	80 7f       	andi	r24, 0xF0	; 240
     58a:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <local_index>
		
		break;
     58e:	0b c0       	rjmp	.+22     	; 0x5a6 <lcd_shift_cursor+0xb0>
		
	case LCD_SHIFT_TOP:
	
		// On ne garde que le numéro de colone (donc sa ramène sur la première ligne)
		local_index %= LCD_NB_COL;
     590:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <local_index>
     594:	8f 70       	andi	r24, 0x0F	; 15
     596:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <local_index>
		
		break;
     59a:	05 c0       	rjmp	.+10     	; 0x5a6 <lcd_shift_cursor+0xb0>
		
	case LCD_SHIFT_BOTTOM:
		
		// On se rend à la fin moins une ligne
		local_index += (MAX_INDEX - LCD_NB_COL);
     59c:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <local_index>
     5a0:	80 5f       	subi	r24, 0xF0	; 240
     5a2:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <local_index>
		
		break;
	}		

    hd44780_set_cursor_position(index_to_col(local_index), index_to_row(local_index));
     5a6:	c0 91 3b 01 	lds	r28, 0x013B	; 0x80013b <local_index>
     5aa:	8c 2f       	mov	r24, r28
     5ac:	0e 94 4d 02 	call	0x49a	; 0x49a <index_to_row>
     5b0:	d8 2f       	mov	r29, r24
     5b2:	8c 2f       	mov	r24, r28
     5b4:	0e 94 4b 02 	call	0x496	; 0x496 <index_to_col>
     5b8:	6d 2f       	mov	r22, r29
     5ba:	0e 94 e6 01 	call	0x3cc	; 0x3cc <hd44780_set_cursor_position>
}
     5be:	df 91       	pop	r29
     5c0:	cf 91       	pop	r28
     5c2:	08 95       	ret

000005c4 <lcd_write_char>:


void lcd_write_char(char character){
     5c4:	cf 93       	push	r28
     5c6:	df 93       	push	r29
     5c8:	c8 2f       	mov	r28, r24

    bool unsynced;
	
	// Si il s'agit d'un des 32 premier caractères ascii, on s'attend à un contrôle
	// plutôt que l'affichage d'un caractère
	if(character < ' '){
     5ca:	80 32       	cpi	r24, 0x20	; 32
     5cc:	68 f4       	brcc	.+26     	; 0x5e8 <lcd_write_char+0x24>
		
		switch (character){
     5ce:	8a 30       	cpi	r24, 0x0A	; 10
     5d0:	19 f0       	breq	.+6      	; 0x5d8 <lcd_write_char+0x14>
     5d2:	8d 30       	cpi	r24, 0x0D	; 13
     5d4:	29 f0       	breq	.+10     	; 0x5e0 <lcd_write_char+0x1c>
     5d6:	24 c0       	rjmp	.+72     	; 0x620 <lcd_write_char+0x5c>
		case '\n':	// 0x0A	new line
			lcd_shift_cursor(LCD_SHIFT_DOWN);
     5d8:	83 e0       	ldi	r24, 0x03	; 3
     5da:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <lcd_shift_cursor>
			break;
     5de:	20 c0       	rjmp	.+64     	; 0x620 <lcd_write_char+0x5c>
		case '\r':
			lcd_shift_cursor(LCD_SHIFT_START);
     5e0:	85 e0       	ldi	r24, 0x05	; 5
     5e2:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <lcd_shift_cursor>
			break;
     5e6:	1c c0       	rjmp	.+56     	; 0x620 <lcd_write_char+0x5c>
		}		
	}

	else{
		
		if(clear_required_flag == TRUE){
     5e8:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end>
     5ec:	81 30       	cpi	r24, 0x01	; 1
     5ee:	21 f4       	brne	.+8      	; 0x5f8 <lcd_write_char+0x34>
			
			hd44780_clear_display();
     5f0:	0e 94 5f 01 	call	0x2be	; 0x2be <hd44780_clear_display>
			//hd44780_set_cursor_position(index_to_col(local_index), index_to_row(local_index));
			clear_required_flag = FALSE;
     5f4:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <__data_end>
		}
		
		hd44780_write_char(character);
     5f8:	8c 2f       	mov	r24, r28
     5fa:	0e 94 f6 01 	call	0x3ec	; 0x3ec <hd44780_write_char>

		unsynced = shift_local_index(TRUE);
     5fe:	81 e0       	ldi	r24, 0x01	; 1
     600:	0e 94 50 02 	call	0x4a0	; 0x4a0 <shift_local_index>

		if(unsynced == TRUE){
     604:	81 30       	cpi	r24, 0x01	; 1
     606:	61 f4       	brne	.+24     	; 0x620 <lcd_write_char+0x5c>

			hd44780_set_cursor_position(index_to_col(local_index), index_to_row(local_index));
     608:	c0 91 3b 01 	lds	r28, 0x013B	; 0x80013b <local_index>
     60c:	8c 2f       	mov	r24, r28
     60e:	0e 94 4d 02 	call	0x49a	; 0x49a <index_to_row>
     612:	d8 2f       	mov	r29, r24
     614:	8c 2f       	mov	r24, r28
     616:	0e 94 4b 02 	call	0x496	; 0x496 <index_to_col>
     61a:	6d 2f       	mov	r22, r29
     61c:	0e 94 e6 01 	call	0x3cc	; 0x3cc <hd44780_set_cursor_position>
		}
	}
}
     620:	df 91       	pop	r29
     622:	cf 91       	pop	r28
     624:	08 95       	ret

00000626 <lcd_write_string>:


void lcd_write_string(const char* string){
     626:	0f 93       	push	r16
     628:	1f 93       	push	r17
     62a:	cf 93       	push	r28
     62c:	8c 01       	movw	r16, r24

    uint8_t index = 0;
     62e:	c0 e0       	ldi	r28, 0x00	; 0

    while(string[index] != '\0'){
     630:	03 c0       	rjmp	.+6      	; 0x638 <lcd_write_string+0x12>

        lcd_write_char(string[index]);
     632:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <lcd_write_char>

        index++;
     636:	cf 5f       	subi	r28, 0xFF	; 255

void lcd_write_string(const char* string){

    uint8_t index = 0;

    while(string[index] != '\0'){
     638:	f8 01       	movw	r30, r16
     63a:	ec 0f       	add	r30, r28
     63c:	f1 1d       	adc	r31, r1
     63e:	80 81       	ld	r24, Z
     640:	81 11       	cpse	r24, r1
     642:	f7 cf       	rjmp	.-18     	; 0x632 <lcd_write_string+0xc>

        lcd_write_char(string[index]);

        index++;
    }
}
     644:	cf 91       	pop	r28
     646:	1f 91       	pop	r17
     648:	0f 91       	pop	r16
     64a:	08 95       	ret

0000064c <main>:
#include <stdio.h>




int main(void){
     64c:	cf 93       	push	r28
     64e:	df 93       	push	r29
     650:	cd b7       	in	r28, 0x3d	; 61
     652:	de b7       	in	r29, 0x3e	; 62
     654:	c7 55       	subi	r28, 0x57	; 87
     656:	d1 09       	sbc	r29, r1
     658:	0f b6       	in	r0, 0x3f	; 63
     65a:	f8 94       	cli
     65c:	de bf       	out	0x3e, r29	; 62
     65e:	0f be       	out	0x3f, r0	; 63
     660:	cd bf       	out	0x3d, r28	; 61
	
	uart_init(UART_0);
     662:	80 e0       	ldi	r24, 0x00	; 0
     664:	0e 94 06 05 	call	0xa0c	; 0xa0c <uart_init>
	lcd_init();
     668:	0e 94 28 02 	call	0x450	; 0x450 <lcd_init>
	pwm0_init();
     66c:	0e 94 a8 00 	call	0x150	; 0x150 <pwm0_init>
	pwm2_init();
     670:	0e 94 cf 00 	call	0x19e	; 0x19e <pwm2_init>

	sei();
     674:	78 94       	sei
	
	//*******Uint******
	uint8_t x = 0;
     676:	19 82       	std	Y+1, r1	; 0x01
	uint8_t y = 0;
     678:	1a 82       	std	Y+2, r1	; 0x02
	uint8_t z = 0;
     67a:	1b 82       	std	Y+3, r1	; 0x03
	uint8_t mode = 0;
     67c:	1c 82       	std	Y+4, r1	; 0x04
	uint8_t moteur = 0;
     67e:	1d 82       	std	Y+5, r1	; 0x05
	uint8_t lancer = 0;
     680:	1e 82       	std	Y+6, r1	; 0x06
	uint8_t joystick = 0;
     682:	1f 82       	std	Y+7, r1	; 0x07
	
	
	//******Strings*****
	char message[40] = {'\0'};
     684:	88 e2       	ldi	r24, 0x28	; 40
     686:	fe 01       	movw	r30, r28
     688:	38 96       	adiw	r30, 0x08	; 8
     68a:	df 01       	movw	r26, r30
     68c:	98 2f       	mov	r25, r24
     68e:	1d 92       	st	X+, r1
     690:	9a 95       	dec	r25
     692:	e9 f7       	brne	.-6      	; 0x68e <main+0x42>
	char str    [40] = {'\0'};
     694:	b8 96       	adiw	r30, 0x28	; 40
     696:	df 01       	movw	r26, r30
     698:	1d 92       	st	X+, r1
     69a:	8a 95       	dec	r24
     69c:	e9 f7       	brne	.-6      	; 0x698 <main+0x4c>
	
	DDRB = clear_bits(DDRB, 0b0000111);
     69e:	84 b1       	in	r24, 0x04	; 4
     6a0:	88 7f       	andi	r24, 0xF8	; 248
     6a2:	84 b9       	out	0x04, r24	; 4
		
		
		
		

		if (!uart_is_rx_buffer_empty(UART_0)){
     6a4:	80 e0       	ldi	r24, 0x00	; 0
     6a6:	0e 94 57 05 	call	0xaae	; 0xaae <uart_is_rx_buffer_empty>
     6aa:	81 11       	cpse	r24, r1
     6ac:	59 c0       	rjmp	.+178    	; 0x760 <main+0x114>
			//if(uart_get_byte(UART_0) =='X'){
				lcd_clear_display();
     6ae:	0e 94 32 02 	call	0x464	; 0x464 <lcd_clear_display>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6b2:	8f e3       	ldi	r24, 0x3F	; 63
     6b4:	9c e9       	ldi	r25, 0x9C	; 156
     6b6:	01 97       	sbiw	r24, 0x01	; 1
     6b8:	f1 f7       	brne	.-4      	; 0x6b6 <main+0x6a>
     6ba:	00 c0       	rjmp	.+0      	; 0x6bc <main+0x70>
     6bc:	00 00       	nop
				_delay_ms(20);
				uart_get_string(UART_0,message,151);
     6be:	7e 01       	movw	r14, r28
     6c0:	98 e0       	ldi	r25, 0x08	; 8
     6c2:	e9 0e       	add	r14, r25
     6c4:	f1 1c       	adc	r15, r1
     6c6:	47 e9       	ldi	r20, 0x97	; 151
     6c8:	b7 01       	movw	r22, r14
     6ca:	80 e0       	ldi	r24, 0x00	; 0
     6cc:	0e 94 62 05 	call	0xac4	; 0xac4 <uart_get_string>

				sscanf(message,  "X%03dY%03dZ%03dm%dM%dL%dD%d\0", &x, &y, &z, &mode, &moteur, &lancer, &joystick);
     6d0:	ce 01       	movw	r24, r28
     6d2:	07 96       	adiw	r24, 0x07	; 7
     6d4:	9f 93       	push	r25
     6d6:	8f 93       	push	r24
     6d8:	01 97       	sbiw	r24, 0x01	; 1
     6da:	9f 93       	push	r25
     6dc:	8f 93       	push	r24
     6de:	01 97       	sbiw	r24, 0x01	; 1
     6e0:	9f 93       	push	r25
     6e2:	8f 93       	push	r24
     6e4:	01 97       	sbiw	r24, 0x01	; 1
     6e6:	9f 93       	push	r25
     6e8:	8f 93       	push	r24
     6ea:	01 97       	sbiw	r24, 0x01	; 1
     6ec:	9f 93       	push	r25
     6ee:	8f 93       	push	r24
     6f0:	01 97       	sbiw	r24, 0x01	; 1
     6f2:	9f 93       	push	r25
     6f4:	8f 93       	push	r24
     6f6:	01 97       	sbiw	r24, 0x01	; 1
     6f8:	9f 93       	push	r25
     6fa:	8f 93       	push	r24
     6fc:	00 e0       	ldi	r16, 0x00	; 0
     6fe:	11 e0       	ldi	r17, 0x01	; 1
     700:	1f 93       	push	r17
     702:	0f 93       	push	r16
     704:	ff 92       	push	r15
     706:	ef 92       	push	r14
     708:	0e 94 d4 05 	call	0xba8	; 0xba8 <sscanf>
				//sprintf(str, "%s", message);
				
				sprintf(str, "X%03dY%03dZ%03dm%dM%dL%dD%d\0", x, y, z, mode, moteur, lancer, joystick);
     70c:	8f 81       	ldd	r24, Y+7	; 0x07
     70e:	1f 92       	push	r1
     710:	8f 93       	push	r24
     712:	8e 81       	ldd	r24, Y+6	; 0x06
     714:	1f 92       	push	r1
     716:	8f 93       	push	r24
     718:	8d 81       	ldd	r24, Y+5	; 0x05
     71a:	1f 92       	push	r1
     71c:	8f 93       	push	r24
     71e:	8c 81       	ldd	r24, Y+4	; 0x04
     720:	1f 92       	push	r1
     722:	8f 93       	push	r24
     724:	8b 81       	ldd	r24, Y+3	; 0x03
     726:	1f 92       	push	r1
     728:	8f 93       	push	r24
     72a:	8a 81       	ldd	r24, Y+2	; 0x02
     72c:	1f 92       	push	r1
     72e:	8f 93       	push	r24
     730:	89 81       	ldd	r24, Y+1	; 0x01
     732:	1f 92       	push	r1
     734:	8f 93       	push	r24
     736:	1f 93       	push	r17
     738:	0f 93       	push	r16
     73a:	8e 01       	movw	r16, r28
     73c:	00 5d       	subi	r16, 0xD0	; 208
     73e:	1f 4f       	sbci	r17, 0xFF	; 255
     740:	1f 93       	push	r17
     742:	0f 93       	push	r16
     744:	0e 94 b2 05 	call	0xb64	; 0xb64 <sprintf>
				lcd_set_cursor_position(0,0);
     748:	0f b6       	in	r0, 0x3f	; 63
     74a:	f8 94       	cli
     74c:	de bf       	out	0x3e, r29	; 62
     74e:	0f be       	out	0x3f, r0	; 63
     750:	cd bf       	out	0x3d, r28	; 61
     752:	60 e0       	ldi	r22, 0x00	; 0
     754:	80 e0       	ldi	r24, 0x00	; 0
     756:	0e 94 37 02 	call	0x46e	; 0x46e <lcd_set_cursor_position>

				lcd_write_string(str);
     75a:	c8 01       	movw	r24, r16
     75c:	0e 94 13 03 	call	0x626	; 0x626 <lcd_write_string>
			//} 
			
		}
		
		switch (mode)
     760:	8c 81       	ldd	r24, Y+4	; 0x04
     762:	88 23       	and	r24, r24
     764:	49 f1       	breq	.+82     	; 0x7b8 <main+0x16c>
     766:	81 30       	cpi	r24, 0x01	; 1
     768:	09 f0       	breq	.+2      	; 0x76c <main+0x120>
     76a:	9c cf       	rjmp	.-200    	; 0x6a4 <main+0x58>
		{case 1:
			
			if (x >= 200){
     76c:	89 81       	ldd	r24, Y+1	; 0x01
     76e:	88 3c       	cpi	r24, 0xC8	; 200
     770:	68 f0       	brcs	.+26     	; 0x78c <main+0x140>
				DDRB = clear_bits(DDRB, 0b0000011);
     772:	84 b1       	in	r24, 0x04	; 4
     774:	8c 7f       	andi	r24, 0xFC	; 252
     776:	84 b9       	out	0x04, r24	; 4
				PORTB = set_bit(DDRB, 2);
     778:	84 b1       	in	r24, 0x04	; 4
     77a:	84 60       	ori	r24, 0x04	; 4
     77c:	85 b9       	out	0x05, r24	; 5
				pwm0_set_PB3(z);
     77e:	8b 81       	ldd	r24, Y+3	; 0x03
     780:	0e 94 cb 00 	call	0x196	; 0x196 <pwm0_set_PB3>
				pwm0_set_PB4(z);
     784:	8b 81       	ldd	r24, Y+3	; 0x03
     786:	0e 94 cd 00 	call	0x19a	; 0x19a <pwm0_set_PB4>
     78a:	8c cf       	rjmp	.-232    	; 0x6a4 <main+0x58>
			}
			else if (x <= 100){
     78c:	85 36       	cpi	r24, 0x65	; 101
     78e:	68 f4       	brcc	.+26     	; 0x7aa <main+0x15e>
				DDRB = clear_bits(DDRB, 0b0000011);
     790:	84 b1       	in	r24, 0x04	; 4
     792:	8c 7f       	andi	r24, 0xFC	; 252
     794:	84 b9       	out	0x04, r24	; 4
				PORTB = set_bit(DDRB, 1);
     796:	84 b1       	in	r24, 0x04	; 4
     798:	82 60       	ori	r24, 0x02	; 2
     79a:	85 b9       	out	0x05, r24	; 5
				pwm0_set_PB3(z);
     79c:	8b 81       	ldd	r24, Y+3	; 0x03
     79e:	0e 94 cb 00 	call	0x196	; 0x196 <pwm0_set_PB3>
				pwm0_set_PB4(z);
     7a2:	8b 81       	ldd	r24, Y+3	; 0x03
     7a4:	0e 94 cd 00 	call	0x19a	; 0x19a <pwm0_set_PB4>
     7a8:	7d cf       	rjmp	.-262    	; 0x6a4 <main+0x58>
			}
			
			else{
				pwm0_set_PB3(0);
     7aa:	80 e0       	ldi	r24, 0x00	; 0
     7ac:	0e 94 cb 00 	call	0x196	; 0x196 <pwm0_set_PB3>
				pwm0_set_PB4(0);
     7b0:	80 e0       	ldi	r24, 0x00	; 0
     7b2:	0e 94 cd 00 	call	0x19a	; 0x19a <pwm0_set_PB4>
     7b6:	76 cf       	rjmp	.-276    	; 0x6a4 <main+0x58>
				}
				break;
		case 0:
			if (x >= 200){
     7b8:	89 81       	ldd	r24, Y+1	; 0x01
     7ba:	88 3c       	cpi	r24, 0xC8	; 200
     7bc:	68 f0       	brcs	.+26     	; 0x7d8 <main+0x18c>
				DDRB = clear_bits(DDRB, 0b0000011);
     7be:	84 b1       	in	r24, 0x04	; 4
     7c0:	8c 7f       	andi	r24, 0xFC	; 252
     7c2:	84 b9       	out	0x04, r24	; 4
				PORTB = set_bit(DDRB, 2);
     7c4:	84 b1       	in	r24, 0x04	; 4
     7c6:	84 60       	ori	r24, 0x04	; 4
     7c8:	85 b9       	out	0x05, r24	; 5
				pwm0_set_PB3(z);
     7ca:	8b 81       	ldd	r24, Y+3	; 0x03
     7cc:	0e 94 cb 00 	call	0x196	; 0x196 <pwm0_set_PB3>
				pwm0_set_PB4(z);
     7d0:	8b 81       	ldd	r24, Y+3	; 0x03
     7d2:	0e 94 cd 00 	call	0x19a	; 0x19a <pwm0_set_PB4>
     7d6:	66 cf       	rjmp	.-308    	; 0x6a4 <main+0x58>
			}
			else if (x <= 100){
     7d8:	85 36       	cpi	r24, 0x65	; 101
     7da:	68 f4       	brcc	.+26     	; 0x7f6 <main+0x1aa>
				DDRB = clear_bits(DDRB, 0b0000011);
     7dc:	84 b1       	in	r24, 0x04	; 4
     7de:	8c 7f       	andi	r24, 0xFC	; 252
     7e0:	84 b9       	out	0x04, r24	; 4
				PORTB = set_bit(DDRB, 1);
     7e2:	84 b1       	in	r24, 0x04	; 4
     7e4:	82 60       	ori	r24, 0x02	; 2
     7e6:	85 b9       	out	0x05, r24	; 5
				pwm0_set_PB3(z);
     7e8:	8b 81       	ldd	r24, Y+3	; 0x03
     7ea:	0e 94 cb 00 	call	0x196	; 0x196 <pwm0_set_PB3>
				pwm0_set_PB4(z);
     7ee:	8b 81       	ldd	r24, Y+3	; 0x03
     7f0:	0e 94 cd 00 	call	0x19a	; 0x19a <pwm0_set_PB4>
     7f4:	57 cf       	rjmp	.-338    	; 0x6a4 <main+0x58>
			}
			
			else{
				pwm0_set_PB3(0);
     7f6:	80 e0       	ldi	r24, 0x00	; 0
     7f8:	0e 94 cb 00 	call	0x196	; 0x196 <pwm0_set_PB3>
				pwm0_set_PB4(0);
     7fc:	80 e0       	ldi	r24, 0x00	; 0
     7fe:	0e 94 cd 00 	call	0x19a	; 0x19a <pwm0_set_PB4>
     802:	50 cf       	rjmp	.-352    	; 0x6a4 <main+0x58>

00000804 <disable_UDRE_interupt>:


/*** uart_clean_rx_buffer ***/
void uart_clean_rx_buffer(uart_e port){

	fifo_clean(rx_fifo_list[port]);
     804:	88 23       	and	r24, r24
     806:	19 f0       	breq	.+6      	; 0x80e <disable_UDRE_interupt+0xa>
     808:	81 30       	cpi	r24, 0x01	; 1
     80a:	39 f0       	breq	.+14     	; 0x81a <disable_UDRE_interupt+0x16>
     80c:	08 95       	ret
     80e:	e1 ec       	ldi	r30, 0xC1	; 193
     810:	f0 e0       	ldi	r31, 0x00	; 0
     812:	80 81       	ld	r24, Z
     814:	8f 7d       	andi	r24, 0xDF	; 223
     816:	80 83       	st	Z, r24
     818:	08 95       	ret
     81a:	e9 ec       	ldi	r30, 0xC9	; 201
     81c:	f0 e0       	ldi	r31, 0x00	; 0
     81e:	80 81       	ld	r24, Z
     820:	8f 7d       	andi	r24, 0xDF	; 223
     822:	80 83       	st	Z, r24
     824:	08 95       	ret

00000826 <enable_RX_interupt>:
     826:	88 23       	and	r24, r24
     828:	19 f0       	breq	.+6      	; 0x830 <enable_RX_interupt+0xa>
     82a:	81 30       	cpi	r24, 0x01	; 1
     82c:	39 f0       	breq	.+14     	; 0x83c <enable_RX_interupt+0x16>
     82e:	08 95       	ret
     830:	e1 ec       	ldi	r30, 0xC1	; 193
     832:	f0 e0       	ldi	r31, 0x00	; 0
     834:	80 81       	ld	r24, Z
     836:	80 68       	ori	r24, 0x80	; 128
     838:	80 83       	st	Z, r24
     83a:	08 95       	ret
     83c:	e9 ec       	ldi	r30, 0xC9	; 201
     83e:	f0 e0       	ldi	r31, 0x00	; 0
     840:	80 81       	ld	r24, Z
     842:	80 68       	ori	r24, 0x80	; 128
     844:	80 83       	st	Z, r24
     846:	08 95       	ret

00000848 <disable_RX_interupt>:
     848:	88 23       	and	r24, r24
     84a:	19 f0       	breq	.+6      	; 0x852 <disable_RX_interupt+0xa>
     84c:	81 30       	cpi	r24, 0x01	; 1
     84e:	39 f0       	breq	.+14     	; 0x85e <disable_RX_interupt+0x16>
     850:	08 95       	ret
     852:	e1 ec       	ldi	r30, 0xC1	; 193
     854:	f0 e0       	ldi	r31, 0x00	; 0
     856:	80 81       	ld	r24, Z
     858:	8f 77       	andi	r24, 0x7F	; 127
     85a:	80 83       	st	Z, r24
     85c:	08 95       	ret
     85e:	e9 ec       	ldi	r30, 0xC9	; 201
     860:	f0 e0       	ldi	r31, 0x00	; 0
     862:	80 81       	ld	r24, Z
     864:	8f 77       	andi	r24, 0x7F	; 127
     866:	80 83       	st	Z, r24
     868:	08 95       	ret

0000086a <__vector_21>:
     86a:	1f 92       	push	r1
     86c:	0f 92       	push	r0
     86e:	0f b6       	in	r0, 0x3f	; 63
     870:	0f 92       	push	r0
     872:	11 24       	eor	r1, r1
     874:	2f 93       	push	r18
     876:	3f 93       	push	r19
     878:	4f 93       	push	r20
     87a:	5f 93       	push	r21
     87c:	6f 93       	push	r22
     87e:	7f 93       	push	r23
     880:	8f 93       	push	r24
     882:	9f 93       	push	r25
     884:	af 93       	push	r26
     886:	bf 93       	push	r27
     888:	ef 93       	push	r30
     88a:	ff 93       	push	r31
     88c:	8c e4       	ldi	r24, 0x4C	; 76
     88e:	91 e0       	ldi	r25, 0x01	; 1
     890:	0e 94 26 01 	call	0x24c	; 0x24c <fifo_pop>
     894:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     898:	8c e4       	ldi	r24, 0x4C	; 76
     89a:	91 e0       	ldi	r25, 0x01	; 1
     89c:	0e 94 4c 01 	call	0x298	; 0x298 <fifo_is_empty>
     8a0:	81 30       	cpi	r24, 0x01	; 1
     8a2:	19 f4       	brne	.+6      	; 0x8aa <__vector_21+0x40>
     8a4:	80 e0       	ldi	r24, 0x00	; 0
     8a6:	0e 94 02 04 	call	0x804	; 0x804 <disable_UDRE_interupt>
     8aa:	ff 91       	pop	r31
     8ac:	ef 91       	pop	r30
     8ae:	bf 91       	pop	r27
     8b0:	af 91       	pop	r26
     8b2:	9f 91       	pop	r25
     8b4:	8f 91       	pop	r24
     8b6:	7f 91       	pop	r23
     8b8:	6f 91       	pop	r22
     8ba:	5f 91       	pop	r21
     8bc:	4f 91       	pop	r20
     8be:	3f 91       	pop	r19
     8c0:	2f 91       	pop	r18
     8c2:	0f 90       	pop	r0
     8c4:	0f be       	out	0x3f, r0	; 63
     8c6:	0f 90       	pop	r0
     8c8:	1f 90       	pop	r1
     8ca:	18 95       	reti

000008cc <__vector_20>:
     8cc:	1f 92       	push	r1
     8ce:	0f 92       	push	r0
     8d0:	0f b6       	in	r0, 0x3f	; 63
     8d2:	0f 92       	push	r0
     8d4:	11 24       	eor	r1, r1
     8d6:	2f 93       	push	r18
     8d8:	3f 93       	push	r19
     8da:	4f 93       	push	r20
     8dc:	5f 93       	push	r21
     8de:	6f 93       	push	r22
     8e0:	7f 93       	push	r23
     8e2:	8f 93       	push	r24
     8e4:	9f 93       	push	r25
     8e6:	af 93       	push	r26
     8e8:	bf 93       	push	r27
     8ea:	ef 93       	push	r30
     8ec:	ff 93       	push	r31
     8ee:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     8f2:	84 e5       	ldi	r24, 0x54	; 84
     8f4:	91 e0       	ldi	r25, 0x01	; 1
     8f6:	0e 94 02 01 	call	0x204	; 0x204 <fifo_push>
     8fa:	ff 91       	pop	r31
     8fc:	ef 91       	pop	r30
     8fe:	bf 91       	pop	r27
     900:	af 91       	pop	r26
     902:	9f 91       	pop	r25
     904:	8f 91       	pop	r24
     906:	7f 91       	pop	r23
     908:	6f 91       	pop	r22
     90a:	5f 91       	pop	r21
     90c:	4f 91       	pop	r20
     90e:	3f 91       	pop	r19
     910:	2f 91       	pop	r18
     912:	0f 90       	pop	r0
     914:	0f be       	out	0x3f, r0	; 63
     916:	0f 90       	pop	r0
     918:	1f 90       	pop	r1
     91a:	18 95       	reti

0000091c <__vector_29>:
     91c:	1f 92       	push	r1
     91e:	0f 92       	push	r0
     920:	0f b6       	in	r0, 0x3f	; 63
     922:	0f 92       	push	r0
     924:	11 24       	eor	r1, r1
     926:	2f 93       	push	r18
     928:	3f 93       	push	r19
     92a:	4f 93       	push	r20
     92c:	5f 93       	push	r21
     92e:	6f 93       	push	r22
     930:	7f 93       	push	r23
     932:	8f 93       	push	r24
     934:	9f 93       	push	r25
     936:	af 93       	push	r26
     938:	bf 93       	push	r27
     93a:	ef 93       	push	r30
     93c:	ff 93       	push	r31
     93e:	8c e3       	ldi	r24, 0x3C	; 60
     940:	91 e0       	ldi	r25, 0x01	; 1
     942:	0e 94 26 01 	call	0x24c	; 0x24c <fifo_pop>
     946:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f80ce>
     94a:	8c e3       	ldi	r24, 0x3C	; 60
     94c:	91 e0       	ldi	r25, 0x01	; 1
     94e:	0e 94 4c 01 	call	0x298	; 0x298 <fifo_is_empty>
     952:	88 23       	and	r24, r24
     954:	19 f0       	breq	.+6      	; 0x95c <__vector_29+0x40>
     956:	81 e0       	ldi	r24, 0x01	; 1
     958:	0e 94 02 04 	call	0x804	; 0x804 <disable_UDRE_interupt>
     95c:	ff 91       	pop	r31
     95e:	ef 91       	pop	r30
     960:	bf 91       	pop	r27
     962:	af 91       	pop	r26
     964:	9f 91       	pop	r25
     966:	8f 91       	pop	r24
     968:	7f 91       	pop	r23
     96a:	6f 91       	pop	r22
     96c:	5f 91       	pop	r21
     96e:	4f 91       	pop	r20
     970:	3f 91       	pop	r19
     972:	2f 91       	pop	r18
     974:	0f 90       	pop	r0
     976:	0f be       	out	0x3f, r0	; 63
     978:	0f 90       	pop	r0
     97a:	1f 90       	pop	r1
     97c:	18 95       	reti

0000097e <__vector_28>:
     97e:	1f 92       	push	r1
     980:	0f 92       	push	r0
     982:	0f b6       	in	r0, 0x3f	; 63
     984:	0f 92       	push	r0
     986:	11 24       	eor	r1, r1
     988:	2f 93       	push	r18
     98a:	3f 93       	push	r19
     98c:	4f 93       	push	r20
     98e:	5f 93       	push	r21
     990:	6f 93       	push	r22
     992:	7f 93       	push	r23
     994:	8f 93       	push	r24
     996:	9f 93       	push	r25
     998:	af 93       	push	r26
     99a:	bf 93       	push	r27
     99c:	ef 93       	push	r30
     99e:	ff 93       	push	r31
     9a0:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f80ce>
     9a4:	84 e4       	ldi	r24, 0x44	; 68
     9a6:	91 e0       	ldi	r25, 0x01	; 1
     9a8:	0e 94 02 01 	call	0x204	; 0x204 <fifo_push>
     9ac:	ff 91       	pop	r31
     9ae:	ef 91       	pop	r30
     9b0:	bf 91       	pop	r27
     9b2:	af 91       	pop	r26
     9b4:	9f 91       	pop	r25
     9b6:	8f 91       	pop	r24
     9b8:	7f 91       	pop	r23
     9ba:	6f 91       	pop	r22
     9bc:	5f 91       	pop	r21
     9be:	4f 91       	pop	r20
     9c0:	3f 91       	pop	r19
     9c2:	2f 91       	pop	r18
     9c4:	0f 90       	pop	r0
     9c6:	0f be       	out	0x3f, r0	; 63
     9c8:	0f 90       	pop	r0
     9ca:	1f 90       	pop	r1
     9cc:	18 95       	reti

000009ce <uart_set_baudrate>:
     9ce:	88 23       	and	r24, r24
     9d0:	19 f0       	breq	.+6      	; 0x9d8 <uart_set_baudrate+0xa>
     9d2:	81 30       	cpi	r24, 0x01	; 1
     9d4:	71 f0       	breq	.+28     	; 0x9f2 <uart_set_baudrate+0x24>
     9d6:	08 95       	ret
     9d8:	e6 2f       	mov	r30, r22
     9da:	f0 e0       	ldi	r31, 0x00	; 0
     9dc:	ee 0f       	add	r30, r30
     9de:	ff 1f       	adc	r31, r31
     9e0:	e8 5d       	subi	r30, 0xD8	; 216
     9e2:	fe 4f       	sbci	r31, 0xFE	; 254
     9e4:	80 81       	ld	r24, Z
     9e6:	91 81       	ldd	r25, Z+1	; 0x01
     9e8:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     9ec:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     9f0:	08 95       	ret
     9f2:	e6 2f       	mov	r30, r22
     9f4:	f0 e0       	ldi	r31, 0x00	; 0
     9f6:	ee 0f       	add	r30, r30
     9f8:	ff 1f       	adc	r31, r31
     9fa:	e8 5d       	subi	r30, 0xD8	; 216
     9fc:	fe 4f       	sbci	r31, 0xFE	; 254
     9fe:	80 81       	ld	r24, Z
     a00:	91 81       	ldd	r25, Z+1	; 0x01
     a02:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7f80cd>
     a06:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7f80cc>
     a0a:	08 95       	ret

00000a0c <uart_init>:
     a0c:	cf 93       	push	r28
     a0e:	c8 2f       	mov	r28, r24
     a10:	88 23       	and	r24, r24
     a12:	19 f0       	breq	.+6      	; 0xa1a <uart_init+0xe>
     a14:	81 30       	cpi	r24, 0x01	; 1
     a16:	c1 f0       	breq	.+48     	; 0xa48 <uart_init+0x3c>
     a18:	2d c0       	rjmp	.+90     	; 0xa74 <uart_init+0x68>
     a1a:	86 e0       	ldi	r24, 0x06	; 6
     a1c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     a20:	88 e9       	ldi	r24, 0x98	; 152
     a22:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     a26:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     a2a:	46 e9       	ldi	r20, 0x96	; 150
     a2c:	62 e1       	ldi	r22, 0x12	; 18
     a2e:	72 e0       	ldi	r23, 0x02	; 2
     a30:	84 e5       	ldi	r24, 0x54	; 84
     a32:	91 e0       	ldi	r25, 0x01	; 1
     a34:	0e 94 f7 00 	call	0x1ee	; 0x1ee <fifo_init>
     a38:	46 e9       	ldi	r20, 0x96	; 150
     a3a:	6c e7       	ldi	r22, 0x7C	; 124
     a3c:	71 e0       	ldi	r23, 0x01	; 1
     a3e:	8c e4       	ldi	r24, 0x4C	; 76
     a40:	91 e0       	ldi	r25, 0x01	; 1
     a42:	0e 94 f7 00 	call	0x1ee	; 0x1ee <fifo_init>
     a46:	16 c0       	rjmp	.+44     	; 0xa74 <uart_init+0x68>
     a48:	86 e0       	ldi	r24, 0x06	; 6
     a4a:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7f80ca>
     a4e:	88 e9       	ldi	r24, 0x98	; 152
     a50:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7f80c9>
     a54:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7f80c8>
     a58:	40 e1       	ldi	r20, 0x10	; 16
     a5a:	6c e6       	ldi	r22, 0x6C	; 108
     a5c:	71 e0       	ldi	r23, 0x01	; 1
     a5e:	84 e4       	ldi	r24, 0x44	; 68
     a60:	91 e0       	ldi	r25, 0x01	; 1
     a62:	0e 94 f7 00 	call	0x1ee	; 0x1ee <fifo_init>
     a66:	40 e1       	ldi	r20, 0x10	; 16
     a68:	6c e5       	ldi	r22, 0x5C	; 92
     a6a:	71 e0       	ldi	r23, 0x01	; 1
     a6c:	8c e3       	ldi	r24, 0x3C	; 60
     a6e:	91 e0       	ldi	r25, 0x01	; 1
     a70:	0e 94 f7 00 	call	0x1ee	; 0x1ee <fifo_init>
     a74:	62 e0       	ldi	r22, 0x02	; 2
     a76:	8c 2f       	mov	r24, r28
     a78:	0e 94 e7 04 	call	0x9ce	; 0x9ce <uart_set_baudrate>
     a7c:	cf 91       	pop	r28
     a7e:	08 95       	ret

00000a80 <uart_get_byte>:
     a80:	cf 93       	push	r28
     a82:	df 93       	push	r29
     a84:	c8 2f       	mov	r28, r24
     a86:	0e 94 24 04 	call	0x848	; 0x848 <disable_RX_interupt>
     a8a:	ec 2f       	mov	r30, r28
     a8c:	f0 e0       	ldi	r31, 0x00	; 0
     a8e:	ee 0f       	add	r30, r30
     a90:	ff 1f       	adc	r31, r31
     a92:	ec 5d       	subi	r30, 0xDC	; 220
     a94:	fe 4f       	sbci	r31, 0xFE	; 254
     a96:	80 81       	ld	r24, Z
     a98:	91 81       	ldd	r25, Z+1	; 0x01
     a9a:	0e 94 26 01 	call	0x24c	; 0x24c <fifo_pop>
     a9e:	d8 2f       	mov	r29, r24
     aa0:	8c 2f       	mov	r24, r28
     aa2:	0e 94 13 04 	call	0x826	; 0x826 <enable_RX_interupt>
     aa6:	8d 2f       	mov	r24, r29
     aa8:	df 91       	pop	r29
     aaa:	cf 91       	pop	r28
     aac:	08 95       	ret

00000aae <uart_is_rx_buffer_empty>:
}

/*** is_rx_buffer_empty ***/
bool uart_is_rx_buffer_empty(uart_e port){

    return fifo_is_empty(rx_fifo_list[port]);
     aae:	e8 2f       	mov	r30, r24
     ab0:	f0 e0       	ldi	r31, 0x00	; 0
     ab2:	ee 0f       	add	r30, r30
     ab4:	ff 1f       	adc	r31, r31
     ab6:	ec 5d       	subi	r30, 0xDC	; 220
     ab8:	fe 4f       	sbci	r31, 0xFE	; 254
     aba:	80 81       	ld	r24, Z
     abc:	91 81       	ldd	r25, Z+1	; 0x01
     abe:	0e 94 4c 01 	call	0x298	; 0x298 <fifo_is_empty>
}
     ac2:	08 95       	ret

00000ac4 <uart_get_string>:

    return byte;
}


void uart_get_string(uart_e port, char* out_buffer, uint8_t buffer_length){
     ac4:	df 92       	push	r13
     ac6:	ef 92       	push	r14
     ac8:	ff 92       	push	r15
     aca:	0f 93       	push	r16
     acc:	1f 93       	push	r17
     ace:	cf 93       	push	r28
     ad0:	df 93       	push	r29
     ad2:	d8 2f       	mov	r29, r24
     ad4:	8b 01       	movw	r16, r22
     ad6:	d4 2e       	mov	r13, r20

	uint8_t index = 0;
     ad8:	c0 e0       	ldi	r28, 0x00	; 0

	while(uart_is_rx_buffer_empty(port) == FALSE){
     ada:	11 c0       	rjmp	.+34     	; 0xafe <uart_get_string+0x3a>

		out_buffer[index] = uart_get_byte(port);
     adc:	78 01       	movw	r14, r16
     ade:	ec 0e       	add	r14, r28
     ae0:	f1 1c       	adc	r15, r1
     ae2:	8d 2f       	mov	r24, r29
     ae4:	0e 94 40 05 	call	0xa80	; 0xa80 <uart_get_byte>
     ae8:	f7 01       	movw	r30, r14
     aea:	80 83       	st	Z, r24
		index++;
     aec:	cf 5f       	subi	r28, 0xFF	; 255

		// Si il ne reste de la place que pour le \0
		if(index >= buffer_length - 1){
     aee:	2c 2f       	mov	r18, r28
     af0:	30 e0       	ldi	r19, 0x00	; 0
     af2:	8d 2d       	mov	r24, r13
     af4:	90 e0       	ldi	r25, 0x00	; 0
     af6:	01 97       	sbiw	r24, 0x01	; 1
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	2c f4       	brge	.+10     	; 0xb08 <uart_get_string+0x44>

void uart_get_string(uart_e port, char* out_buffer, uint8_t buffer_length){

	uint8_t index = 0;

	while(uart_is_rx_buffer_empty(port) == FALSE){
     afe:	8d 2f       	mov	r24, r29
     b00:	0e 94 57 05 	call	0xaae	; 0xaae <uart_is_rx_buffer_empty>
     b04:	88 23       	and	r24, r24
     b06:	51 f3       	breq	.-44     	; 0xadc <uart_get_string+0x18>
		}
	}


	// Très temporaire pour déboguer
	if(index == 0){
     b08:	c1 11       	cpse	r28, r1
     b0a:	05 c0       	rjmp	.+10     	; 0xb16 <uart_get_string+0x52>

		string_copy(out_buffer, "-vide-");
     b0c:	6d e1       	ldi	r22, 0x1D	; 29
     b0e:	71 e0       	ldi	r23, 0x01	; 1
     b10:	c8 01       	movw	r24, r16
     b12:	0e 94 97 05 	call	0xb2e	; 0xb2e <string_copy>
	}

	// On ferme la string
	out_buffer[index] = '\0';
     b16:	f8 01       	movw	r30, r16
     b18:	ec 0f       	add	r30, r28
     b1a:	f1 1d       	adc	r31, r1
     b1c:	10 82       	st	Z, r1
}
     b1e:	df 91       	pop	r29
     b20:	cf 91       	pop	r28
     b22:	1f 91       	pop	r17
     b24:	0f 91       	pop	r16
     b26:	ff 90       	pop	r15
     b28:	ef 90       	pop	r14
     b2a:	df 90       	pop	r13
     b2c:	08 95       	ret

00000b2e <string_copy>:
    }

    return length;
}

uint8_t string_copy(char* out_string, const char* in_string){
     b2e:	dc 01       	movw	r26, r24
	
	uint8_t i = 0;
     b30:	80 e0       	ldi	r24, 0x00	; 0
	
	while(in_string[i] != '\0'){
     b32:	05 c0       	rjmp	.+10     	; 0xb3e <string_copy+0x10>
		
		out_string[i] = in_string[i];
     b34:	fd 01       	movw	r30, r26
     b36:	e2 0f       	add	r30, r18
     b38:	f3 1f       	adc	r31, r19
     b3a:	40 83       	st	Z, r20
		i++;
     b3c:	8f 5f       	subi	r24, 0xFF	; 255

uint8_t string_copy(char* out_string, const char* in_string){
	
	uint8_t i = 0;
	
	while(in_string[i] != '\0'){
     b3e:	28 2f       	mov	r18, r24
     b40:	30 e0       	ldi	r19, 0x00	; 0
     b42:	fb 01       	movw	r30, r22
     b44:	e2 0f       	add	r30, r18
     b46:	f3 1f       	adc	r31, r19
     b48:	40 81       	ld	r20, Z
     b4a:	41 11       	cpse	r20, r1
     b4c:	f3 cf       	rjmp	.-26     	; 0xb34 <string_copy+0x6>
		out_string[i] = in_string[i];
		i++;
	}
	
	// Puisque le while juste avant tchoke au \0, il faut le mettre
	out_string[i] = '\0';
     b4e:	fd 01       	movw	r30, r26
     b50:	e2 0f       	add	r30, r18
     b52:	f3 1f       	adc	r31, r19
     b54:	10 82       	st	Z, r1
	
	return i;
}
     b56:	08 95       	ret

00000b58 <__tablejump2__>:
     b58:	ee 0f       	add	r30, r30
     b5a:	ff 1f       	adc	r31, r31
     b5c:	05 90       	lpm	r0, Z+
     b5e:	f4 91       	lpm	r31, Z
     b60:	e0 2d       	mov	r30, r0
     b62:	09 94       	ijmp

00000b64 <sprintf>:
     b64:	ae e0       	ldi	r26, 0x0E	; 14
     b66:	b0 e0       	ldi	r27, 0x00	; 0
     b68:	e8 eb       	ldi	r30, 0xB8	; 184
     b6a:	f5 e0       	ldi	r31, 0x05	; 5
     b6c:	0c 94 a7 0b 	jmp	0x174e	; 0x174e <__prologue_saves__+0x1c>
     b70:	0d 89       	ldd	r16, Y+21	; 0x15
     b72:	1e 89       	ldd	r17, Y+22	; 0x16
     b74:	86 e0       	ldi	r24, 0x06	; 6
     b76:	8c 83       	std	Y+4, r24	; 0x04
     b78:	1a 83       	std	Y+2, r17	; 0x02
     b7a:	09 83       	std	Y+1, r16	; 0x01
     b7c:	8f ef       	ldi	r24, 0xFF	; 255
     b7e:	9f e7       	ldi	r25, 0x7F	; 127
     b80:	9e 83       	std	Y+6, r25	; 0x06
     b82:	8d 83       	std	Y+5, r24	; 0x05
     b84:	ae 01       	movw	r20, r28
     b86:	47 5e       	subi	r20, 0xE7	; 231
     b88:	5f 4f       	sbci	r21, 0xFF	; 255
     b8a:	6f 89       	ldd	r22, Y+23	; 0x17
     b8c:	78 8d       	ldd	r23, Y+24	; 0x18
     b8e:	ce 01       	movw	r24, r28
     b90:	01 96       	adiw	r24, 0x01	; 1
     b92:	0e 94 ed 05 	call	0xbda	; 0xbda <vfprintf>
     b96:	ef 81       	ldd	r30, Y+7	; 0x07
     b98:	f8 85       	ldd	r31, Y+8	; 0x08
     b9a:	e0 0f       	add	r30, r16
     b9c:	f1 1f       	adc	r31, r17
     b9e:	10 82       	st	Z, r1
     ba0:	2e 96       	adiw	r28, 0x0e	; 14
     ba2:	e4 e0       	ldi	r30, 0x04	; 4
     ba4:	0c 94 c3 0b 	jmp	0x1786	; 0x1786 <__epilogue_restores__+0x1c>

00000ba8 <sscanf>:
     ba8:	ae e0       	ldi	r26, 0x0E	; 14
     baa:	b0 e0       	ldi	r27, 0x00	; 0
     bac:	ea ed       	ldi	r30, 0xDA	; 218
     bae:	f5 e0       	ldi	r31, 0x05	; 5
     bb0:	0c 94 a9 0b 	jmp	0x1752	; 0x1752 <__prologue_saves__+0x20>
     bb4:	85 e0       	ldi	r24, 0x05	; 5
     bb6:	8c 83       	std	Y+4, r24	; 0x04
     bb8:	8b 89       	ldd	r24, Y+19	; 0x13
     bba:	9c 89       	ldd	r25, Y+20	; 0x14
     bbc:	9a 83       	std	Y+2, r25	; 0x02
     bbe:	89 83       	std	Y+1, r24	; 0x01
     bc0:	ae 01       	movw	r20, r28
     bc2:	49 5e       	subi	r20, 0xE9	; 233
     bc4:	5f 4f       	sbci	r21, 0xFF	; 255
     bc6:	6d 89       	ldd	r22, Y+21	; 0x15
     bc8:	7e 89       	ldd	r23, Y+22	; 0x16
     bca:	ce 01       	movw	r24, r28
     bcc:	01 96       	adiw	r24, 0x01	; 1
     bce:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <vfscanf>
     bd2:	2e 96       	adiw	r28, 0x0e	; 14
     bd4:	e2 e0       	ldi	r30, 0x02	; 2
     bd6:	0c 94 c5 0b 	jmp	0x178a	; 0x178a <__epilogue_restores__+0x20>

00000bda <vfprintf>:
     bda:	ab e0       	ldi	r26, 0x0B	; 11
     bdc:	b0 e0       	ldi	r27, 0x00	; 0
     bde:	e3 ef       	ldi	r30, 0xF3	; 243
     be0:	f5 e0       	ldi	r31, 0x05	; 5
     be2:	0c 94 99 0b 	jmp	0x1732	; 0x1732 <__prologue_saves__>
     be6:	6c 01       	movw	r12, r24
     be8:	7b 01       	movw	r14, r22
     bea:	8a 01       	movw	r16, r20
     bec:	fc 01       	movw	r30, r24
     bee:	17 82       	std	Z+7, r1	; 0x07
     bf0:	16 82       	std	Z+6, r1	; 0x06
     bf2:	83 81       	ldd	r24, Z+3	; 0x03
     bf4:	81 ff       	sbrs	r24, 1
     bf6:	cc c1       	rjmp	.+920    	; 0xf90 <vfprintf+0x3b6>
     bf8:	ce 01       	movw	r24, r28
     bfa:	01 96       	adiw	r24, 0x01	; 1
     bfc:	3c 01       	movw	r6, r24
     bfe:	f6 01       	movw	r30, r12
     c00:	93 81       	ldd	r25, Z+3	; 0x03
     c02:	f7 01       	movw	r30, r14
     c04:	93 fd       	sbrc	r25, 3
     c06:	85 91       	lpm	r24, Z+
     c08:	93 ff       	sbrs	r25, 3
     c0a:	81 91       	ld	r24, Z+
     c0c:	7f 01       	movw	r14, r30
     c0e:	88 23       	and	r24, r24
     c10:	09 f4       	brne	.+2      	; 0xc14 <vfprintf+0x3a>
     c12:	ba c1       	rjmp	.+884    	; 0xf88 <vfprintf+0x3ae>
     c14:	85 32       	cpi	r24, 0x25	; 37
     c16:	39 f4       	brne	.+14     	; 0xc26 <vfprintf+0x4c>
     c18:	93 fd       	sbrc	r25, 3
     c1a:	85 91       	lpm	r24, Z+
     c1c:	93 ff       	sbrs	r25, 3
     c1e:	81 91       	ld	r24, Z+
     c20:	7f 01       	movw	r14, r30
     c22:	85 32       	cpi	r24, 0x25	; 37
     c24:	29 f4       	brne	.+10     	; 0xc30 <vfprintf+0x56>
     c26:	b6 01       	movw	r22, r12
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <fputc>
     c2e:	e7 cf       	rjmp	.-50     	; 0xbfe <vfprintf+0x24>
     c30:	91 2c       	mov	r9, r1
     c32:	21 2c       	mov	r2, r1
     c34:	31 2c       	mov	r3, r1
     c36:	ff e1       	ldi	r31, 0x1F	; 31
     c38:	f3 15       	cp	r31, r3
     c3a:	d8 f0       	brcs	.+54     	; 0xc72 <vfprintf+0x98>
     c3c:	8b 32       	cpi	r24, 0x2B	; 43
     c3e:	79 f0       	breq	.+30     	; 0xc5e <vfprintf+0x84>
     c40:	38 f4       	brcc	.+14     	; 0xc50 <vfprintf+0x76>
     c42:	80 32       	cpi	r24, 0x20	; 32
     c44:	79 f0       	breq	.+30     	; 0xc64 <vfprintf+0x8a>
     c46:	83 32       	cpi	r24, 0x23	; 35
     c48:	a1 f4       	brne	.+40     	; 0xc72 <vfprintf+0x98>
     c4a:	23 2d       	mov	r18, r3
     c4c:	20 61       	ori	r18, 0x10	; 16
     c4e:	1d c0       	rjmp	.+58     	; 0xc8a <vfprintf+0xb0>
     c50:	8d 32       	cpi	r24, 0x2D	; 45
     c52:	61 f0       	breq	.+24     	; 0xc6c <vfprintf+0x92>
     c54:	80 33       	cpi	r24, 0x30	; 48
     c56:	69 f4       	brne	.+26     	; 0xc72 <vfprintf+0x98>
     c58:	23 2d       	mov	r18, r3
     c5a:	21 60       	ori	r18, 0x01	; 1
     c5c:	16 c0       	rjmp	.+44     	; 0xc8a <vfprintf+0xb0>
     c5e:	83 2d       	mov	r24, r3
     c60:	82 60       	ori	r24, 0x02	; 2
     c62:	38 2e       	mov	r3, r24
     c64:	e3 2d       	mov	r30, r3
     c66:	e4 60       	ori	r30, 0x04	; 4
     c68:	3e 2e       	mov	r3, r30
     c6a:	2a c0       	rjmp	.+84     	; 0xcc0 <vfprintf+0xe6>
     c6c:	f3 2d       	mov	r31, r3
     c6e:	f8 60       	ori	r31, 0x08	; 8
     c70:	1d c0       	rjmp	.+58     	; 0xcac <vfprintf+0xd2>
     c72:	37 fc       	sbrc	r3, 7
     c74:	2d c0       	rjmp	.+90     	; 0xcd0 <vfprintf+0xf6>
     c76:	20 ed       	ldi	r18, 0xD0	; 208
     c78:	28 0f       	add	r18, r24
     c7a:	2a 30       	cpi	r18, 0x0A	; 10
     c7c:	40 f0       	brcs	.+16     	; 0xc8e <vfprintf+0xb4>
     c7e:	8e 32       	cpi	r24, 0x2E	; 46
     c80:	b9 f4       	brne	.+46     	; 0xcb0 <vfprintf+0xd6>
     c82:	36 fc       	sbrc	r3, 6
     c84:	81 c1       	rjmp	.+770    	; 0xf88 <vfprintf+0x3ae>
     c86:	23 2d       	mov	r18, r3
     c88:	20 64       	ori	r18, 0x40	; 64
     c8a:	32 2e       	mov	r3, r18
     c8c:	19 c0       	rjmp	.+50     	; 0xcc0 <vfprintf+0xe6>
     c8e:	36 fe       	sbrs	r3, 6
     c90:	06 c0       	rjmp	.+12     	; 0xc9e <vfprintf+0xc4>
     c92:	8a e0       	ldi	r24, 0x0A	; 10
     c94:	98 9e       	mul	r9, r24
     c96:	20 0d       	add	r18, r0
     c98:	11 24       	eor	r1, r1
     c9a:	92 2e       	mov	r9, r18
     c9c:	11 c0       	rjmp	.+34     	; 0xcc0 <vfprintf+0xe6>
     c9e:	ea e0       	ldi	r30, 0x0A	; 10
     ca0:	2e 9e       	mul	r2, r30
     ca2:	20 0d       	add	r18, r0
     ca4:	11 24       	eor	r1, r1
     ca6:	22 2e       	mov	r2, r18
     ca8:	f3 2d       	mov	r31, r3
     caa:	f0 62       	ori	r31, 0x20	; 32
     cac:	3f 2e       	mov	r3, r31
     cae:	08 c0       	rjmp	.+16     	; 0xcc0 <vfprintf+0xe6>
     cb0:	8c 36       	cpi	r24, 0x6C	; 108
     cb2:	21 f4       	brne	.+8      	; 0xcbc <vfprintf+0xe2>
     cb4:	83 2d       	mov	r24, r3
     cb6:	80 68       	ori	r24, 0x80	; 128
     cb8:	38 2e       	mov	r3, r24
     cba:	02 c0       	rjmp	.+4      	; 0xcc0 <vfprintf+0xe6>
     cbc:	88 36       	cpi	r24, 0x68	; 104
     cbe:	41 f4       	brne	.+16     	; 0xcd0 <vfprintf+0xf6>
     cc0:	f7 01       	movw	r30, r14
     cc2:	93 fd       	sbrc	r25, 3
     cc4:	85 91       	lpm	r24, Z+
     cc6:	93 ff       	sbrs	r25, 3
     cc8:	81 91       	ld	r24, Z+
     cca:	7f 01       	movw	r14, r30
     ccc:	81 11       	cpse	r24, r1
     cce:	b3 cf       	rjmp	.-154    	; 0xc36 <vfprintf+0x5c>
     cd0:	98 2f       	mov	r25, r24
     cd2:	9f 7d       	andi	r25, 0xDF	; 223
     cd4:	95 54       	subi	r25, 0x45	; 69
     cd6:	93 30       	cpi	r25, 0x03	; 3
     cd8:	28 f4       	brcc	.+10     	; 0xce4 <vfprintf+0x10a>
     cda:	0c 5f       	subi	r16, 0xFC	; 252
     cdc:	1f 4f       	sbci	r17, 0xFF	; 255
     cde:	9f e3       	ldi	r25, 0x3F	; 63
     ce0:	99 83       	std	Y+1, r25	; 0x01
     ce2:	0d c0       	rjmp	.+26     	; 0xcfe <vfprintf+0x124>
     ce4:	83 36       	cpi	r24, 0x63	; 99
     ce6:	31 f0       	breq	.+12     	; 0xcf4 <vfprintf+0x11a>
     ce8:	83 37       	cpi	r24, 0x73	; 115
     cea:	71 f0       	breq	.+28     	; 0xd08 <vfprintf+0x12e>
     cec:	83 35       	cpi	r24, 0x53	; 83
     cee:	09 f0       	breq	.+2      	; 0xcf2 <vfprintf+0x118>
     cf0:	59 c0       	rjmp	.+178    	; 0xda4 <vfprintf+0x1ca>
     cf2:	21 c0       	rjmp	.+66     	; 0xd36 <vfprintf+0x15c>
     cf4:	f8 01       	movw	r30, r16
     cf6:	80 81       	ld	r24, Z
     cf8:	89 83       	std	Y+1, r24	; 0x01
     cfa:	0e 5f       	subi	r16, 0xFE	; 254
     cfc:	1f 4f       	sbci	r17, 0xFF	; 255
     cfe:	88 24       	eor	r8, r8
     d00:	83 94       	inc	r8
     d02:	91 2c       	mov	r9, r1
     d04:	53 01       	movw	r10, r6
     d06:	13 c0       	rjmp	.+38     	; 0xd2e <vfprintf+0x154>
     d08:	28 01       	movw	r4, r16
     d0a:	f2 e0       	ldi	r31, 0x02	; 2
     d0c:	4f 0e       	add	r4, r31
     d0e:	51 1c       	adc	r5, r1
     d10:	f8 01       	movw	r30, r16
     d12:	a0 80       	ld	r10, Z
     d14:	b1 80       	ldd	r11, Z+1	; 0x01
     d16:	36 fe       	sbrs	r3, 6
     d18:	03 c0       	rjmp	.+6      	; 0xd20 <vfprintf+0x146>
     d1a:	69 2d       	mov	r22, r9
     d1c:	70 e0       	ldi	r23, 0x00	; 0
     d1e:	02 c0       	rjmp	.+4      	; 0xd24 <vfprintf+0x14a>
     d20:	6f ef       	ldi	r22, 0xFF	; 255
     d22:	7f ef       	ldi	r23, 0xFF	; 255
     d24:	c5 01       	movw	r24, r10
     d26:	0e 94 9a 0a 	call	0x1534	; 0x1534 <strnlen>
     d2a:	4c 01       	movw	r8, r24
     d2c:	82 01       	movw	r16, r4
     d2e:	f3 2d       	mov	r31, r3
     d30:	ff 77       	andi	r31, 0x7F	; 127
     d32:	3f 2e       	mov	r3, r31
     d34:	16 c0       	rjmp	.+44     	; 0xd62 <vfprintf+0x188>
     d36:	28 01       	movw	r4, r16
     d38:	22 e0       	ldi	r18, 0x02	; 2
     d3a:	42 0e       	add	r4, r18
     d3c:	51 1c       	adc	r5, r1
     d3e:	f8 01       	movw	r30, r16
     d40:	a0 80       	ld	r10, Z
     d42:	b1 80       	ldd	r11, Z+1	; 0x01
     d44:	36 fe       	sbrs	r3, 6
     d46:	03 c0       	rjmp	.+6      	; 0xd4e <vfprintf+0x174>
     d48:	69 2d       	mov	r22, r9
     d4a:	70 e0       	ldi	r23, 0x00	; 0
     d4c:	02 c0       	rjmp	.+4      	; 0xd52 <vfprintf+0x178>
     d4e:	6f ef       	ldi	r22, 0xFF	; 255
     d50:	7f ef       	ldi	r23, 0xFF	; 255
     d52:	c5 01       	movw	r24, r10
     d54:	0e 94 8f 0a 	call	0x151e	; 0x151e <strnlen_P>
     d58:	4c 01       	movw	r8, r24
     d5a:	f3 2d       	mov	r31, r3
     d5c:	f0 68       	ori	r31, 0x80	; 128
     d5e:	3f 2e       	mov	r3, r31
     d60:	82 01       	movw	r16, r4
     d62:	33 fc       	sbrc	r3, 3
     d64:	1b c0       	rjmp	.+54     	; 0xd9c <vfprintf+0x1c2>
     d66:	82 2d       	mov	r24, r2
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	88 16       	cp	r8, r24
     d6c:	99 06       	cpc	r9, r25
     d6e:	b0 f4       	brcc	.+44     	; 0xd9c <vfprintf+0x1c2>
     d70:	b6 01       	movw	r22, r12
     d72:	80 e2       	ldi	r24, 0x20	; 32
     d74:	90 e0       	ldi	r25, 0x00	; 0
     d76:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <fputc>
     d7a:	2a 94       	dec	r2
     d7c:	f4 cf       	rjmp	.-24     	; 0xd66 <vfprintf+0x18c>
     d7e:	f5 01       	movw	r30, r10
     d80:	37 fc       	sbrc	r3, 7
     d82:	85 91       	lpm	r24, Z+
     d84:	37 fe       	sbrs	r3, 7
     d86:	81 91       	ld	r24, Z+
     d88:	5f 01       	movw	r10, r30
     d8a:	b6 01       	movw	r22, r12
     d8c:	90 e0       	ldi	r25, 0x00	; 0
     d8e:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <fputc>
     d92:	21 10       	cpse	r2, r1
     d94:	2a 94       	dec	r2
     d96:	21 e0       	ldi	r18, 0x01	; 1
     d98:	82 1a       	sub	r8, r18
     d9a:	91 08       	sbc	r9, r1
     d9c:	81 14       	cp	r8, r1
     d9e:	91 04       	cpc	r9, r1
     da0:	71 f7       	brne	.-36     	; 0xd7e <vfprintf+0x1a4>
     da2:	e8 c0       	rjmp	.+464    	; 0xf74 <vfprintf+0x39a>
     da4:	84 36       	cpi	r24, 0x64	; 100
     da6:	11 f0       	breq	.+4      	; 0xdac <vfprintf+0x1d2>
     da8:	89 36       	cpi	r24, 0x69	; 105
     daa:	41 f5       	brne	.+80     	; 0xdfc <vfprintf+0x222>
     dac:	f8 01       	movw	r30, r16
     dae:	37 fe       	sbrs	r3, 7
     db0:	07 c0       	rjmp	.+14     	; 0xdc0 <vfprintf+0x1e6>
     db2:	60 81       	ld	r22, Z
     db4:	71 81       	ldd	r23, Z+1	; 0x01
     db6:	82 81       	ldd	r24, Z+2	; 0x02
     db8:	93 81       	ldd	r25, Z+3	; 0x03
     dba:	0c 5f       	subi	r16, 0xFC	; 252
     dbc:	1f 4f       	sbci	r17, 0xFF	; 255
     dbe:	08 c0       	rjmp	.+16     	; 0xdd0 <vfprintf+0x1f6>
     dc0:	60 81       	ld	r22, Z
     dc2:	71 81       	ldd	r23, Z+1	; 0x01
     dc4:	07 2e       	mov	r0, r23
     dc6:	00 0c       	add	r0, r0
     dc8:	88 0b       	sbc	r24, r24
     dca:	99 0b       	sbc	r25, r25
     dcc:	0e 5f       	subi	r16, 0xFE	; 254
     dce:	1f 4f       	sbci	r17, 0xFF	; 255
     dd0:	f3 2d       	mov	r31, r3
     dd2:	ff 76       	andi	r31, 0x6F	; 111
     dd4:	3f 2e       	mov	r3, r31
     dd6:	97 ff       	sbrs	r25, 7
     dd8:	09 c0       	rjmp	.+18     	; 0xdec <vfprintf+0x212>
     dda:	90 95       	com	r25
     ddc:	80 95       	com	r24
     dde:	70 95       	com	r23
     de0:	61 95       	neg	r22
     de2:	7f 4f       	sbci	r23, 0xFF	; 255
     de4:	8f 4f       	sbci	r24, 0xFF	; 255
     de6:	9f 4f       	sbci	r25, 0xFF	; 255
     de8:	f0 68       	ori	r31, 0x80	; 128
     dea:	3f 2e       	mov	r3, r31
     dec:	2a e0       	ldi	r18, 0x0A	; 10
     dee:	30 e0       	ldi	r19, 0x00	; 0
     df0:	a3 01       	movw	r20, r6
     df2:	0e 94 38 0b 	call	0x1670	; 0x1670 <__ultoa_invert>
     df6:	88 2e       	mov	r8, r24
     df8:	86 18       	sub	r8, r6
     dfa:	45 c0       	rjmp	.+138    	; 0xe86 <vfprintf+0x2ac>
     dfc:	85 37       	cpi	r24, 0x75	; 117
     dfe:	31 f4       	brne	.+12     	; 0xe0c <vfprintf+0x232>
     e00:	23 2d       	mov	r18, r3
     e02:	2f 7e       	andi	r18, 0xEF	; 239
     e04:	b2 2e       	mov	r11, r18
     e06:	2a e0       	ldi	r18, 0x0A	; 10
     e08:	30 e0       	ldi	r19, 0x00	; 0
     e0a:	25 c0       	rjmp	.+74     	; 0xe56 <vfprintf+0x27c>
     e0c:	93 2d       	mov	r25, r3
     e0e:	99 7f       	andi	r25, 0xF9	; 249
     e10:	b9 2e       	mov	r11, r25
     e12:	8f 36       	cpi	r24, 0x6F	; 111
     e14:	c1 f0       	breq	.+48     	; 0xe46 <vfprintf+0x26c>
     e16:	18 f4       	brcc	.+6      	; 0xe1e <vfprintf+0x244>
     e18:	88 35       	cpi	r24, 0x58	; 88
     e1a:	79 f0       	breq	.+30     	; 0xe3a <vfprintf+0x260>
     e1c:	b5 c0       	rjmp	.+362    	; 0xf88 <vfprintf+0x3ae>
     e1e:	80 37       	cpi	r24, 0x70	; 112
     e20:	19 f0       	breq	.+6      	; 0xe28 <vfprintf+0x24e>
     e22:	88 37       	cpi	r24, 0x78	; 120
     e24:	21 f0       	breq	.+8      	; 0xe2e <vfprintf+0x254>
     e26:	b0 c0       	rjmp	.+352    	; 0xf88 <vfprintf+0x3ae>
     e28:	e9 2f       	mov	r30, r25
     e2a:	e0 61       	ori	r30, 0x10	; 16
     e2c:	be 2e       	mov	r11, r30
     e2e:	b4 fe       	sbrs	r11, 4
     e30:	0d c0       	rjmp	.+26     	; 0xe4c <vfprintf+0x272>
     e32:	fb 2d       	mov	r31, r11
     e34:	f4 60       	ori	r31, 0x04	; 4
     e36:	bf 2e       	mov	r11, r31
     e38:	09 c0       	rjmp	.+18     	; 0xe4c <vfprintf+0x272>
     e3a:	34 fe       	sbrs	r3, 4
     e3c:	0a c0       	rjmp	.+20     	; 0xe52 <vfprintf+0x278>
     e3e:	29 2f       	mov	r18, r25
     e40:	26 60       	ori	r18, 0x06	; 6
     e42:	b2 2e       	mov	r11, r18
     e44:	06 c0       	rjmp	.+12     	; 0xe52 <vfprintf+0x278>
     e46:	28 e0       	ldi	r18, 0x08	; 8
     e48:	30 e0       	ldi	r19, 0x00	; 0
     e4a:	05 c0       	rjmp	.+10     	; 0xe56 <vfprintf+0x27c>
     e4c:	20 e1       	ldi	r18, 0x10	; 16
     e4e:	30 e0       	ldi	r19, 0x00	; 0
     e50:	02 c0       	rjmp	.+4      	; 0xe56 <vfprintf+0x27c>
     e52:	20 e1       	ldi	r18, 0x10	; 16
     e54:	32 e0       	ldi	r19, 0x02	; 2
     e56:	f8 01       	movw	r30, r16
     e58:	b7 fe       	sbrs	r11, 7
     e5a:	07 c0       	rjmp	.+14     	; 0xe6a <vfprintf+0x290>
     e5c:	60 81       	ld	r22, Z
     e5e:	71 81       	ldd	r23, Z+1	; 0x01
     e60:	82 81       	ldd	r24, Z+2	; 0x02
     e62:	93 81       	ldd	r25, Z+3	; 0x03
     e64:	0c 5f       	subi	r16, 0xFC	; 252
     e66:	1f 4f       	sbci	r17, 0xFF	; 255
     e68:	06 c0       	rjmp	.+12     	; 0xe76 <vfprintf+0x29c>
     e6a:	60 81       	ld	r22, Z
     e6c:	71 81       	ldd	r23, Z+1	; 0x01
     e6e:	80 e0       	ldi	r24, 0x00	; 0
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	0e 5f       	subi	r16, 0xFE	; 254
     e74:	1f 4f       	sbci	r17, 0xFF	; 255
     e76:	a3 01       	movw	r20, r6
     e78:	0e 94 38 0b 	call	0x1670	; 0x1670 <__ultoa_invert>
     e7c:	88 2e       	mov	r8, r24
     e7e:	86 18       	sub	r8, r6
     e80:	fb 2d       	mov	r31, r11
     e82:	ff 77       	andi	r31, 0x7F	; 127
     e84:	3f 2e       	mov	r3, r31
     e86:	36 fe       	sbrs	r3, 6
     e88:	0d c0       	rjmp	.+26     	; 0xea4 <vfprintf+0x2ca>
     e8a:	23 2d       	mov	r18, r3
     e8c:	2e 7f       	andi	r18, 0xFE	; 254
     e8e:	a2 2e       	mov	r10, r18
     e90:	89 14       	cp	r8, r9
     e92:	58 f4       	brcc	.+22     	; 0xeaa <vfprintf+0x2d0>
     e94:	34 fe       	sbrs	r3, 4
     e96:	0b c0       	rjmp	.+22     	; 0xeae <vfprintf+0x2d4>
     e98:	32 fc       	sbrc	r3, 2
     e9a:	09 c0       	rjmp	.+18     	; 0xeae <vfprintf+0x2d4>
     e9c:	83 2d       	mov	r24, r3
     e9e:	8e 7e       	andi	r24, 0xEE	; 238
     ea0:	a8 2e       	mov	r10, r24
     ea2:	05 c0       	rjmp	.+10     	; 0xeae <vfprintf+0x2d4>
     ea4:	b8 2c       	mov	r11, r8
     ea6:	a3 2c       	mov	r10, r3
     ea8:	03 c0       	rjmp	.+6      	; 0xeb0 <vfprintf+0x2d6>
     eaa:	b8 2c       	mov	r11, r8
     eac:	01 c0       	rjmp	.+2      	; 0xeb0 <vfprintf+0x2d6>
     eae:	b9 2c       	mov	r11, r9
     eb0:	a4 fe       	sbrs	r10, 4
     eb2:	0f c0       	rjmp	.+30     	; 0xed2 <vfprintf+0x2f8>
     eb4:	fe 01       	movw	r30, r28
     eb6:	e8 0d       	add	r30, r8
     eb8:	f1 1d       	adc	r31, r1
     eba:	80 81       	ld	r24, Z
     ebc:	80 33       	cpi	r24, 0x30	; 48
     ebe:	21 f4       	brne	.+8      	; 0xec8 <vfprintf+0x2ee>
     ec0:	9a 2d       	mov	r25, r10
     ec2:	99 7e       	andi	r25, 0xE9	; 233
     ec4:	a9 2e       	mov	r10, r25
     ec6:	09 c0       	rjmp	.+18     	; 0xeda <vfprintf+0x300>
     ec8:	a2 fe       	sbrs	r10, 2
     eca:	06 c0       	rjmp	.+12     	; 0xed8 <vfprintf+0x2fe>
     ecc:	b3 94       	inc	r11
     ece:	b3 94       	inc	r11
     ed0:	04 c0       	rjmp	.+8      	; 0xeda <vfprintf+0x300>
     ed2:	8a 2d       	mov	r24, r10
     ed4:	86 78       	andi	r24, 0x86	; 134
     ed6:	09 f0       	breq	.+2      	; 0xeda <vfprintf+0x300>
     ed8:	b3 94       	inc	r11
     eda:	a3 fc       	sbrc	r10, 3
     edc:	11 c0       	rjmp	.+34     	; 0xf00 <vfprintf+0x326>
     ede:	a0 fe       	sbrs	r10, 0
     ee0:	06 c0       	rjmp	.+12     	; 0xeee <vfprintf+0x314>
     ee2:	b2 14       	cp	r11, r2
     ee4:	88 f4       	brcc	.+34     	; 0xf08 <vfprintf+0x32e>
     ee6:	28 0c       	add	r2, r8
     ee8:	92 2c       	mov	r9, r2
     eea:	9b 18       	sub	r9, r11
     eec:	0e c0       	rjmp	.+28     	; 0xf0a <vfprintf+0x330>
     eee:	b2 14       	cp	r11, r2
     ef0:	60 f4       	brcc	.+24     	; 0xf0a <vfprintf+0x330>
     ef2:	b6 01       	movw	r22, r12
     ef4:	80 e2       	ldi	r24, 0x20	; 32
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <fputc>
     efc:	b3 94       	inc	r11
     efe:	f7 cf       	rjmp	.-18     	; 0xeee <vfprintf+0x314>
     f00:	b2 14       	cp	r11, r2
     f02:	18 f4       	brcc	.+6      	; 0xf0a <vfprintf+0x330>
     f04:	2b 18       	sub	r2, r11
     f06:	02 c0       	rjmp	.+4      	; 0xf0c <vfprintf+0x332>
     f08:	98 2c       	mov	r9, r8
     f0a:	21 2c       	mov	r2, r1
     f0c:	a4 fe       	sbrs	r10, 4
     f0e:	10 c0       	rjmp	.+32     	; 0xf30 <vfprintf+0x356>
     f10:	b6 01       	movw	r22, r12
     f12:	80 e3       	ldi	r24, 0x30	; 48
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <fputc>
     f1a:	a2 fe       	sbrs	r10, 2
     f1c:	17 c0       	rjmp	.+46     	; 0xf4c <vfprintf+0x372>
     f1e:	a1 fc       	sbrc	r10, 1
     f20:	03 c0       	rjmp	.+6      	; 0xf28 <vfprintf+0x34e>
     f22:	88 e7       	ldi	r24, 0x78	; 120
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	02 c0       	rjmp	.+4      	; 0xf2c <vfprintf+0x352>
     f28:	88 e5       	ldi	r24, 0x58	; 88
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	b6 01       	movw	r22, r12
     f2e:	0c c0       	rjmp	.+24     	; 0xf48 <vfprintf+0x36e>
     f30:	8a 2d       	mov	r24, r10
     f32:	86 78       	andi	r24, 0x86	; 134
     f34:	59 f0       	breq	.+22     	; 0xf4c <vfprintf+0x372>
     f36:	a1 fe       	sbrs	r10, 1
     f38:	02 c0       	rjmp	.+4      	; 0xf3e <vfprintf+0x364>
     f3a:	8b e2       	ldi	r24, 0x2B	; 43
     f3c:	01 c0       	rjmp	.+2      	; 0xf40 <vfprintf+0x366>
     f3e:	80 e2       	ldi	r24, 0x20	; 32
     f40:	a7 fc       	sbrc	r10, 7
     f42:	8d e2       	ldi	r24, 0x2D	; 45
     f44:	b6 01       	movw	r22, r12
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <fputc>
     f4c:	89 14       	cp	r8, r9
     f4e:	38 f4       	brcc	.+14     	; 0xf5e <vfprintf+0x384>
     f50:	b6 01       	movw	r22, r12
     f52:	80 e3       	ldi	r24, 0x30	; 48
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <fputc>
     f5a:	9a 94       	dec	r9
     f5c:	f7 cf       	rjmp	.-18     	; 0xf4c <vfprintf+0x372>
     f5e:	8a 94       	dec	r8
     f60:	f3 01       	movw	r30, r6
     f62:	e8 0d       	add	r30, r8
     f64:	f1 1d       	adc	r31, r1
     f66:	80 81       	ld	r24, Z
     f68:	b6 01       	movw	r22, r12
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <fputc>
     f70:	81 10       	cpse	r8, r1
     f72:	f5 cf       	rjmp	.-22     	; 0xf5e <vfprintf+0x384>
     f74:	22 20       	and	r2, r2
     f76:	09 f4       	brne	.+2      	; 0xf7a <vfprintf+0x3a0>
     f78:	42 ce       	rjmp	.-892    	; 0xbfe <vfprintf+0x24>
     f7a:	b6 01       	movw	r22, r12
     f7c:	80 e2       	ldi	r24, 0x20	; 32
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <fputc>
     f84:	2a 94       	dec	r2
     f86:	f6 cf       	rjmp	.-20     	; 0xf74 <vfprintf+0x39a>
     f88:	f6 01       	movw	r30, r12
     f8a:	86 81       	ldd	r24, Z+6	; 0x06
     f8c:	97 81       	ldd	r25, Z+7	; 0x07
     f8e:	02 c0       	rjmp	.+4      	; 0xf94 <vfprintf+0x3ba>
     f90:	8f ef       	ldi	r24, 0xFF	; 255
     f92:	9f ef       	ldi	r25, 0xFF	; 255
     f94:	2b 96       	adiw	r28, 0x0b	; 11
     f96:	e2 e1       	ldi	r30, 0x12	; 18
     f98:	0c 94 b5 0b 	jmp	0x176a	; 0x176a <__epilogue_restores__>

00000f9c <putval>:
     f9c:	20 fd       	sbrc	r18, 0
     f9e:	09 c0       	rjmp	.+18     	; 0xfb2 <putval+0x16>
     fa0:	fc 01       	movw	r30, r24
     fa2:	23 fd       	sbrc	r18, 3
     fa4:	05 c0       	rjmp	.+10     	; 0xfb0 <putval+0x14>
     fa6:	22 ff       	sbrs	r18, 2
     fa8:	02 c0       	rjmp	.+4      	; 0xfae <putval+0x12>
     faa:	73 83       	std	Z+3, r23	; 0x03
     fac:	62 83       	std	Z+2, r22	; 0x02
     fae:	51 83       	std	Z+1, r21	; 0x01
     fb0:	40 83       	st	Z, r20
     fb2:	08 95       	ret

00000fb4 <mulacc>:
     fb4:	44 fd       	sbrc	r20, 4
     fb6:	17 c0       	rjmp	.+46     	; 0xfe6 <mulacc+0x32>
     fb8:	46 fd       	sbrc	r20, 6
     fba:	17 c0       	rjmp	.+46     	; 0xfea <mulacc+0x36>
     fbc:	ab 01       	movw	r20, r22
     fbe:	bc 01       	movw	r22, r24
     fc0:	da 01       	movw	r26, r20
     fc2:	fb 01       	movw	r30, r22
     fc4:	aa 0f       	add	r26, r26
     fc6:	bb 1f       	adc	r27, r27
     fc8:	ee 1f       	adc	r30, r30
     fca:	ff 1f       	adc	r31, r31
     fcc:	10 94       	com	r1
     fce:	d1 f7       	brne	.-12     	; 0xfc4 <mulacc+0x10>
     fd0:	4a 0f       	add	r20, r26
     fd2:	5b 1f       	adc	r21, r27
     fd4:	6e 1f       	adc	r22, r30
     fd6:	7f 1f       	adc	r23, r31
     fd8:	cb 01       	movw	r24, r22
     fda:	ba 01       	movw	r22, r20
     fdc:	66 0f       	add	r22, r22
     fde:	77 1f       	adc	r23, r23
     fe0:	88 1f       	adc	r24, r24
     fe2:	99 1f       	adc	r25, r25
     fe4:	09 c0       	rjmp	.+18     	; 0xff8 <mulacc+0x44>
     fe6:	33 e0       	ldi	r19, 0x03	; 3
     fe8:	01 c0       	rjmp	.+2      	; 0xfec <mulacc+0x38>
     fea:	34 e0       	ldi	r19, 0x04	; 4
     fec:	66 0f       	add	r22, r22
     fee:	77 1f       	adc	r23, r23
     ff0:	88 1f       	adc	r24, r24
     ff2:	99 1f       	adc	r25, r25
     ff4:	31 50       	subi	r19, 0x01	; 1
     ff6:	d1 f7       	brne	.-12     	; 0xfec <mulacc+0x38>
     ff8:	62 0f       	add	r22, r18
     ffa:	71 1d       	adc	r23, r1
     ffc:	81 1d       	adc	r24, r1
     ffe:	91 1d       	adc	r25, r1
    1000:	08 95       	ret

00001002 <skip_spaces>:
    1002:	0f 93       	push	r16
    1004:	1f 93       	push	r17
    1006:	cf 93       	push	r28
    1008:	df 93       	push	r29
    100a:	8c 01       	movw	r16, r24
    100c:	c8 01       	movw	r24, r16
    100e:	0e 94 a5 0a 	call	0x154a	; 0x154a <fgetc>
    1012:	ec 01       	movw	r28, r24
    1014:	97 fd       	sbrc	r25, 7
    1016:	08 c0       	rjmp	.+16     	; 0x1028 <skip_spaces+0x26>
    1018:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <isspace>
    101c:	89 2b       	or	r24, r25
    101e:	b1 f7       	brne	.-20     	; 0x100c <skip_spaces+0xa>
    1020:	b8 01       	movw	r22, r16
    1022:	ce 01       	movw	r24, r28
    1024:	0e 94 1f 0b 	call	0x163e	; 0x163e <ungetc>
    1028:	ce 01       	movw	r24, r28
    102a:	df 91       	pop	r29
    102c:	cf 91       	pop	r28
    102e:	1f 91       	pop	r17
    1030:	0f 91       	pop	r16
    1032:	08 95       	ret

00001034 <conv_int>:
    1034:	8f 92       	push	r8
    1036:	9f 92       	push	r9
    1038:	af 92       	push	r10
    103a:	bf 92       	push	r11
    103c:	ef 92       	push	r14
    103e:	ff 92       	push	r15
    1040:	0f 93       	push	r16
    1042:	1f 93       	push	r17
    1044:	cf 93       	push	r28
    1046:	df 93       	push	r29
    1048:	8c 01       	movw	r16, r24
    104a:	d6 2f       	mov	r29, r22
    104c:	7a 01       	movw	r14, r20
    104e:	b2 2e       	mov	r11, r18
    1050:	0e 94 a5 0a 	call	0x154a	; 0x154a <fgetc>
    1054:	9c 01       	movw	r18, r24
    1056:	33 27       	eor	r19, r19
    1058:	2b 32       	cpi	r18, 0x2B	; 43
    105a:	31 05       	cpc	r19, r1
    105c:	31 f0       	breq	.+12     	; 0x106a <conv_int+0x36>
    105e:	2d 32       	cpi	r18, 0x2D	; 45
    1060:	31 05       	cpc	r19, r1
    1062:	61 f4       	brne	.+24     	; 0x107c <conv_int+0x48>
    1064:	8b 2d       	mov	r24, r11
    1066:	80 68       	ori	r24, 0x80	; 128
    1068:	b8 2e       	mov	r11, r24
    106a:	d1 50       	subi	r29, 0x01	; 1
    106c:	11 f4       	brne	.+4      	; 0x1072 <conv_int+0x3e>
    106e:	80 e0       	ldi	r24, 0x00	; 0
    1070:	68 c0       	rjmp	.+208    	; 0x1142 <conv_int+0x10e>
    1072:	c8 01       	movw	r24, r16
    1074:	0e 94 a5 0a 	call	0x154a	; 0x154a <fgetc>
    1078:	97 fd       	sbrc	r25, 7
    107a:	f9 cf       	rjmp	.-14     	; 0x106e <conv_int+0x3a>
    107c:	cb 2d       	mov	r28, r11
    107e:	cd 7f       	andi	r28, 0xFD	; 253
    1080:	2b 2d       	mov	r18, r11
    1082:	20 73       	andi	r18, 0x30	; 48
    1084:	09 f5       	brne	.+66     	; 0x10c8 <conv_int+0x94>
    1086:	80 33       	cpi	r24, 0x30	; 48
    1088:	f9 f4       	brne	.+62     	; 0x10c8 <conv_int+0x94>
    108a:	aa 24       	eor	r10, r10
    108c:	aa 94       	dec	r10
    108e:	ad 0e       	add	r10, r29
    1090:	09 f4       	brne	.+2      	; 0x1094 <conv_int+0x60>
    1092:	43 c0       	rjmp	.+134    	; 0x111a <conv_int+0xe6>
    1094:	c8 01       	movw	r24, r16
    1096:	0e 94 a5 0a 	call	0x154a	; 0x154a <fgetc>
    109a:	97 fd       	sbrc	r25, 7
    109c:	3e c0       	rjmp	.+124    	; 0x111a <conv_int+0xe6>
    109e:	9c 01       	movw	r18, r24
    10a0:	2f 7d       	andi	r18, 0xDF	; 223
    10a2:	33 27       	eor	r19, r19
    10a4:	28 35       	cpi	r18, 0x58	; 88
    10a6:	31 05       	cpc	r19, r1
    10a8:	49 f4       	brne	.+18     	; 0x10bc <conv_int+0x88>
    10aa:	c2 64       	ori	r28, 0x42	; 66
    10ac:	d2 50       	subi	r29, 0x02	; 2
    10ae:	a9 f1       	breq	.+106    	; 0x111a <conv_int+0xe6>
    10b0:	c8 01       	movw	r24, r16
    10b2:	0e 94 a5 0a 	call	0x154a	; 0x154a <fgetc>
    10b6:	97 ff       	sbrs	r25, 7
    10b8:	07 c0       	rjmp	.+14     	; 0x10c8 <conv_int+0x94>
    10ba:	2f c0       	rjmp	.+94     	; 0x111a <conv_int+0xe6>
    10bc:	b6 fe       	sbrs	r11, 6
    10be:	02 c0       	rjmp	.+4      	; 0x10c4 <conv_int+0x90>
    10c0:	c2 60       	ori	r28, 0x02	; 2
    10c2:	01 c0       	rjmp	.+2      	; 0x10c6 <conv_int+0x92>
    10c4:	c2 61       	ori	r28, 0x12	; 18
    10c6:	da 2d       	mov	r29, r10
    10c8:	81 2c       	mov	r8, r1
    10ca:	91 2c       	mov	r9, r1
    10cc:	54 01       	movw	r10, r8
    10ce:	20 ed       	ldi	r18, 0xD0	; 208
    10d0:	28 0f       	add	r18, r24
    10d2:	28 30       	cpi	r18, 0x08	; 8
    10d4:	80 f0       	brcs	.+32     	; 0x10f6 <conv_int+0xc2>
    10d6:	c4 ff       	sbrs	r28, 4
    10d8:	04 c0       	rjmp	.+8      	; 0x10e2 <conv_int+0xae>
    10da:	b8 01       	movw	r22, r16
    10dc:	0e 94 1f 0b 	call	0x163e	; 0x163e <ungetc>
    10e0:	19 c0       	rjmp	.+50     	; 0x1114 <conv_int+0xe0>
    10e2:	2a 30       	cpi	r18, 0x0A	; 10
    10e4:	40 f0       	brcs	.+16     	; 0x10f6 <conv_int+0xc2>
    10e6:	c6 ff       	sbrs	r28, 6
    10e8:	f8 cf       	rjmp	.-16     	; 0x10da <conv_int+0xa6>
    10ea:	2f 7d       	andi	r18, 0xDF	; 223
    10ec:	3f ee       	ldi	r19, 0xEF	; 239
    10ee:	32 0f       	add	r19, r18
    10f0:	36 30       	cpi	r19, 0x06	; 6
    10f2:	98 f7       	brcc	.-26     	; 0x10da <conv_int+0xa6>
    10f4:	27 50       	subi	r18, 0x07	; 7
    10f6:	4c 2f       	mov	r20, r28
    10f8:	c5 01       	movw	r24, r10
    10fa:	b4 01       	movw	r22, r8
    10fc:	0e 94 da 07 	call	0xfb4	; 0xfb4 <mulacc>
    1100:	4b 01       	movw	r8, r22
    1102:	5c 01       	movw	r10, r24
    1104:	c2 60       	ori	r28, 0x02	; 2
    1106:	d1 50       	subi	r29, 0x01	; 1
    1108:	59 f0       	breq	.+22     	; 0x1120 <conv_int+0xec>
    110a:	c8 01       	movw	r24, r16
    110c:	0e 94 a5 0a 	call	0x154a	; 0x154a <fgetc>
    1110:	97 ff       	sbrs	r25, 7
    1112:	dd cf       	rjmp	.-70     	; 0x10ce <conv_int+0x9a>
    1114:	c1 fd       	sbrc	r28, 1
    1116:	04 c0       	rjmp	.+8      	; 0x1120 <conv_int+0xec>
    1118:	aa cf       	rjmp	.-172    	; 0x106e <conv_int+0x3a>
    111a:	81 2c       	mov	r8, r1
    111c:	91 2c       	mov	r9, r1
    111e:	54 01       	movw	r10, r8
    1120:	c7 ff       	sbrs	r28, 7
    1122:	08 c0       	rjmp	.+16     	; 0x1134 <conv_int+0x100>
    1124:	b0 94       	com	r11
    1126:	a0 94       	com	r10
    1128:	90 94       	com	r9
    112a:	80 94       	com	r8
    112c:	81 1c       	adc	r8, r1
    112e:	91 1c       	adc	r9, r1
    1130:	a1 1c       	adc	r10, r1
    1132:	b1 1c       	adc	r11, r1
    1134:	2c 2f       	mov	r18, r28
    1136:	b5 01       	movw	r22, r10
    1138:	a4 01       	movw	r20, r8
    113a:	c7 01       	movw	r24, r14
    113c:	0e 94 ce 07 	call	0xf9c	; 0xf9c <putval>
    1140:	81 e0       	ldi	r24, 0x01	; 1
    1142:	df 91       	pop	r29
    1144:	cf 91       	pop	r28
    1146:	1f 91       	pop	r17
    1148:	0f 91       	pop	r16
    114a:	ff 90       	pop	r15
    114c:	ef 90       	pop	r14
    114e:	bf 90       	pop	r11
    1150:	af 90       	pop	r10
    1152:	9f 90       	pop	r9
    1154:	8f 90       	pop	r8
    1156:	08 95       	ret

00001158 <conv_brk>:
    1158:	a0 e2       	ldi	r26, 0x20	; 32
    115a:	b0 e0       	ldi	r27, 0x00	; 0
    115c:	e2 eb       	ldi	r30, 0xB2	; 178
    115e:	f8 e0       	ldi	r31, 0x08	; 8
    1160:	0c 94 9c 0b 	jmp	0x1738	; 0x1738 <__prologue_saves__+0x6>
    1164:	5c 01       	movw	r10, r24
    1166:	96 2e       	mov	r9, r22
    1168:	7a 01       	movw	r14, r20
    116a:	f9 01       	movw	r30, r18
    116c:	8e 01       	movw	r16, r28
    116e:	0f 5f       	subi	r16, 0xFF	; 255
    1170:	1f 4f       	sbci	r17, 0xFF	; 255
    1172:	68 01       	movw	r12, r16
    1174:	80 e2       	ldi	r24, 0x20	; 32
    1176:	d8 01       	movw	r26, r16
    1178:	1d 92       	st	X+, r1
    117a:	8a 95       	dec	r24
    117c:	e9 f7       	brne	.-6      	; 0x1178 <conv_brk+0x20>
    117e:	d5 01       	movw	r26, r10
    1180:	13 96       	adiw	r26, 0x03	; 3
    1182:	8c 90       	ld	r8, X
    1184:	80 e0       	ldi	r24, 0x00	; 0
    1186:	90 e0       	ldi	r25, 0x00	; 0
    1188:	61 2c       	mov	r6, r1
    118a:	71 2c       	mov	r7, r1
    118c:	30 e0       	ldi	r19, 0x00	; 0
    118e:	61 e0       	ldi	r22, 0x01	; 1
    1190:	70 e0       	ldi	r23, 0x00	; 0
    1192:	83 fc       	sbrc	r8, 3
    1194:	25 91       	lpm	r18, Z+
    1196:	83 fe       	sbrs	r8, 3
    1198:	21 91       	ld	r18, Z+
    119a:	8f 01       	movw	r16, r30
    119c:	52 2e       	mov	r5, r18
    119e:	21 11       	cpse	r18, r1
    11a0:	03 c0       	rjmp	.+6      	; 0x11a8 <conv_brk+0x50>
    11a2:	80 e0       	ldi	r24, 0x00	; 0
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	92 c0       	rjmp	.+292    	; 0x12cc <conv_brk+0x174>
    11a8:	2e 35       	cpi	r18, 0x5E	; 94
    11aa:	11 f4       	brne	.+4      	; 0x11b0 <conv_brk+0x58>
    11ac:	00 97       	sbiw	r24, 0x00	; 0
    11ae:	51 f1       	breq	.+84     	; 0x1204 <conv_brk+0xac>
    11b0:	43 2f       	mov	r20, r19
    11b2:	50 e0       	ldi	r21, 0x00	; 0
    11b4:	48 17       	cp	r20, r24
    11b6:	59 07       	cpc	r21, r25
    11b8:	3c f4       	brge	.+14     	; 0x11c8 <conv_brk+0x70>
    11ba:	2d 35       	cpi	r18, 0x5D	; 93
    11bc:	59 f1       	breq	.+86     	; 0x1214 <conv_brk+0xbc>
    11be:	2d 32       	cpi	r18, 0x2D	; 45
    11c0:	19 f4       	brne	.+6      	; 0x11c8 <conv_brk+0x70>
    11c2:	77 20       	and	r7, r7
    11c4:	09 f1       	breq	.+66     	; 0x1208 <conv_brk+0xb0>
    11c6:	03 c0       	rjmp	.+6      	; 0x11ce <conv_brk+0x76>
    11c8:	77 20       	and	r7, r7
    11ca:	09 f4       	brne	.+2      	; 0x11ce <conv_brk+0x76>
    11cc:	6a c0       	rjmp	.+212    	; 0x12a2 <conv_brk+0x14a>
    11ce:	45 2d       	mov	r20, r5
    11d0:	46 95       	lsr	r20
    11d2:	46 95       	lsr	r20
    11d4:	46 95       	lsr	r20
    11d6:	d6 01       	movw	r26, r12
    11d8:	a4 0f       	add	r26, r20
    11da:	b1 1d       	adc	r27, r1
    11dc:	45 2d       	mov	r20, r5
    11de:	47 70       	andi	r20, 0x07	; 7
    11e0:	8b 01       	movw	r16, r22
    11e2:	02 c0       	rjmp	.+4      	; 0x11e8 <conv_brk+0x90>
    11e4:	00 0f       	add	r16, r16
    11e6:	11 1f       	adc	r17, r17
    11e8:	4a 95       	dec	r20
    11ea:	e2 f7       	brpl	.-8      	; 0x11e4 <conv_brk+0x8c>
    11ec:	a8 01       	movw	r20, r16
    11ee:	5c 91       	ld	r21, X
    11f0:	45 2b       	or	r20, r21
    11f2:	4c 93       	st	X, r20
    11f4:	65 14       	cp	r6, r5
    11f6:	59 f0       	breq	.+22     	; 0x120e <conv_brk+0xb6>
    11f8:	56 14       	cp	r5, r6
    11fa:	10 f4       	brcc	.+4      	; 0x1200 <conv_brk+0xa8>
    11fc:	53 94       	inc	r5
    11fe:	e7 cf       	rjmp	.-50     	; 0x11ce <conv_brk+0x76>
    1200:	5a 94       	dec	r5
    1202:	e5 cf       	rjmp	.-54     	; 0x11ce <conv_brk+0x76>
    1204:	31 e0       	ldi	r19, 0x01	; 1
    1206:	04 c0       	rjmp	.+8      	; 0x1210 <conv_brk+0xb8>
    1208:	77 24       	eor	r7, r7
    120a:	73 94       	inc	r7
    120c:	01 c0       	rjmp	.+2      	; 0x1210 <conv_brk+0xb8>
    120e:	71 2c       	mov	r7, r1
    1210:	01 96       	adiw	r24, 0x01	; 1
    1212:	bf cf       	rjmp	.-130    	; 0x1192 <conv_brk+0x3a>
    1214:	77 20       	and	r7, r7
    1216:	19 f0       	breq	.+6      	; 0x121e <conv_brk+0xc6>
    1218:	8e 81       	ldd	r24, Y+6	; 0x06
    121a:	80 62       	ori	r24, 0x20	; 32
    121c:	8e 83       	std	Y+6, r24	; 0x06
    121e:	31 11       	cpse	r19, r1
    1220:	03 c0       	rjmp	.+6      	; 0x1228 <conv_brk+0xd0>
    1222:	88 24       	eor	r8, r8
    1224:	83 94       	inc	r8
    1226:	17 c0       	rjmp	.+46     	; 0x1256 <conv_brk+0xfe>
    1228:	f6 01       	movw	r30, r12
    122a:	9e 01       	movw	r18, r28
    122c:	2f 5d       	subi	r18, 0xDF	; 223
    122e:	3f 4f       	sbci	r19, 0xFF	; 255
    1230:	80 81       	ld	r24, Z
    1232:	80 95       	com	r24
    1234:	81 93       	st	Z+, r24
    1236:	2e 17       	cp	r18, r30
    1238:	3f 07       	cpc	r19, r31
    123a:	d1 f7       	brne	.-12     	; 0x1230 <conv_brk+0xd8>
    123c:	f2 cf       	rjmp	.-28     	; 0x1222 <conv_brk+0xca>
    123e:	e1 14       	cp	r14, r1
    1240:	f1 04       	cpc	r15, r1
    1242:	29 f0       	breq	.+10     	; 0x124e <conv_brk+0xf6>
    1244:	d7 01       	movw	r26, r14
    1246:	8c 93       	st	X, r24
    1248:	f7 01       	movw	r30, r14
    124a:	31 96       	adiw	r30, 0x01	; 1
    124c:	7f 01       	movw	r14, r30
    124e:	9a 94       	dec	r9
    1250:	81 2c       	mov	r8, r1
    1252:	99 20       	and	r9, r9
    1254:	f9 f0       	breq	.+62     	; 0x1294 <conv_brk+0x13c>
    1256:	c5 01       	movw	r24, r10
    1258:	0e 94 a5 0a 	call	0x154a	; 0x154a <fgetc>
    125c:	97 fd       	sbrc	r25, 7
    125e:	18 c0       	rjmp	.+48     	; 0x1290 <conv_brk+0x138>
    1260:	fc 01       	movw	r30, r24
    1262:	ff 27       	eor	r31, r31
    1264:	23 e0       	ldi	r18, 0x03	; 3
    1266:	f5 95       	asr	r31
    1268:	e7 95       	ror	r30
    126a:	2a 95       	dec	r18
    126c:	e1 f7       	brne	.-8      	; 0x1266 <conv_brk+0x10e>
    126e:	ec 0d       	add	r30, r12
    1270:	fd 1d       	adc	r31, r13
    1272:	20 81       	ld	r18, Z
    1274:	30 e0       	ldi	r19, 0x00	; 0
    1276:	ac 01       	movw	r20, r24
    1278:	47 70       	andi	r20, 0x07	; 7
    127a:	55 27       	eor	r21, r21
    127c:	02 c0       	rjmp	.+4      	; 0x1282 <conv_brk+0x12a>
    127e:	35 95       	asr	r19
    1280:	27 95       	ror	r18
    1282:	4a 95       	dec	r20
    1284:	e2 f7       	brpl	.-8      	; 0x127e <conv_brk+0x126>
    1286:	20 fd       	sbrc	r18, 0
    1288:	da cf       	rjmp	.-76     	; 0x123e <conv_brk+0xe6>
    128a:	b5 01       	movw	r22, r10
    128c:	0e 94 1f 0b 	call	0x163e	; 0x163e <ungetc>
    1290:	81 10       	cpse	r8, r1
    1292:	87 cf       	rjmp	.-242    	; 0x11a2 <conv_brk+0x4a>
    1294:	e1 14       	cp	r14, r1
    1296:	f1 04       	cpc	r15, r1
    1298:	11 f0       	breq	.+4      	; 0x129e <conv_brk+0x146>
    129a:	d7 01       	movw	r26, r14
    129c:	1c 92       	st	X, r1
    129e:	c8 01       	movw	r24, r16
    12a0:	15 c0       	rjmp	.+42     	; 0x12cc <conv_brk+0x174>
    12a2:	42 2f       	mov	r20, r18
    12a4:	46 95       	lsr	r20
    12a6:	46 95       	lsr	r20
    12a8:	46 95       	lsr	r20
    12aa:	d6 01       	movw	r26, r12
    12ac:	a4 0f       	add	r26, r20
    12ae:	b1 1d       	adc	r27, r1
    12b0:	42 2f       	mov	r20, r18
    12b2:	47 70       	andi	r20, 0x07	; 7
    12b4:	8b 01       	movw	r16, r22
    12b6:	02 c0       	rjmp	.+4      	; 0x12bc <conv_brk+0x164>
    12b8:	00 0f       	add	r16, r16
    12ba:	11 1f       	adc	r17, r17
    12bc:	4a 95       	dec	r20
    12be:	e2 f7       	brpl	.-8      	; 0x12b8 <conv_brk+0x160>
    12c0:	a8 01       	movw	r20, r16
    12c2:	5c 91       	ld	r21, X
    12c4:	45 2b       	or	r20, r21
    12c6:	4c 93       	st	X, r20
    12c8:	62 2e       	mov	r6, r18
    12ca:	a2 cf       	rjmp	.-188    	; 0x1210 <conv_brk+0xb8>
    12cc:	a0 96       	adiw	r28, 0x20	; 32
    12ce:	ef e0       	ldi	r30, 0x0F	; 15
    12d0:	0c 94 b8 0b 	jmp	0x1770	; 0x1770 <__epilogue_restores__+0x6>

000012d4 <vfscanf>:
    12d4:	a0 e0       	ldi	r26, 0x00	; 0
    12d6:	b0 e0       	ldi	r27, 0x00	; 0
    12d8:	e0 e7       	ldi	r30, 0x70	; 112
    12da:	f9 e0       	ldi	r31, 0x09	; 9
    12dc:	0c 94 9c 0b 	jmp	0x1738	; 0x1738 <__prologue_saves__+0x6>
    12e0:	6c 01       	movw	r12, r24
    12e2:	eb 01       	movw	r28, r22
    12e4:	5a 01       	movw	r10, r20
    12e6:	fc 01       	movw	r30, r24
    12e8:	17 82       	std	Z+7, r1	; 0x07
    12ea:	16 82       	std	Z+6, r1	; 0x06
    12ec:	51 2c       	mov	r5, r1
    12ee:	f6 01       	movw	r30, r12
    12f0:	e3 80       	ldd	r14, Z+3	; 0x03
    12f2:	fe 01       	movw	r30, r28
    12f4:	e3 fc       	sbrc	r14, 3
    12f6:	85 91       	lpm	r24, Z+
    12f8:	e3 fe       	sbrs	r14, 3
    12fa:	81 91       	ld	r24, Z+
    12fc:	18 2f       	mov	r17, r24
    12fe:	ef 01       	movw	r28, r30
    1300:	88 23       	and	r24, r24
    1302:	09 f4       	brne	.+2      	; 0x1306 <vfscanf+0x32>
    1304:	ee c0       	rjmp	.+476    	; 0x14e2 <vfscanf+0x20e>
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <isspace>
    130c:	89 2b       	or	r24, r25
    130e:	21 f0       	breq	.+8      	; 0x1318 <vfscanf+0x44>
    1310:	c6 01       	movw	r24, r12
    1312:	0e 94 01 08 	call	0x1002	; 0x1002 <skip_spaces>
    1316:	eb cf       	rjmp	.-42     	; 0x12ee <vfscanf+0x1a>
    1318:	15 32       	cpi	r17, 0x25	; 37
    131a:	41 f4       	brne	.+16     	; 0x132c <vfscanf+0x58>
    131c:	fe 01       	movw	r30, r28
    131e:	e3 fc       	sbrc	r14, 3
    1320:	15 91       	lpm	r17, Z+
    1322:	e3 fe       	sbrs	r14, 3
    1324:	11 91       	ld	r17, Z+
    1326:	ef 01       	movw	r28, r30
    1328:	15 32       	cpi	r17, 0x25	; 37
    132a:	81 f4       	brne	.+32     	; 0x134c <vfscanf+0x78>
    132c:	c6 01       	movw	r24, r12
    132e:	0e 94 a5 0a 	call	0x154a	; 0x154a <fgetc>
    1332:	97 fd       	sbrc	r25, 7
    1334:	d4 c0       	rjmp	.+424    	; 0x14de <vfscanf+0x20a>
    1336:	41 2f       	mov	r20, r17
    1338:	50 e0       	ldi	r21, 0x00	; 0
    133a:	9c 01       	movw	r18, r24
    133c:	33 27       	eor	r19, r19
    133e:	24 17       	cp	r18, r20
    1340:	35 07       	cpc	r19, r21
    1342:	a9 f2       	breq	.-86     	; 0x12ee <vfscanf+0x1a>
    1344:	b6 01       	movw	r22, r12
    1346:	0e 94 1f 0b 	call	0x163e	; 0x163e <ungetc>
    134a:	cb c0       	rjmp	.+406    	; 0x14e2 <vfscanf+0x20e>
    134c:	1a 32       	cpi	r17, 0x2A	; 42
    134e:	39 f4       	brne	.+14     	; 0x135e <vfscanf+0x8a>
    1350:	e3 fc       	sbrc	r14, 3
    1352:	15 91       	lpm	r17, Z+
    1354:	e3 fe       	sbrs	r14, 3
    1356:	11 91       	ld	r17, Z+
    1358:	ef 01       	movw	r28, r30
    135a:	01 e0       	ldi	r16, 0x01	; 1
    135c:	01 c0       	rjmp	.+2      	; 0x1360 <vfscanf+0x8c>
    135e:	00 e0       	ldi	r16, 0x00	; 0
    1360:	f1 2c       	mov	r15, r1
    1362:	20 ed       	ldi	r18, 0xD0	; 208
    1364:	21 0f       	add	r18, r17
    1366:	2a 30       	cpi	r18, 0x0A	; 10
    1368:	80 f4       	brcc	.+32     	; 0x138a <vfscanf+0xb6>
    136a:	02 60       	ori	r16, 0x02	; 2
    136c:	6f 2d       	mov	r22, r15
    136e:	70 e0       	ldi	r23, 0x00	; 0
    1370:	80 e0       	ldi	r24, 0x00	; 0
    1372:	90 e0       	ldi	r25, 0x00	; 0
    1374:	40 e2       	ldi	r20, 0x20	; 32
    1376:	0e 94 da 07 	call	0xfb4	; 0xfb4 <mulacc>
    137a:	f6 2e       	mov	r15, r22
    137c:	fe 01       	movw	r30, r28
    137e:	e3 fc       	sbrc	r14, 3
    1380:	15 91       	lpm	r17, Z+
    1382:	e3 fe       	sbrs	r14, 3
    1384:	11 91       	ld	r17, Z+
    1386:	ef 01       	movw	r28, r30
    1388:	ec cf       	rjmp	.-40     	; 0x1362 <vfscanf+0x8e>
    138a:	01 ff       	sbrs	r16, 1
    138c:	03 c0       	rjmp	.+6      	; 0x1394 <vfscanf+0xc0>
    138e:	f1 10       	cpse	r15, r1
    1390:	03 c0       	rjmp	.+6      	; 0x1398 <vfscanf+0xc4>
    1392:	a7 c0       	rjmp	.+334    	; 0x14e2 <vfscanf+0x20e>
    1394:	ff 24       	eor	r15, r15
    1396:	fa 94       	dec	r15
    1398:	18 36       	cpi	r17, 0x68	; 104
    139a:	19 f0       	breq	.+6      	; 0x13a2 <vfscanf+0xce>
    139c:	1c 36       	cpi	r17, 0x6C	; 108
    139e:	51 f0       	breq	.+20     	; 0x13b4 <vfscanf+0xe0>
    13a0:	10 c0       	rjmp	.+32     	; 0x13c2 <vfscanf+0xee>
    13a2:	fe 01       	movw	r30, r28
    13a4:	e3 fc       	sbrc	r14, 3
    13a6:	15 91       	lpm	r17, Z+
    13a8:	e3 fe       	sbrs	r14, 3
    13aa:	11 91       	ld	r17, Z+
    13ac:	ef 01       	movw	r28, r30
    13ae:	18 36       	cpi	r17, 0x68	; 104
    13b0:	41 f4       	brne	.+16     	; 0x13c2 <vfscanf+0xee>
    13b2:	08 60       	ori	r16, 0x08	; 8
    13b4:	04 60       	ori	r16, 0x04	; 4
    13b6:	fe 01       	movw	r30, r28
    13b8:	e3 fc       	sbrc	r14, 3
    13ba:	15 91       	lpm	r17, Z+
    13bc:	e3 fe       	sbrs	r14, 3
    13be:	11 91       	ld	r17, Z+
    13c0:	ef 01       	movw	r28, r30
    13c2:	11 23       	and	r17, r17
    13c4:	09 f4       	brne	.+2      	; 0x13c8 <vfscanf+0xf4>
    13c6:	8d c0       	rjmp	.+282    	; 0x14e2 <vfscanf+0x20e>
    13c8:	61 2f       	mov	r22, r17
    13ca:	70 e0       	ldi	r23, 0x00	; 0
    13cc:	86 e0       	ldi	r24, 0x06	; 6
    13ce:	91 e0       	ldi	r25, 0x01	; 1
    13d0:	0e 94 84 0a 	call	0x1508	; 0x1508 <strchr_P>
    13d4:	89 2b       	or	r24, r25
    13d6:	09 f4       	brne	.+2      	; 0x13da <vfscanf+0x106>
    13d8:	84 c0       	rjmp	.+264    	; 0x14e2 <vfscanf+0x20e>
    13da:	00 fd       	sbrc	r16, 0
    13dc:	07 c0       	rjmp	.+14     	; 0x13ec <vfscanf+0x118>
    13de:	f5 01       	movw	r30, r10
    13e0:	80 80       	ld	r8, Z
    13e2:	91 80       	ldd	r9, Z+1	; 0x01
    13e4:	c5 01       	movw	r24, r10
    13e6:	02 96       	adiw	r24, 0x02	; 2
    13e8:	5c 01       	movw	r10, r24
    13ea:	02 c0       	rjmp	.+4      	; 0x13f0 <vfscanf+0x11c>
    13ec:	81 2c       	mov	r8, r1
    13ee:	91 2c       	mov	r9, r1
    13f0:	1e 36       	cpi	r17, 0x6E	; 110
    13f2:	51 f4       	brne	.+20     	; 0x1408 <vfscanf+0x134>
    13f4:	f6 01       	movw	r30, r12
    13f6:	46 81       	ldd	r20, Z+6	; 0x06
    13f8:	57 81       	ldd	r21, Z+7	; 0x07
    13fa:	60 e0       	ldi	r22, 0x00	; 0
    13fc:	70 e0       	ldi	r23, 0x00	; 0
    13fe:	20 2f       	mov	r18, r16
    1400:	c4 01       	movw	r24, r8
    1402:	0e 94 ce 07 	call	0xf9c	; 0xf9c <putval>
    1406:	73 cf       	rjmp	.-282    	; 0x12ee <vfscanf+0x1a>
    1408:	13 36       	cpi	r17, 0x63	; 99
    140a:	a9 f4       	brne	.+42     	; 0x1436 <vfscanf+0x162>
    140c:	01 fd       	sbrc	r16, 1
    140e:	02 c0       	rjmp	.+4      	; 0x1414 <vfscanf+0x140>
    1410:	ff 24       	eor	r15, r15
    1412:	f3 94       	inc	r15
    1414:	c6 01       	movw	r24, r12
    1416:	0e 94 a5 0a 	call	0x154a	; 0x154a <fgetc>
    141a:	97 fd       	sbrc	r25, 7
    141c:	60 c0       	rjmp	.+192    	; 0x14de <vfscanf+0x20a>
    141e:	81 14       	cp	r8, r1
    1420:	91 04       	cpc	r9, r1
    1422:	29 f0       	breq	.+10     	; 0x142e <vfscanf+0x15a>
    1424:	f4 01       	movw	r30, r8
    1426:	80 83       	st	Z, r24
    1428:	c4 01       	movw	r24, r8
    142a:	01 96       	adiw	r24, 0x01	; 1
    142c:	4c 01       	movw	r8, r24
    142e:	fa 94       	dec	r15
    1430:	f1 10       	cpse	r15, r1
    1432:	f0 cf       	rjmp	.-32     	; 0x1414 <vfscanf+0x140>
    1434:	50 c0       	rjmp	.+160    	; 0x14d6 <vfscanf+0x202>
    1436:	1b 35       	cpi	r17, 0x5B	; 91
    1438:	59 f4       	brne	.+22     	; 0x1450 <vfscanf+0x17c>
    143a:	9e 01       	movw	r18, r28
    143c:	a4 01       	movw	r20, r8
    143e:	6f 2d       	mov	r22, r15
    1440:	c6 01       	movw	r24, r12
    1442:	0e 94 ac 08 	call	0x1158	; 0x1158 <conv_brk>
    1446:	ec 01       	movw	r28, r24
    1448:	89 2b       	or	r24, r25
    144a:	09 f0       	breq	.+2      	; 0x144e <vfscanf+0x17a>
    144c:	44 c0       	rjmp	.+136    	; 0x14d6 <vfscanf+0x202>
    144e:	3e c0       	rjmp	.+124    	; 0x14cc <vfscanf+0x1f8>
    1450:	c6 01       	movw	r24, r12
    1452:	0e 94 01 08 	call	0x1002	; 0x1002 <skip_spaces>
    1456:	97 fd       	sbrc	r25, 7
    1458:	42 c0       	rjmp	.+132    	; 0x14de <vfscanf+0x20a>
    145a:	1f 36       	cpi	r17, 0x6F	; 111
    145c:	61 f1       	breq	.+88     	; 0x14b6 <vfscanf+0x1e2>
    145e:	28 f4       	brcc	.+10     	; 0x146a <vfscanf+0x196>
    1460:	14 36       	cpi	r17, 0x64	; 100
    1462:	39 f1       	breq	.+78     	; 0x14b2 <vfscanf+0x1de>
    1464:	19 36       	cpi	r17, 0x69	; 105
    1466:	51 f1       	breq	.+84     	; 0x14bc <vfscanf+0x1e8>
    1468:	28 c0       	rjmp	.+80     	; 0x14ba <vfscanf+0x1e6>
    146a:	13 37       	cpi	r17, 0x73	; 115
    146c:	71 f0       	breq	.+28     	; 0x148a <vfscanf+0x1b6>
    146e:	15 37       	cpi	r17, 0x75	; 117
    1470:	01 f1       	breq	.+64     	; 0x14b2 <vfscanf+0x1de>
    1472:	23 c0       	rjmp	.+70     	; 0x14ba <vfscanf+0x1e6>
    1474:	81 14       	cp	r8, r1
    1476:	91 04       	cpc	r9, r1
    1478:	29 f0       	breq	.+10     	; 0x1484 <vfscanf+0x1b0>
    147a:	f4 01       	movw	r30, r8
    147c:	60 82       	st	Z, r6
    147e:	c4 01       	movw	r24, r8
    1480:	01 96       	adiw	r24, 0x01	; 1
    1482:	4c 01       	movw	r8, r24
    1484:	fa 94       	dec	r15
    1486:	ff 20       	and	r15, r15
    1488:	71 f0       	breq	.+28     	; 0x14a6 <vfscanf+0x1d2>
    148a:	c6 01       	movw	r24, r12
    148c:	0e 94 a5 0a 	call	0x154a	; 0x154a <fgetc>
    1490:	3c 01       	movw	r6, r24
    1492:	97 fd       	sbrc	r25, 7
    1494:	08 c0       	rjmp	.+16     	; 0x14a6 <vfscanf+0x1d2>
    1496:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <isspace>
    149a:	89 2b       	or	r24, r25
    149c:	59 f3       	breq	.-42     	; 0x1474 <vfscanf+0x1a0>
    149e:	b6 01       	movw	r22, r12
    14a0:	c3 01       	movw	r24, r6
    14a2:	0e 94 1f 0b 	call	0x163e	; 0x163e <ungetc>
    14a6:	81 14       	cp	r8, r1
    14a8:	91 04       	cpc	r9, r1
    14aa:	a9 f0       	breq	.+42     	; 0x14d6 <vfscanf+0x202>
    14ac:	f4 01       	movw	r30, r8
    14ae:	10 82       	st	Z, r1
    14b0:	12 c0       	rjmp	.+36     	; 0x14d6 <vfscanf+0x202>
    14b2:	00 62       	ori	r16, 0x20	; 32
    14b4:	03 c0       	rjmp	.+6      	; 0x14bc <vfscanf+0x1e8>
    14b6:	00 61       	ori	r16, 0x10	; 16
    14b8:	01 c0       	rjmp	.+2      	; 0x14bc <vfscanf+0x1e8>
    14ba:	00 64       	ori	r16, 0x40	; 64
    14bc:	20 2f       	mov	r18, r16
    14be:	a4 01       	movw	r20, r8
    14c0:	6f 2d       	mov	r22, r15
    14c2:	c6 01       	movw	r24, r12
    14c4:	0e 94 1a 08 	call	0x1034	; 0x1034 <conv_int>
    14c8:	81 11       	cpse	r24, r1
    14ca:	05 c0       	rjmp	.+10     	; 0x14d6 <vfscanf+0x202>
    14cc:	f6 01       	movw	r30, r12
    14ce:	83 81       	ldd	r24, Z+3	; 0x03
    14d0:	80 73       	andi	r24, 0x30	; 48
    14d2:	29 f4       	brne	.+10     	; 0x14de <vfscanf+0x20a>
    14d4:	06 c0       	rjmp	.+12     	; 0x14e2 <vfscanf+0x20e>
    14d6:	00 fd       	sbrc	r16, 0
    14d8:	0a cf       	rjmp	.-492    	; 0x12ee <vfscanf+0x1a>
    14da:	53 94       	inc	r5
    14dc:	08 cf       	rjmp	.-496    	; 0x12ee <vfscanf+0x1a>
    14de:	55 20       	and	r5, r5
    14e0:	19 f0       	breq	.+6      	; 0x14e8 <vfscanf+0x214>
    14e2:	85 2d       	mov	r24, r5
    14e4:	90 e0       	ldi	r25, 0x00	; 0
    14e6:	02 c0       	rjmp	.+4      	; 0x14ec <vfscanf+0x218>
    14e8:	8f ef       	ldi	r24, 0xFF	; 255
    14ea:	9f ef       	ldi	r25, 0xFF	; 255
    14ec:	cd b7       	in	r28, 0x3d	; 61
    14ee:	de b7       	in	r29, 0x3e	; 62
    14f0:	ef e0       	ldi	r30, 0x0F	; 15
    14f2:	0c 94 b8 0b 	jmp	0x1770	; 0x1770 <__epilogue_restores__+0x6>

000014f6 <isspace>:
    14f6:	91 11       	cpse	r25, r1
    14f8:	0c 94 96 0b 	jmp	0x172c	; 0x172c <__ctype_isfalse>
    14fc:	80 32       	cpi	r24, 0x20	; 32
    14fe:	19 f0       	breq	.+6      	; 0x1506 <isspace+0x10>
    1500:	89 50       	subi	r24, 0x09	; 9
    1502:	85 50       	subi	r24, 0x05	; 5
    1504:	c8 f7       	brcc	.-14     	; 0x14f8 <isspace+0x2>
    1506:	08 95       	ret

00001508 <strchr_P>:
    1508:	fc 01       	movw	r30, r24
    150a:	05 90       	lpm	r0, Z+
    150c:	06 16       	cp	r0, r22
    150e:	21 f0       	breq	.+8      	; 0x1518 <strchr_P+0x10>
    1510:	00 20       	and	r0, r0
    1512:	d9 f7       	brne	.-10     	; 0x150a <strchr_P+0x2>
    1514:	c0 01       	movw	r24, r0
    1516:	08 95       	ret
    1518:	31 97       	sbiw	r30, 0x01	; 1
    151a:	cf 01       	movw	r24, r30
    151c:	08 95       	ret

0000151e <strnlen_P>:
    151e:	fc 01       	movw	r30, r24
    1520:	05 90       	lpm	r0, Z+
    1522:	61 50       	subi	r22, 0x01	; 1
    1524:	70 40       	sbci	r23, 0x00	; 0
    1526:	01 10       	cpse	r0, r1
    1528:	d8 f7       	brcc	.-10     	; 0x1520 <strnlen_P+0x2>
    152a:	80 95       	com	r24
    152c:	90 95       	com	r25
    152e:	8e 0f       	add	r24, r30
    1530:	9f 1f       	adc	r25, r31
    1532:	08 95       	ret

00001534 <strnlen>:
    1534:	fc 01       	movw	r30, r24
    1536:	61 50       	subi	r22, 0x01	; 1
    1538:	70 40       	sbci	r23, 0x00	; 0
    153a:	01 90       	ld	r0, Z+
    153c:	01 10       	cpse	r0, r1
    153e:	d8 f7       	brcc	.-10     	; 0x1536 <strnlen+0x2>
    1540:	80 95       	com	r24
    1542:	90 95       	com	r25
    1544:	8e 0f       	add	r24, r30
    1546:	9f 1f       	adc	r25, r31
    1548:	08 95       	ret

0000154a <fgetc>:
    154a:	cf 93       	push	r28
    154c:	df 93       	push	r29
    154e:	ec 01       	movw	r28, r24
    1550:	2b 81       	ldd	r18, Y+3	; 0x03
    1552:	20 ff       	sbrs	r18, 0
    1554:	33 c0       	rjmp	.+102    	; 0x15bc <fgetc+0x72>
    1556:	26 ff       	sbrs	r18, 6
    1558:	0a c0       	rjmp	.+20     	; 0x156e <fgetc+0x24>
    155a:	2f 7b       	andi	r18, 0xBF	; 191
    155c:	2b 83       	std	Y+3, r18	; 0x03
    155e:	8e 81       	ldd	r24, Y+6	; 0x06
    1560:	9f 81       	ldd	r25, Y+7	; 0x07
    1562:	01 96       	adiw	r24, 0x01	; 1
    1564:	9f 83       	std	Y+7, r25	; 0x07
    1566:	8e 83       	std	Y+6, r24	; 0x06
    1568:	8a 81       	ldd	r24, Y+2	; 0x02
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	29 c0       	rjmp	.+82     	; 0x15c0 <fgetc+0x76>
    156e:	22 ff       	sbrs	r18, 2
    1570:	0f c0       	rjmp	.+30     	; 0x1590 <fgetc+0x46>
    1572:	e8 81       	ld	r30, Y
    1574:	f9 81       	ldd	r31, Y+1	; 0x01
    1576:	80 81       	ld	r24, Z
    1578:	08 2e       	mov	r0, r24
    157a:	00 0c       	add	r0, r0
    157c:	99 0b       	sbc	r25, r25
    157e:	00 97       	sbiw	r24, 0x00	; 0
    1580:	19 f4       	brne	.+6      	; 0x1588 <fgetc+0x3e>
    1582:	20 62       	ori	r18, 0x20	; 32
    1584:	2b 83       	std	Y+3, r18	; 0x03
    1586:	1a c0       	rjmp	.+52     	; 0x15bc <fgetc+0x72>
    1588:	31 96       	adiw	r30, 0x01	; 1
    158a:	f9 83       	std	Y+1, r31	; 0x01
    158c:	e8 83       	st	Y, r30
    158e:	0e c0       	rjmp	.+28     	; 0x15ac <fgetc+0x62>
    1590:	ea 85       	ldd	r30, Y+10	; 0x0a
    1592:	fb 85       	ldd	r31, Y+11	; 0x0b
    1594:	09 95       	icall
    1596:	97 ff       	sbrs	r25, 7
    1598:	09 c0       	rjmp	.+18     	; 0x15ac <fgetc+0x62>
    159a:	2b 81       	ldd	r18, Y+3	; 0x03
    159c:	01 96       	adiw	r24, 0x01	; 1
    159e:	11 f0       	breq	.+4      	; 0x15a4 <fgetc+0x5a>
    15a0:	80 e2       	ldi	r24, 0x20	; 32
    15a2:	01 c0       	rjmp	.+2      	; 0x15a6 <fgetc+0x5c>
    15a4:	80 e1       	ldi	r24, 0x10	; 16
    15a6:	82 2b       	or	r24, r18
    15a8:	8b 83       	std	Y+3, r24	; 0x03
    15aa:	08 c0       	rjmp	.+16     	; 0x15bc <fgetc+0x72>
    15ac:	2e 81       	ldd	r18, Y+6	; 0x06
    15ae:	3f 81       	ldd	r19, Y+7	; 0x07
    15b0:	2f 5f       	subi	r18, 0xFF	; 255
    15b2:	3f 4f       	sbci	r19, 0xFF	; 255
    15b4:	3f 83       	std	Y+7, r19	; 0x07
    15b6:	2e 83       	std	Y+6, r18	; 0x06
    15b8:	99 27       	eor	r25, r25
    15ba:	02 c0       	rjmp	.+4      	; 0x15c0 <fgetc+0x76>
    15bc:	8f ef       	ldi	r24, 0xFF	; 255
    15be:	9f ef       	ldi	r25, 0xFF	; 255
    15c0:	df 91       	pop	r29
    15c2:	cf 91       	pop	r28
    15c4:	08 95       	ret

000015c6 <fputc>:
    15c6:	0f 93       	push	r16
    15c8:	1f 93       	push	r17
    15ca:	cf 93       	push	r28
    15cc:	df 93       	push	r29
    15ce:	fb 01       	movw	r30, r22
    15d0:	23 81       	ldd	r18, Z+3	; 0x03
    15d2:	21 fd       	sbrc	r18, 1
    15d4:	03 c0       	rjmp	.+6      	; 0x15dc <fputc+0x16>
    15d6:	8f ef       	ldi	r24, 0xFF	; 255
    15d8:	9f ef       	ldi	r25, 0xFF	; 255
    15da:	2c c0       	rjmp	.+88     	; 0x1634 <fputc+0x6e>
    15dc:	22 ff       	sbrs	r18, 2
    15de:	16 c0       	rjmp	.+44     	; 0x160c <fputc+0x46>
    15e0:	46 81       	ldd	r20, Z+6	; 0x06
    15e2:	57 81       	ldd	r21, Z+7	; 0x07
    15e4:	24 81       	ldd	r18, Z+4	; 0x04
    15e6:	35 81       	ldd	r19, Z+5	; 0x05
    15e8:	42 17       	cp	r20, r18
    15ea:	53 07       	cpc	r21, r19
    15ec:	44 f4       	brge	.+16     	; 0x15fe <fputc+0x38>
    15ee:	a0 81       	ld	r26, Z
    15f0:	b1 81       	ldd	r27, Z+1	; 0x01
    15f2:	9d 01       	movw	r18, r26
    15f4:	2f 5f       	subi	r18, 0xFF	; 255
    15f6:	3f 4f       	sbci	r19, 0xFF	; 255
    15f8:	31 83       	std	Z+1, r19	; 0x01
    15fa:	20 83       	st	Z, r18
    15fc:	8c 93       	st	X, r24
    15fe:	26 81       	ldd	r18, Z+6	; 0x06
    1600:	37 81       	ldd	r19, Z+7	; 0x07
    1602:	2f 5f       	subi	r18, 0xFF	; 255
    1604:	3f 4f       	sbci	r19, 0xFF	; 255
    1606:	37 83       	std	Z+7, r19	; 0x07
    1608:	26 83       	std	Z+6, r18	; 0x06
    160a:	14 c0       	rjmp	.+40     	; 0x1634 <fputc+0x6e>
    160c:	8b 01       	movw	r16, r22
    160e:	ec 01       	movw	r28, r24
    1610:	fb 01       	movw	r30, r22
    1612:	00 84       	ldd	r0, Z+8	; 0x08
    1614:	f1 85       	ldd	r31, Z+9	; 0x09
    1616:	e0 2d       	mov	r30, r0
    1618:	09 95       	icall
    161a:	89 2b       	or	r24, r25
    161c:	e1 f6       	brne	.-72     	; 0x15d6 <fputc+0x10>
    161e:	d8 01       	movw	r26, r16
    1620:	16 96       	adiw	r26, 0x06	; 6
    1622:	8d 91       	ld	r24, X+
    1624:	9c 91       	ld	r25, X
    1626:	17 97       	sbiw	r26, 0x07	; 7
    1628:	01 96       	adiw	r24, 0x01	; 1
    162a:	17 96       	adiw	r26, 0x07	; 7
    162c:	9c 93       	st	X, r25
    162e:	8e 93       	st	-X, r24
    1630:	16 97       	sbiw	r26, 0x06	; 6
    1632:	ce 01       	movw	r24, r28
    1634:	df 91       	pop	r29
    1636:	cf 91       	pop	r28
    1638:	1f 91       	pop	r17
    163a:	0f 91       	pop	r16
    163c:	08 95       	ret

0000163e <ungetc>:
    163e:	fb 01       	movw	r30, r22
    1640:	23 81       	ldd	r18, Z+3	; 0x03
    1642:	20 ff       	sbrs	r18, 0
    1644:	12 c0       	rjmp	.+36     	; 0x166a <ungetc+0x2c>
    1646:	26 fd       	sbrc	r18, 6
    1648:	10 c0       	rjmp	.+32     	; 0x166a <ungetc+0x2c>
    164a:	8f 3f       	cpi	r24, 0xFF	; 255
    164c:	3f ef       	ldi	r19, 0xFF	; 255
    164e:	93 07       	cpc	r25, r19
    1650:	61 f0       	breq	.+24     	; 0x166a <ungetc+0x2c>
    1652:	82 83       	std	Z+2, r24	; 0x02
    1654:	2f 7d       	andi	r18, 0xDF	; 223
    1656:	20 64       	ori	r18, 0x40	; 64
    1658:	23 83       	std	Z+3, r18	; 0x03
    165a:	26 81       	ldd	r18, Z+6	; 0x06
    165c:	37 81       	ldd	r19, Z+7	; 0x07
    165e:	21 50       	subi	r18, 0x01	; 1
    1660:	31 09       	sbc	r19, r1
    1662:	37 83       	std	Z+7, r19	; 0x07
    1664:	26 83       	std	Z+6, r18	; 0x06
    1666:	99 27       	eor	r25, r25
    1668:	08 95       	ret
    166a:	8f ef       	ldi	r24, 0xFF	; 255
    166c:	9f ef       	ldi	r25, 0xFF	; 255
    166e:	08 95       	ret

00001670 <__ultoa_invert>:
    1670:	fa 01       	movw	r30, r20
    1672:	aa 27       	eor	r26, r26
    1674:	28 30       	cpi	r18, 0x08	; 8
    1676:	51 f1       	breq	.+84     	; 0x16cc <__ultoa_invert+0x5c>
    1678:	20 31       	cpi	r18, 0x10	; 16
    167a:	81 f1       	breq	.+96     	; 0x16dc <__ultoa_invert+0x6c>
    167c:	e8 94       	clt
    167e:	6f 93       	push	r22
    1680:	6e 7f       	andi	r22, 0xFE	; 254
    1682:	6e 5f       	subi	r22, 0xFE	; 254
    1684:	7f 4f       	sbci	r23, 0xFF	; 255
    1686:	8f 4f       	sbci	r24, 0xFF	; 255
    1688:	9f 4f       	sbci	r25, 0xFF	; 255
    168a:	af 4f       	sbci	r26, 0xFF	; 255
    168c:	b1 e0       	ldi	r27, 0x01	; 1
    168e:	3e d0       	rcall	.+124    	; 0x170c <__ultoa_invert+0x9c>
    1690:	b4 e0       	ldi	r27, 0x04	; 4
    1692:	3c d0       	rcall	.+120    	; 0x170c <__ultoa_invert+0x9c>
    1694:	67 0f       	add	r22, r23
    1696:	78 1f       	adc	r23, r24
    1698:	89 1f       	adc	r24, r25
    169a:	9a 1f       	adc	r25, r26
    169c:	a1 1d       	adc	r26, r1
    169e:	68 0f       	add	r22, r24
    16a0:	79 1f       	adc	r23, r25
    16a2:	8a 1f       	adc	r24, r26
    16a4:	91 1d       	adc	r25, r1
    16a6:	a1 1d       	adc	r26, r1
    16a8:	6a 0f       	add	r22, r26
    16aa:	71 1d       	adc	r23, r1
    16ac:	81 1d       	adc	r24, r1
    16ae:	91 1d       	adc	r25, r1
    16b0:	a1 1d       	adc	r26, r1
    16b2:	20 d0       	rcall	.+64     	; 0x16f4 <__ultoa_invert+0x84>
    16b4:	09 f4       	brne	.+2      	; 0x16b8 <__ultoa_invert+0x48>
    16b6:	68 94       	set
    16b8:	3f 91       	pop	r19
    16ba:	2a e0       	ldi	r18, 0x0A	; 10
    16bc:	26 9f       	mul	r18, r22
    16be:	11 24       	eor	r1, r1
    16c0:	30 19       	sub	r19, r0
    16c2:	30 5d       	subi	r19, 0xD0	; 208
    16c4:	31 93       	st	Z+, r19
    16c6:	de f6       	brtc	.-74     	; 0x167e <__ultoa_invert+0xe>
    16c8:	cf 01       	movw	r24, r30
    16ca:	08 95       	ret
    16cc:	46 2f       	mov	r20, r22
    16ce:	47 70       	andi	r20, 0x07	; 7
    16d0:	40 5d       	subi	r20, 0xD0	; 208
    16d2:	41 93       	st	Z+, r20
    16d4:	b3 e0       	ldi	r27, 0x03	; 3
    16d6:	0f d0       	rcall	.+30     	; 0x16f6 <__ultoa_invert+0x86>
    16d8:	c9 f7       	brne	.-14     	; 0x16cc <__ultoa_invert+0x5c>
    16da:	f6 cf       	rjmp	.-20     	; 0x16c8 <__ultoa_invert+0x58>
    16dc:	46 2f       	mov	r20, r22
    16de:	4f 70       	andi	r20, 0x0F	; 15
    16e0:	40 5d       	subi	r20, 0xD0	; 208
    16e2:	4a 33       	cpi	r20, 0x3A	; 58
    16e4:	18 f0       	brcs	.+6      	; 0x16ec <__ultoa_invert+0x7c>
    16e6:	49 5d       	subi	r20, 0xD9	; 217
    16e8:	31 fd       	sbrc	r19, 1
    16ea:	40 52       	subi	r20, 0x20	; 32
    16ec:	41 93       	st	Z+, r20
    16ee:	02 d0       	rcall	.+4      	; 0x16f4 <__ultoa_invert+0x84>
    16f0:	a9 f7       	brne	.-22     	; 0x16dc <__ultoa_invert+0x6c>
    16f2:	ea cf       	rjmp	.-44     	; 0x16c8 <__ultoa_invert+0x58>
    16f4:	b4 e0       	ldi	r27, 0x04	; 4
    16f6:	a6 95       	lsr	r26
    16f8:	97 95       	ror	r25
    16fa:	87 95       	ror	r24
    16fc:	77 95       	ror	r23
    16fe:	67 95       	ror	r22
    1700:	ba 95       	dec	r27
    1702:	c9 f7       	brne	.-14     	; 0x16f6 <__ultoa_invert+0x86>
    1704:	00 97       	sbiw	r24, 0x00	; 0
    1706:	61 05       	cpc	r22, r1
    1708:	71 05       	cpc	r23, r1
    170a:	08 95       	ret
    170c:	9b 01       	movw	r18, r22
    170e:	ac 01       	movw	r20, r24
    1710:	0a 2e       	mov	r0, r26
    1712:	06 94       	lsr	r0
    1714:	57 95       	ror	r21
    1716:	47 95       	ror	r20
    1718:	37 95       	ror	r19
    171a:	27 95       	ror	r18
    171c:	ba 95       	dec	r27
    171e:	c9 f7       	brne	.-14     	; 0x1712 <__ultoa_invert+0xa2>
    1720:	62 0f       	add	r22, r18
    1722:	73 1f       	adc	r23, r19
    1724:	84 1f       	adc	r24, r20
    1726:	95 1f       	adc	r25, r21
    1728:	a0 1d       	adc	r26, r0
    172a:	08 95       	ret

0000172c <__ctype_isfalse>:
    172c:	99 27       	eor	r25, r25
    172e:	88 27       	eor	r24, r24

00001730 <__ctype_istrue>:
    1730:	08 95       	ret

00001732 <__prologue_saves__>:
    1732:	2f 92       	push	r2
    1734:	3f 92       	push	r3
    1736:	4f 92       	push	r4
    1738:	5f 92       	push	r5
    173a:	6f 92       	push	r6
    173c:	7f 92       	push	r7
    173e:	8f 92       	push	r8
    1740:	9f 92       	push	r9
    1742:	af 92       	push	r10
    1744:	bf 92       	push	r11
    1746:	cf 92       	push	r12
    1748:	df 92       	push	r13
    174a:	ef 92       	push	r14
    174c:	ff 92       	push	r15
    174e:	0f 93       	push	r16
    1750:	1f 93       	push	r17
    1752:	cf 93       	push	r28
    1754:	df 93       	push	r29
    1756:	cd b7       	in	r28, 0x3d	; 61
    1758:	de b7       	in	r29, 0x3e	; 62
    175a:	ca 1b       	sub	r28, r26
    175c:	db 0b       	sbc	r29, r27
    175e:	0f b6       	in	r0, 0x3f	; 63
    1760:	f8 94       	cli
    1762:	de bf       	out	0x3e, r29	; 62
    1764:	0f be       	out	0x3f, r0	; 63
    1766:	cd bf       	out	0x3d, r28	; 61
    1768:	09 94       	ijmp

0000176a <__epilogue_restores__>:
    176a:	2a 88       	ldd	r2, Y+18	; 0x12
    176c:	39 88       	ldd	r3, Y+17	; 0x11
    176e:	48 88       	ldd	r4, Y+16	; 0x10
    1770:	5f 84       	ldd	r5, Y+15	; 0x0f
    1772:	6e 84       	ldd	r6, Y+14	; 0x0e
    1774:	7d 84       	ldd	r7, Y+13	; 0x0d
    1776:	8c 84       	ldd	r8, Y+12	; 0x0c
    1778:	9b 84       	ldd	r9, Y+11	; 0x0b
    177a:	aa 84       	ldd	r10, Y+10	; 0x0a
    177c:	b9 84       	ldd	r11, Y+9	; 0x09
    177e:	c8 84       	ldd	r12, Y+8	; 0x08
    1780:	df 80       	ldd	r13, Y+7	; 0x07
    1782:	ee 80       	ldd	r14, Y+6	; 0x06
    1784:	fd 80       	ldd	r15, Y+5	; 0x05
    1786:	0c 81       	ldd	r16, Y+4	; 0x04
    1788:	1b 81       	ldd	r17, Y+3	; 0x03
    178a:	aa 81       	ldd	r26, Y+2	; 0x02
    178c:	b9 81       	ldd	r27, Y+1	; 0x01
    178e:	ce 0f       	add	r28, r30
    1790:	d1 1d       	adc	r29, r1
    1792:	0f b6       	in	r0, 0x3f	; 63
    1794:	f8 94       	cli
    1796:	de bf       	out	0x3e, r29	; 62
    1798:	0f be       	out	0x3f, r0	; 63
    179a:	cd bf       	out	0x3d, r28	; 61
    179c:	ed 01       	movw	r28, r26
    179e:	08 95       	ret

000017a0 <_exit>:
    17a0:	f8 94       	cli

000017a2 <__stop_program>:
    17a2:	ff cf       	rjmp	.-2      	; 0x17a2 <__stop_program>
