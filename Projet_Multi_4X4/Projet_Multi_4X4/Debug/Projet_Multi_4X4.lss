
Projet_Multi_4X4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00800100  00001e78  00001f0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001e78  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000172  00800140  00800140  00001f4c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f4c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001fa8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000360  00000000  00000000  00001fe8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003288  00000000  00000000  00002348  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011a9  00000000  00000000  000055d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001b03  00000000  00000000  00006779  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a80  00000000  00000000  0000827c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000e15  00000000  00000000  00008cfc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002d49  00000000  00000000  00009b11  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000308  00000000  00000000  0000c85a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 89 00 	jmp	0x112	; 0x112 <__ctors_end>
       4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
       8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
       c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      10:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      14:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      18:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      1c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      20:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      24:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      28:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      2c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      30:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      34:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      38:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      3c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      40:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      44:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      48:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      4c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      50:	0c 94 84 04 	jmp	0x908	; 0x908 <__vector_20>
      54:	0c 94 53 04 	jmp	0x8a6	; 0x8a6 <__vector_21>
      58:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      5c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      60:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      64:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      68:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      6c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      70:	0c 94 dd 04 	jmp	0x9ba	; 0x9ba <__vector_28>
      74:	0c 94 ac 04 	jmp	0x958	; 0x958 <__vector_29>
      78:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      7c:	4c 02       	muls	r20, r28
      7e:	4c 02       	muls	r20, r28
      80:	4c 02       	muls	r20, r28
      82:	4c 02       	muls	r20, r28
      84:	4c 02       	muls	r20, r28
      86:	62 02       	muls	r22, r18
      88:	62 02       	muls	r22, r18
      8a:	64 02       	muls	r22, r20
      8c:	4e 02       	muls	r20, r30
      8e:	4e 02       	muls	r20, r30
      90:	4e 02       	muls	r20, r30
      92:	4e 02       	muls	r20, r30
      94:	50 02       	muls	r21, r16
      96:	50 02       	muls	r21, r16
      98:	50 02       	muls	r21, r16
      9a:	50 02       	muls	r21, r16
      9c:	62 02       	muls	r22, r18
      9e:	62 02       	muls	r22, r18
      a0:	52 02       	muls	r21, r18
      a2:	52 02       	muls	r21, r18
      a4:	52 02       	muls	r21, r18
      a6:	52 02       	muls	r21, r18
      a8:	52 02       	muls	r21, r18
      aa:	62 02       	muls	r22, r18
      ac:	62 02       	muls	r22, r18
      ae:	54 02       	muls	r21, r20
      b0:	54 02       	muls	r21, r20
      b2:	54 02       	muls	r21, r20
      b4:	54 02       	muls	r21, r20
      b6:	62 02       	muls	r22, r18
      b8:	62 02       	muls	r22, r18
      ba:	62 02       	muls	r22, r18
      bc:	56 02       	muls	r21, r22
      be:	56 02       	muls	r21, r22
      c0:	56 02       	muls	r21, r22
      c2:	56 02       	muls	r21, r22
      c4:	56 02       	muls	r21, r22
      c6:	62 02       	muls	r22, r18
      c8:	62 02       	muls	r22, r18
      ca:	58 02       	muls	r21, r24
      cc:	5a 02       	muls	r21, r26
      ce:	5a 02       	muls	r21, r26
      d0:	5a 02       	muls	r21, r26
      d2:	5a 02       	muls	r21, r26
      d4:	5c 02       	muls	r21, r28
      d6:	5c 02       	muls	r21, r28
      d8:	5c 02       	muls	r21, r28
      da:	5c 02       	muls	r21, r28
      dc:	62 02       	muls	r22, r18
      de:	62 02       	muls	r22, r18
      e0:	5e 02       	muls	r21, r30
      e2:	5e 02       	muls	r21, r30
      e4:	5e 02       	muls	r21, r30
      e6:	5e 02       	muls	r21, r30
      e8:	5e 02       	muls	r21, r30
      ea:	62 02       	muls	r22, r18
      ec:	62 02       	muls	r22, r18
      ee:	60 02       	muls	r22, r16
      f0:	60 02       	muls	r22, r16
      f2:	60 02       	muls	r22, r16
      f4:	60 02       	muls	r22, r16
      f6:	c7 02       	muls	r28, r23
      f8:	cb 02       	muls	r28, r27
      fa:	cf 02       	muls	r28, r31
      fc:	e1 02       	muls	r30, r17
      fe:	f3 02       	muls	r31, r19
     100:	ff 02       	muls	r31, r31
     102:	08 03       	fmul	r16, r16
     104:	0e 03       	fmul	r16, r22

00000106 <__trampolines_end>:
     106:	63 64       	ori	r22, 0x43	; 67
     108:	69 6e       	ori	r22, 0xE9	; 233
     10a:	6f 70       	andi	r22, 0x0F	; 15
     10c:	73 75       	andi	r23, 0x53	; 83
     10e:	78 58       	subi	r23, 0x88	; 136
     110:	5b 00       	.word	0x005b	; ????

00000112 <__ctors_end>:
     112:	11 24       	eor	r1, r1
     114:	1f be       	out	0x3f, r1	; 63
     116:	cf ef       	ldi	r28, 0xFF	; 255
     118:	d8 e0       	ldi	r29, 0x08	; 8
     11a:	de bf       	out	0x3e, r29	; 62
     11c:	cd bf       	out	0x3d, r28	; 61

0000011e <__do_copy_data>:
     11e:	11 e0       	ldi	r17, 0x01	; 1
     120:	a0 e0       	ldi	r26, 0x00	; 0
     122:	b1 e0       	ldi	r27, 0x01	; 1
     124:	e8 e7       	ldi	r30, 0x78	; 120
     126:	fe e1       	ldi	r31, 0x1E	; 30
     128:	02 c0       	rjmp	.+4      	; 0x12e <__do_copy_data+0x10>
     12a:	05 90       	lpm	r0, Z+
     12c:	0d 92       	st	X+, r0
     12e:	a0 34       	cpi	r26, 0x40	; 64
     130:	b1 07       	cpc	r27, r17
     132:	d9 f7       	brne	.-10     	; 0x12a <__do_copy_data+0xc>

00000134 <__do_clear_bss>:
     134:	22 e0       	ldi	r18, 0x02	; 2
     136:	a0 e4       	ldi	r26, 0x40	; 64
     138:	b1 e0       	ldi	r27, 0x01	; 1
     13a:	01 c0       	rjmp	.+2      	; 0x13e <.do_clear_bss_start>

0000013c <.do_clear_bss_loop>:
     13c:	1d 92       	st	X+, r1

0000013e <.do_clear_bss_start>:
     13e:	a2 3b       	cpi	r26, 0xB2	; 178
     140:	b2 07       	cpc	r27, r18
     142:	e1 f7       	brne	.-8      	; 0x13c <.do_clear_bss_loop>
     144:	0e 94 66 03 	call	0x6cc	; 0x6cc <main>
     148:	0c 94 3a 0f 	jmp	0x1e74	; 0x1e74 <_exit>

0000014c <__bad_interrupt>:
     14c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000150 <pwm0_init>:

void pwm1_set_PD5(uint16_t limit){ 
	OCR1A = limit;
}
void pwm1_set_PD4(uint16_t limit){
	OCR1B = limit;
     150:	84 b1       	in	r24, 0x04	; 4
     152:	80 61       	ori	r24, 0x10	; 16
     154:	84 b9       	out	0x04, r24	; 4
     156:	84 b1       	in	r24, 0x04	; 4
     158:	88 60       	ori	r24, 0x08	; 8
     15a:	84 b9       	out	0x04, r24	; 4
     15c:	84 b5       	in	r24, 0x24	; 36
     15e:	80 68       	ori	r24, 0x80	; 128
     160:	84 bd       	out	0x24, r24	; 36
     162:	84 b5       	in	r24, 0x24	; 36
     164:	80 62       	ori	r24, 0x20	; 32
     166:	84 bd       	out	0x24, r24	; 36
     168:	84 b5       	in	r24, 0x24	; 36
     16a:	8f 7b       	andi	r24, 0xBF	; 191
     16c:	84 bd       	out	0x24, r24	; 36
     16e:	84 b5       	in	r24, 0x24	; 36
     170:	8f 7e       	andi	r24, 0xEF	; 239
     172:	84 bd       	out	0x24, r24	; 36
     174:	84 b5       	in	r24, 0x24	; 36
     176:	81 60       	ori	r24, 0x01	; 1
     178:	84 bd       	out	0x24, r24	; 36
     17a:	84 b5       	in	r24, 0x24	; 36
     17c:	8d 7f       	andi	r24, 0xFD	; 253
     17e:	84 bd       	out	0x24, r24	; 36
     180:	16 bc       	out	0x26, r1	; 38
     182:	85 b5       	in	r24, 0x25	; 37
     184:	81 60       	ori	r24, 0x01	; 1
     186:	85 bd       	out	0x25, r24	; 37
     188:	85 b5       	in	r24, 0x25	; 37
     18a:	8d 7f       	andi	r24, 0xFD	; 253
     18c:	85 bd       	out	0x25, r24	; 37
     18e:	85 b5       	in	r24, 0x25	; 37
     190:	8b 7f       	andi	r24, 0xFB	; 251
     192:	85 bd       	out	0x25, r24	; 37
     194:	08 95       	ret

00000196 <pwm0_set_PB3>:
     196:	87 bd       	out	0x27, r24	; 39
     198:	08 95       	ret

0000019a <pwm0_set_PB4>:
     19a:	88 bd       	out	0x28, r24	; 40
     19c:	08 95       	ret

0000019e <pwm1_init>:
     19e:	9c 01       	movw	r18, r24
     1a0:	8a b1       	in	r24, 0x0a	; 10
     1a2:	80 61       	ori	r24, 0x10	; 16
     1a4:	8a b9       	out	0x0a, r24	; 10
     1a6:	8a b1       	in	r24, 0x0a	; 10
     1a8:	80 62       	ori	r24, 0x20	; 32
     1aa:	8a b9       	out	0x0a, r24	; 10
     1ac:	e0 e8       	ldi	r30, 0x80	; 128
     1ae:	f0 e0       	ldi	r31, 0x00	; 0
     1b0:	80 81       	ld	r24, Z
     1b2:	80 68       	ori	r24, 0x80	; 128
     1b4:	80 83       	st	Z, r24
     1b6:	80 81       	ld	r24, Z
     1b8:	8f 7b       	andi	r24, 0xBF	; 191
     1ba:	80 83       	st	Z, r24
     1bc:	90 81       	ld	r25, Z
     1be:	90 62       	ori	r25, 0x20	; 32
     1c0:	90 83       	st	Z, r25
     1c2:	90 81       	ld	r25, Z
     1c4:	9f 7e       	andi	r25, 0xEF	; 239
     1c6:	90 83       	st	Z, r25
     1c8:	a1 e8       	ldi	r26, 0x81	; 129
     1ca:	b0 e0       	ldi	r27, 0x00	; 0
     1cc:	9c 91       	ld	r25, X
     1ce:	90 61       	ori	r25, 0x10	; 16
     1d0:	9c 93       	st	X, r25
     1d2:	9c 91       	ld	r25, X
     1d4:	98 60       	ori	r25, 0x08	; 8
     1d6:	9c 93       	st	X, r25
     1d8:	90 81       	ld	r25, Z
     1da:	92 60       	ori	r25, 0x02	; 2
     1dc:	90 83       	st	Z, r25
     1de:	90 81       	ld	r25, Z
     1e0:	9e 7f       	andi	r25, 0xFE	; 254
     1e2:	90 83       	st	Z, r25
     1e4:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
     1e8:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
     1ec:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     1f0:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     1f4:	8c 91       	ld	r24, X
     1f6:	8b 7f       	andi	r24, 0xFB	; 251
     1f8:	8c 93       	st	X, r24
     1fa:	8c 91       	ld	r24, X
     1fc:	82 60       	ori	r24, 0x02	; 2
     1fe:	8c 93       	st	X, r24
     200:	8c 91       	ld	r24, X
     202:	8e 7f       	andi	r24, 0xFE	; 254
     204:	8c 93       	st	X, r24
     206:	08 95       	ret

00000208 <pwm1_set_PD5>:
     208:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     20c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     210:	08 95       	ret

00000212 <pwm2_init>:
}

void pwm2_init(){
	// broches de PWM en sortie
//TODO_FB : Active PB0 en sortie
	DDRD = set_bit(DDRD, PD6);
     212:	8a b1       	in	r24, 0x0a	; 10
     214:	80 64       	ori	r24, 0x40	; 64
     216:	8a b9       	out	0x0a, r24	; 10
	DDRD = set_bit(DDRD, PD7);
     218:	8a b1       	in	r24, 0x0a	; 10
     21a:	80 68       	ori	r24, 0x80	; 128
     21c:	8a b9       	out	0x0a, r24	; 10
	// PEUT ETRE AUTRE CHOSE
	// 2-Initialisation du TIMER 0
	// 2.1- Mode de comparaison : "Toggle on compare match"

	
	TCCR2A = set_bit(TCCR2A,COM0A1);
     21e:	e0 eb       	ldi	r30, 0xB0	; 176
     220:	f0 e0       	ldi	r31, 0x00	; 0
     222:	80 81       	ld	r24, Z
     224:	80 68       	ori	r24, 0x80	; 128
     226:	80 83       	st	Z, r24
	TCCR2A = set_bit(TCCR2A,COM0B1);
     228:	80 81       	ld	r24, Z
     22a:	80 62       	ori	r24, 0x20	; 32
     22c:	80 83       	st	Z, r24
	TCCR2A = clear_bit(TCCR2A,COM0A0);
     22e:	80 81       	ld	r24, Z
     230:	8f 7b       	andi	r24, 0xBF	; 191
     232:	80 83       	st	Z, r24
	TCCR2A = clear_bit(TCCR2A,COM0B0);
     234:	80 81       	ld	r24, Z
     236:	8f 7e       	andi	r24, 0xEF	; 239
     238:	80 83       	st	Z, r24
	
	
	
	// 2.2- Mode du compteur :  "PWM phase correct"
	
	TCCR2A = set_bit(TCCR2A,WGM00);
     23a:	80 81       	ld	r24, Z
     23c:	81 60       	ori	r24, 0x01	; 1
     23e:	80 83       	st	Z, r24
	TCCR2A = clear_bit(TCCR2A,WGM01);
     240:	80 81       	ld	r24, Z
     242:	8d 7f       	andi	r24, 0xFD	; 253
     244:	80 83       	st	Z, r24
	
	// 2.3- Fixer la valeur initiale du compteur 0 Ã  0
	
	TCNT2 = 0;
     246:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
	
	// 2.4- Facteur de division de frÃ©quence : 1
	
	TCCR2B = set_bit(TCCR2B,CS00);
     24a:	e1 eb       	ldi	r30, 0xB1	; 177
     24c:	f0 e0       	ldi	r31, 0x00	; 0
     24e:	80 81       	ld	r24, Z
     250:	81 60       	ori	r24, 0x01	; 1
     252:	80 83       	st	Z, r24
	TCCR2B = clear_bit(TCCR2B,CS01);
     254:	80 81       	ld	r24, Z
     256:	8d 7f       	andi	r24, 0xFD	; 253
     258:	80 83       	st	Z, r24
	TCCR2B = clear_bit(TCCR2B,CS02);
     25a:	80 81       	ld	r24, Z
     25c:	8b 7f       	andi	r24, 0xFB	; 251
     25e:	80 83       	st	Z, r24
     260:	08 95       	ret

00000262 <pwm2_set_PD7>:
	


void pwm2_set_PD7(uint8_t limit){
	// Fixer le rapport cyclique Ã  la valeur de duty
	OCR2A = limit;	
     262:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     266:	08 95       	ret

00000268 <pwm2_set_PD6>:
}

void pwm2_set_PD6(uint8_t limit){
	// Fixer le rapport cyclique Ã  la valeur de duty
	OCR2B = limit;
     268:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     26c:	08 95       	ret

0000026e <fifo_init>:
void fifo_clean(fifo_t* fifo){
	
	fifo->in_offset = fifo->out_offset;
	fifo->is_full = FALSE;
	fifo->is_empty = TRUE;
	fifo->nb_line = 0;
     26e:	fc 01       	movw	r30, r24
     270:	71 83       	std	Z+1, r23	; 0x01
     272:	60 83       	st	Z, r22
     274:	42 83       	std	Z+2, r20	; 0x02
     276:	13 82       	std	Z+3, r1	; 0x03
     278:	14 82       	std	Z+4, r1	; 0x04
     27a:	81 e0       	ldi	r24, 0x01	; 1
     27c:	85 83       	std	Z+5, r24	; 0x05
     27e:	16 82       	std	Z+6, r1	; 0x06
     280:	17 82       	std	Z+7, r1	; 0x07
     282:	08 95       	ret

00000284 <fifo_push>:
     284:	fc 01       	movw	r30, r24
     286:	86 81       	ldd	r24, Z+6	; 0x06
     288:	81 11       	cpse	r24, r1
     28a:	1f c0       	rjmp	.+62     	; 0x2ca <fifo_push+0x46>
     28c:	a0 81       	ld	r26, Z
     28e:	b1 81       	ldd	r27, Z+1	; 0x01
     290:	83 81       	ldd	r24, Z+3	; 0x03
     292:	a8 0f       	add	r26, r24
     294:	b1 1d       	adc	r27, r1
     296:	6c 93       	st	X, r22
     298:	15 82       	std	Z+5, r1	; 0x05
     29a:	23 81       	ldd	r18, Z+3	; 0x03
     29c:	42 2f       	mov	r20, r18
     29e:	50 e0       	ldi	r21, 0x00	; 0
     2a0:	82 81       	ldd	r24, Z+2	; 0x02
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	01 97       	sbiw	r24, 0x01	; 1
     2a6:	48 17       	cp	r20, r24
     2a8:	59 07       	cpc	r21, r25
     2aa:	11 f4       	brne	.+4      	; 0x2b0 <fifo_push+0x2c>
     2ac:	13 82       	std	Z+3, r1	; 0x03
     2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <fifo_push+0x30>
     2b0:	2f 5f       	subi	r18, 0xFF	; 255
     2b2:	23 83       	std	Z+3, r18	; 0x03
     2b4:	6a 30       	cpi	r22, 0x0A	; 10
     2b6:	19 f4       	brne	.+6      	; 0x2be <fifo_push+0x3a>
     2b8:	87 81       	ldd	r24, Z+7	; 0x07
     2ba:	8f 5f       	subi	r24, 0xFF	; 255
     2bc:	87 83       	std	Z+7, r24	; 0x07
     2be:	93 81       	ldd	r25, Z+3	; 0x03
     2c0:	84 81       	ldd	r24, Z+4	; 0x04
     2c2:	98 13       	cpse	r25, r24
     2c4:	02 c0       	rjmp	.+4      	; 0x2ca <fifo_push+0x46>
     2c6:	81 e0       	ldi	r24, 0x01	; 1
     2c8:	86 83       	std	Z+6, r24	; 0x06
     2ca:	08 95       	ret

000002cc <fifo_pop>:
     2cc:	fc 01       	movw	r30, r24
     2ce:	85 81       	ldd	r24, Z+5	; 0x05
     2d0:	81 11       	cpse	r24, r1
     2d2:	20 c0       	rjmp	.+64     	; 0x314 <fifo_pop+0x48>
     2d4:	a0 81       	ld	r26, Z
     2d6:	b1 81       	ldd	r27, Z+1	; 0x01
     2d8:	94 81       	ldd	r25, Z+4	; 0x04
     2da:	49 2f       	mov	r20, r25
     2dc:	50 e0       	ldi	r21, 0x00	; 0
     2de:	a4 0f       	add	r26, r20
     2e0:	b5 1f       	adc	r27, r21
     2e2:	8c 91       	ld	r24, X
     2e4:	16 82       	std	Z+6, r1	; 0x06
     2e6:	22 81       	ldd	r18, Z+2	; 0x02
     2e8:	30 e0       	ldi	r19, 0x00	; 0
     2ea:	21 50       	subi	r18, 0x01	; 1
     2ec:	31 09       	sbc	r19, r1
     2ee:	42 17       	cp	r20, r18
     2f0:	53 07       	cpc	r21, r19
     2f2:	11 f4       	brne	.+4      	; 0x2f8 <fifo_pop+0x2c>
     2f4:	14 82       	std	Z+4, r1	; 0x04
     2f6:	02 c0       	rjmp	.+4      	; 0x2fc <fifo_pop+0x30>
     2f8:	9f 5f       	subi	r25, 0xFF	; 255
     2fa:	94 83       	std	Z+4, r25	; 0x04
     2fc:	8a 30       	cpi	r24, 0x0A	; 10
     2fe:	19 f4       	brne	.+6      	; 0x306 <fifo_pop+0x3a>
     300:	97 81       	ldd	r25, Z+7	; 0x07
     302:	91 50       	subi	r25, 0x01	; 1
     304:	97 83       	std	Z+7, r25	; 0x07
     306:	24 81       	ldd	r18, Z+4	; 0x04
     308:	93 81       	ldd	r25, Z+3	; 0x03
     30a:	29 13       	cpse	r18, r25
     30c:	04 c0       	rjmp	.+8      	; 0x316 <fifo_pop+0x4a>
     30e:	91 e0       	ldi	r25, 0x01	; 1
     310:	95 83       	std	Z+5, r25	; 0x05
     312:	08 95       	ret
     314:	80 e0       	ldi	r24, 0x00	; 0
     316:	08 95       	ret

00000318 <fifo_is_empty>:


bool fifo_is_empty(fifo_t* fifo) {

    return fifo->is_empty;
}
     318:	fc 01       	movw	r30, r24
     31a:	85 81       	ldd	r24, Z+5	; 0x05
     31c:	08 95       	ret

0000031e <clock_data>:

    COMMAND_MODE();

    clock_data(0b00010000 | right_left);     //Cursor or display shift

    DATA_MODE();
     31e:	88 b9       	out	0x08, r24	; 8
     320:	85 e8       	ldi	r24, 0x85	; 133
     322:	8a 95       	dec	r24
     324:	f1 f7       	brne	.-4      	; 0x322 <clock_data+0x4>
     326:	00 00       	nop
     328:	82 b1       	in	r24, 0x02	; 2
     32a:	8f 77       	andi	r24, 0x7F	; 127
     32c:	82 b9       	out	0x02, r24	; 2
     32e:	85 e8       	ldi	r24, 0x85	; 133
     330:	8a 95       	dec	r24
     332:	f1 f7       	brne	.-4      	; 0x330 <clock_data+0x12>
     334:	00 00       	nop
     336:	82 b1       	in	r24, 0x02	; 2
     338:	80 68       	ori	r24, 0x80	; 128
     33a:	82 b9       	out	0x02, r24	; 2
     33c:	08 95       	ret

0000033e <hd44780_clear_display>:
     33e:	82 b1       	in	r24, 0x02	; 2
     340:	8f 7d       	andi	r24, 0xDF	; 223
     342:	82 b9       	out	0x02, r24	; 2
     344:	81 e0       	ldi	r24, 0x01	; 1
     346:	0e 94 8f 01 	call	0x31e	; 0x31e <clock_data>
     34a:	8f e9       	ldi	r24, 0x9F	; 159
     34c:	9f e0       	ldi	r25, 0x0F	; 15
     34e:	01 97       	sbiw	r24, 0x01	; 1
     350:	f1 f7       	brne	.-4      	; 0x34e <hd44780_clear_display+0x10>
     352:	00 c0       	rjmp	.+0      	; 0x354 <hd44780_clear_display+0x16>
     354:	00 00       	nop
     356:	82 b1       	in	r24, 0x02	; 2
     358:	80 62       	ori	r24, 0x20	; 32
     35a:	82 b9       	out	0x02, r24	; 2
     35c:	08 95       	ret

0000035e <hd44780_set_entry_mode>:
     35e:	81 30       	cpi	r24, 0x01	; 1
     360:	11 f4       	brne	.+4      	; 0x366 <hd44780_set_entry_mode+0x8>
     362:	82 e0       	ldi	r24, 0x02	; 2
     364:	01 c0       	rjmp	.+2      	; 0x368 <hd44780_set_entry_mode+0xa>
     366:	80 e0       	ldi	r24, 0x00	; 0
     368:	92 b1       	in	r25, 0x02	; 2
     36a:	9f 7d       	andi	r25, 0xDF	; 223
     36c:	92 b9       	out	0x02, r25	; 2
     36e:	84 60       	ori	r24, 0x04	; 4
     370:	0e 94 8f 01 	call	0x31e	; 0x31e <clock_data>
     374:	82 b1       	in	r24, 0x02	; 2
     376:	80 62       	ori	r24, 0x20	; 32
     378:	82 b9       	out	0x02, r24	; 2
     37a:	08 95       	ret

0000037c <hd44780_set_display_control>:
     37c:	81 30       	cpi	r24, 0x01	; 1
     37e:	11 f0       	breq	.+4      	; 0x384 <hd44780_set_display_control+0x8>
     380:	80 e0       	ldi	r24, 0x00	; 0
     382:	01 c0       	rjmp	.+2      	; 0x386 <hd44780_set_display_control+0xa>
     384:	84 e0       	ldi	r24, 0x04	; 4
     386:	61 30       	cpi	r22, 0x01	; 1
     388:	09 f4       	brne	.+2      	; 0x38c <hd44780_set_display_control+0x10>
     38a:	82 60       	ori	r24, 0x02	; 2
     38c:	41 30       	cpi	r20, 0x01	; 1
     38e:	09 f4       	brne	.+2      	; 0x392 <hd44780_set_display_control+0x16>
     390:	81 60       	ori	r24, 0x01	; 1
     392:	92 b1       	in	r25, 0x02	; 2
     394:	9f 7d       	andi	r25, 0xDF	; 223
     396:	92 b9       	out	0x02, r25	; 2
     398:	88 60       	ori	r24, 0x08	; 8
     39a:	0e 94 8f 01 	call	0x31e	; 0x31e <clock_data>
     39e:	82 b1       	in	r24, 0x02	; 2
     3a0:	80 62       	ori	r24, 0x20	; 32
     3a2:	82 b9       	out	0x02, r24	; 2
     3a4:	08 95       	ret

000003a6 <hd44780_init>:
     3a6:	cf 93       	push	r28
     3a8:	df 93       	push	r29
     3aa:	c6 2f       	mov	r28, r22
     3ac:	d4 2f       	mov	r29, r20
     3ae:	98 e3       	ldi	r25, 0x38	; 56
     3b0:	98 b9       	out	0x08, r25	; 8
     3b2:	92 b1       	in	r25, 0x02	; 2
     3b4:	9f 7d       	andi	r25, 0xDF	; 223
     3b6:	92 b9       	out	0x02, r25	; 2
     3b8:	92 b1       	in	r25, 0x02	; 2
     3ba:	9f 7b       	andi	r25, 0xBF	; 191
     3bc:	92 b9       	out	0x02, r25	; 2
     3be:	9f ef       	ldi	r25, 0xFF	; 255
     3c0:	97 b9       	out	0x07, r25	; 7
     3c2:	91 b1       	in	r25, 0x01	; 1
     3c4:	90 6e       	ori	r25, 0xE0	; 224
     3c6:	91 b9       	out	0x01, r25	; 1
     3c8:	ef e1       	ldi	r30, 0x1F	; 31
     3ca:	fe e4       	ldi	r31, 0x4E	; 78
     3cc:	31 97       	sbiw	r30, 0x01	; 1
     3ce:	f1 f7       	brne	.-4      	; 0x3cc <hd44780_init+0x26>
     3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <hd44780_init+0x2c>
     3d2:	00 00       	nop
     3d4:	92 b1       	in	r25, 0x02	; 2
     3d6:	9f 77       	andi	r25, 0x7F	; 127
     3d8:	92 b9       	out	0x02, r25	; 2
     3da:	ef e0       	ldi	r30, 0x0F	; 15
     3dc:	f7 e2       	ldi	r31, 0x27	; 39
     3de:	31 97       	sbiw	r30, 0x01	; 1
     3e0:	f1 f7       	brne	.-4      	; 0x3de <hd44780_init+0x38>
     3e2:	00 c0       	rjmp	.+0      	; 0x3e4 <hd44780_init+0x3e>
     3e4:	00 00       	nop
     3e6:	92 b1       	in	r25, 0x02	; 2
     3e8:	90 68       	ori	r25, 0x80	; 128
     3ea:	92 b9       	out	0x02, r25	; 2
     3ec:	ef e0       	ldi	r30, 0x0F	; 15
     3ee:	f7 e2       	ldi	r31, 0x27	; 39
     3f0:	31 97       	sbiw	r30, 0x01	; 1
     3f2:	f1 f7       	brne	.-4      	; 0x3f0 <hd44780_init+0x4a>
     3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <hd44780_init+0x50>
     3f6:	00 00       	nop
     3f8:	92 b1       	in	r25, 0x02	; 2
     3fa:	9f 77       	andi	r25, 0x7F	; 127
     3fc:	92 b9       	out	0x02, r25	; 2
     3fe:	e7 ec       	ldi	r30, 0xC7	; 199
     400:	f0 e0       	ldi	r31, 0x00	; 0
     402:	31 97       	sbiw	r30, 0x01	; 1
     404:	f1 f7       	brne	.-4      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
     406:	00 c0       	rjmp	.+0      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
     408:	00 00       	nop
     40a:	92 b1       	in	r25, 0x02	; 2
     40c:	90 68       	ori	r25, 0x80	; 128
     40e:	92 b9       	out	0x02, r25	; 2
     410:	e7 ec       	ldi	r30, 0xC7	; 199
     412:	f0 e0       	ldi	r31, 0x00	; 0
     414:	31 97       	sbiw	r30, 0x01	; 1
     416:	f1 f7       	brne	.-4      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     418:	00 c0       	rjmp	.+0      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     41a:	00 00       	nop
     41c:	92 b1       	in	r25, 0x02	; 2
     41e:	9f 77       	andi	r25, 0x7F	; 127
     420:	92 b9       	out	0x02, r25	; 2
     422:	ef ef       	ldi	r30, 0xFF	; 255
     424:	f5 e0       	ldi	r31, 0x05	; 5
     426:	31 97       	sbiw	r30, 0x01	; 1
     428:	f1 f7       	brne	.-4      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
     42a:	00 c0       	rjmp	.+0      	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
     42c:	00 00       	nop
     42e:	92 b1       	in	r25, 0x02	; 2
     430:	90 68       	ori	r25, 0x80	; 128
     432:	92 b9       	out	0x02, r25	; 2
     434:	0e 94 af 01 	call	0x35e	; 0x35e <hd44780_set_entry_mode>
     438:	4d 2f       	mov	r20, r29
     43a:	6c 2f       	mov	r22, r28
     43c:	81 e0       	ldi	r24, 0x01	; 1
     43e:	0e 94 be 01 	call	0x37c	; 0x37c <hd44780_set_display_control>
     442:	0e 94 9f 01 	call	0x33e	; 0x33e <hd44780_clear_display>
     446:	df 91       	pop	r29
     448:	cf 91       	pop	r28
     44a:	08 95       	ret

0000044c <hd44780_set_cursor_position>:
     44c:	61 30       	cpi	r22, 0x01	; 1
     44e:	11 f0       	breq	.+4      	; 0x454 <hd44780_set_cursor_position+0x8>
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	01 c0       	rjmp	.+2      	; 0x456 <hd44780_set_cursor_position+0xa>
     454:	90 e4       	ldi	r25, 0x40	; 64
     456:	89 0f       	add	r24, r25
     458:	92 b1       	in	r25, 0x02	; 2
     45a:	9f 7d       	andi	r25, 0xDF	; 223
     45c:	92 b9       	out	0x02, r25	; 2
     45e:	80 68       	ori	r24, 0x80	; 128
     460:	0e 94 8f 01 	call	0x31e	; 0x31e <clock_data>
     464:	82 b1       	in	r24, 0x02	; 2
     466:	80 62       	ori	r24, 0x20	; 32
     468:	82 b9       	out	0x02, r24	; 2
     46a:	08 95       	ret

0000046c <hd44780_write_char>:
}


void hd44780_write_char(char character){
     46c:	e8 2f       	mov	r30, r24
	const char MAX_CHAR = 255;
#else
	const char MAX_CHAR = CHAR_LEFT_ARROW;
#endif

    DATA_MODE();
     46e:	82 b1       	in	r24, 0x02	; 2
     470:	80 62       	ori	r24, 0x20	; 32
     472:	82 b9       	out	0x02, r24	; 2

    if((character >= ' ') && (character <= MAX_CHAR)){
     474:	e0 32       	cpi	r30, 0x20	; 32
     476:	20 f0       	brcs	.+8      	; 0x480 <hd44780_write_char+0x14>

            clock_data(character);
     478:	8e 2f       	mov	r24, r30
     47a:	0e 94 8f 01 	call	0x31e	; 0x31e <clock_data>
     47e:	08 95       	ret
    }

    else{
		
		switch(character){
     480:	8e 2f       	mov	r24, r30
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	fc 01       	movw	r30, r24
     486:	e0 5c       	subi	r30, 0xC0	; 192
     488:	f1 09       	sbc	r31, r1
     48a:	ed 33       	cpi	r30, 0x3D	; 61
     48c:	f1 05       	cpc	r31, r1
     48e:	d0 f4       	brcc	.+52     	; 0x4c4 <hd44780_write_char+0x58>
     490:	e2 5c       	subi	r30, 0xC2	; 194
     492:	ff 4f       	sbci	r31, 0xFF	; 255
     494:	0c 94 16 09 	jmp	0x122c	; 0x122c <__tablejump2__>
		case 0xC0:	//À
		case 0xC1:	//A accent aigue
		case 0xC2:	//Â
		case 0xC3:	//A ???
		case 0xC4:	//Ä
			character = 'A';
     498:	81 e4       	ldi	r24, 0x41	; 65
     49a:	17 c0       	rjmp	.+46     	; 0x4ca <hd44780_write_char+0x5e>
					
		case 0xC8:	//È
		case 0xC9:	//É
		case 0xCA:	//Ê
		case 0xCB:	//Ë
			character = 'E';
     49c:	85 e4       	ldi	r24, 0x45	; 69
			break;
     49e:	15 c0       	rjmp	.+42     	; 0x4ca <hd44780_write_char+0x5e>
					
		case 0xCC:	//Ì
		case 0xCD:	//I accent aigue
		case 0xCE:	//Î
		case 0xCF:	//Ï
			character = 'I';
     4a0:	89 e4       	ldi	r24, 0x49	; 73
			break;
     4a2:	13 c0       	rjmp	.+38     	; 0x4ca <hd44780_write_char+0x5e>
		case 0xD2:	//Ò
		case 0xD3:	//O accent aigue
		case 0xD4:	//Ô
		case 0xD5:	//O ???
		case 0xD6:	//Ö
			character = 'O';
     4a4:	8f e4       	ldi	r24, 0x4F	; 79
			break;
     4a6:	11 c0       	rjmp	.+34     	; 0x4ca <hd44780_write_char+0x5e>
					
		case 0xD9:	//Ù
		case 0xDA:	//U accent aigue
		case 0xDB:	//Û
		case 0xDC:	//Ü
			character = 'U';
     4a8:	85 e5       	ldi	r24, 0x55	; 85
			break;
     4aa:	0f c0       	rjmp	.+30     	; 0x4ca <hd44780_write_char+0x5e>
		case 0xE0:	//à
		case 0xE1:	//a accent aigue
		case 0xE2:	//â
		case 0xE3:	//a ???
		case 0xE4:	//ä
			character = 'a';
     4ac:	81 e6       	ldi	r24, 0x61	; 97
			break;
     4ae:	0d c0       	rjmp	.+26     	; 0x4ca <hd44780_write_char+0x5e>
		
		case 0xE7:	//ç
			character = 'c';
     4b0:	83 e6       	ldi	r24, 0x63	; 99
			break;
     4b2:	0b c0       	rjmp	.+22     	; 0x4ca <hd44780_write_char+0x5e>
			
		case 0xE8:	//è
		case 0xE9:	//é
		case 0xEA:	//ê
		case 0xEB:	//ë
			character = 'e';
     4b4:	85 e6       	ldi	r24, 0x65	; 101
			break;
     4b6:	09 c0       	rjmp	.+18     	; 0x4ca <hd44780_write_char+0x5e>
			
		case 0xEC:	//ì
		case 0xED:	//i accent aigue
		case 0xEE:	//î
		case 0xEF:	//ï
			character = 'i';
     4b8:	89 e6       	ldi	r24, 0x69	; 105
			break;
     4ba:	07 c0       	rjmp	.+14     	; 0x4ca <hd44780_write_char+0x5e>
		case 0xF2:	//ò
		case 0xF3:	//o accent aigue
		case 0xF4:	//ô
		case 0xF5:	//o ???
		case 0xF6:	//ö
			character = 'o';
     4bc:	8f e6       	ldi	r24, 0x6F	; 111
			break;
     4be:	05 c0       	rjmp	.+10     	; 0x4ca <hd44780_write_char+0x5e>
			
		case 0xF9:	//ù
		case 0xFA:	//u accent aigue
		case 0xFB:	//û
		case 0xFC:	//ü
			character = 'u';
     4c0:	85 e7       	ldi	r24, 0x75	; 117
			break;
     4c2:	03 c0       	rjmp	.+6      	; 0x4ca <hd44780_write_char+0x5e>
		
		default:
			character = 0b10100101;  //une boule pas rapport
     4c4:	85 ea       	ldi	r24, 0xA5	; 165
			break;
     4c6:	01 c0       	rjmp	.+2      	; 0x4ca <hd44780_write_char+0x5e>
		case 0xC4:	//Ä
			character = 'A';
			break;
					
		case 0xC7:	//Ç
			character = 'C';
     4c8:	83 e4       	ldi	r24, 0x43	; 67
		default:
			character = 0b10100101;  //une boule pas rapport
			break;
		}				

        clock_data(character);  //une boule pas rapport
     4ca:	0e 94 8f 01 	call	0x31e	; 0x31e <clock_data>
     4ce:	08 95       	ret

000004d0 <lcd_init>:
Global functions LCD
******************************************************************************/

void lcd_init(void){

    hd44780_init(TRUE, TRUE, FALSE);
     4d0:	40 e0       	ldi	r20, 0x00	; 0
     4d2:	61 e0       	ldi	r22, 0x01	; 1
     4d4:	81 e0       	ldi	r24, 0x01	; 1
     4d6:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <hd44780_init>

    local_index = 0;
     4da:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <local_index>
	clear_required_flag = FALSE;
     4de:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <__data_end>
     4e2:	08 95       	ret

000004e4 <lcd_clear_display>:
}


void lcd_clear_display(){

    hd44780_clear_display();
     4e4:	0e 94 9f 01 	call	0x33e	; 0x33e <hd44780_clear_display>

    local_index = 0;
     4e8:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <local_index>
     4ec:	08 95       	ret

000004ee <lcd_set_cursor_position>:
}


void lcd_set_cursor_position(uint8_t col, uint8_t row){
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29

    if((col >= 0) && (col < LCD_NB_COL) && (row >= 0) && (row < LCD_NB_ROW)){
     4f2:	80 31       	cpi	r24, 0x10	; 16
     4f4:	68 f4       	brcc	.+26     	; 0x510 <lcd_set_cursor_position+0x22>
     4f6:	62 30       	cpi	r22, 0x02	; 2
     4f8:	58 f4       	brcc	.+22     	; 0x510 <lcd_set_cursor_position+0x22>
     4fa:	d6 2f       	mov	r29, r22
     4fc:	c8 2f       	mov	r28, r24

        hd44780_set_cursor_position(col, row);
     4fe:	0e 94 26 02 	call	0x44c	; 0x44c <hd44780_set_cursor_position>

        local_index = col + row * LCD_NB_COL;
     502:	8c 2f       	mov	r24, r28
     504:	90 e1       	ldi	r25, 0x10	; 16
     506:	d9 9f       	mul	r29, r25
     508:	80 0d       	add	r24, r0
     50a:	11 24       	eor	r1, r1
     50c:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <local_index>
    }
}
     510:	df 91       	pop	r29
     512:	cf 91       	pop	r28
     514:	08 95       	ret

00000516 <index_to_col>:
/* lcd */

uint8_t index_to_col(uint8_t index){

    return index % LCD_NB_COL;
}
     516:	8f 70       	andi	r24, 0x0F	; 15
     518:	08 95       	ret

0000051a <index_to_row>:


uint8_t index_to_row(uint8_t index){

    return index / LCD_NB_COL;
}
     51a:	82 95       	swap	r24
     51c:	8f 70       	andi	r24, 0x0F	; 15
     51e:	08 95       	ret

00000520 <shift_local_index>:

bool shift_local_index(bool foward){
     520:	1f 93       	push	r17
     522:	cf 93       	push	r28
     524:	df 93       	push	r29
     526:	18 2f       	mov	r17, r24

    uint8_t previous_row;

    previous_row = index_to_row(local_index);
     528:	c0 91 41 01 	lds	r28, 0x0141	; 0x800141 <local_index>
     52c:	8c 2f       	mov	r24, r28
     52e:	0e 94 8d 02 	call	0x51a	; 0x51a <index_to_row>
     532:	d8 2f       	mov	r29, r24

    /* Si on est dans le sens foward */
    if(foward == TRUE){
     534:	11 30       	cpi	r17, 0x01	; 1
     536:	49 f4       	brne	.+18     	; 0x54a <shift_local_index+0x2a>

        /* Si on est à la fin */
        if(local_index >= MAX_INDEX - 1){
     538:	cf 31       	cpi	r28, 0x1F	; 31
     53a:	18 f0       	brcs	.+6      	; 0x542 <shift_local_index+0x22>

			local_index = 0;
     53c:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <local_index>
     540:	0d c0       	rjmp	.+26     	; 0x55c <shift_local_index+0x3c>
        }

        else{

            local_index++;
     542:	cf 5f       	subi	r28, 0xFF	; 255
     544:	c0 93 41 01 	sts	0x0141, r28	; 0x800141 <local_index>
     548:	09 c0       	rjmp	.+18     	; 0x55c <shift_local_index+0x3c>

    /* Si on est dans le sens décrémental foward ou incrémental backward*/
    else{

        /* Si on est au début */
        if(local_index <= 0){
     54a:	c1 11       	cpse	r28, r1
     54c:	04 c0       	rjmp	.+8      	; 0x556 <shift_local_index+0x36>
			
            local_index = MAX_INDEX - 1;
     54e:	8f e1       	ldi	r24, 0x1F	; 31
     550:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <local_index>
     554:	03 c0       	rjmp	.+6      	; 0x55c <shift_local_index+0x3c>
        }

        else{

            local_index--;
     556:	c1 50       	subi	r28, 0x01	; 1
     558:	c0 93 41 01 	sts	0x0141, r28	; 0x800141 <local_index>
        }
    }

    /* Si la row actuelle ne correspond pas à l'ancienne il va falloir manuellement
    déplacer le curseur */
    return (previous_row != index_to_row(local_index));
     55c:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <local_index>
     560:	0e 94 8d 02 	call	0x51a	; 0x51a <index_to_row>
     564:	91 e0       	ldi	r25, 0x01	; 1
     566:	d8 13       	cpse	r29, r24
     568:	01 c0       	rjmp	.+2      	; 0x56c <shift_local_index+0x4c>
     56a:	90 e0       	ldi	r25, 0x00	; 0
}
     56c:	89 2f       	mov	r24, r25
     56e:	df 91       	pop	r29
     570:	cf 91       	pop	r28
     572:	1f 91       	pop	r17
     574:	08 95       	ret

00000576 <lcd_shift_cursor>:
        local_index = col + row * LCD_NB_COL;
    }
}


void lcd_shift_cursor(lcd_shift_e shift){
     576:	cf 93       	push	r28
     578:	df 93       	push	r29

    switch(shift){
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	88 30       	cpi	r24, 0x08	; 8
     57e:	91 05       	cpc	r25, r1
     580:	08 f0       	brcs	.+2      	; 0x584 <lcd_shift_cursor+0xe>
     582:	51 c0       	rjmp	.+162    	; 0x626 <lcd_shift_cursor+0xb0>
     584:	fc 01       	movw	r30, r24
     586:	e5 58       	subi	r30, 0x85	; 133
     588:	ff 4f       	sbci	r31, 0xFF	; 255
     58a:	0c 94 16 09 	jmp	0x122c	; 0x122c <__tablejump2__>
    case LCD_SHIFT_RIGHT:

        shift_local_index(TRUE);
     58e:	81 e0       	ldi	r24, 0x01	; 1
     590:	0e 94 90 02 	call	0x520	; 0x520 <shift_local_index>

        break;
     594:	48 c0       	rjmp	.+144    	; 0x626 <lcd_shift_cursor+0xb0>

    case LCD_SHIFT_LEFT:

        shift_local_index(FALSE);
     596:	80 e0       	ldi	r24, 0x00	; 0
     598:	0e 94 90 02 	call	0x520	; 0x520 <shift_local_index>

        break;
     59c:	44 c0       	rjmp	.+136    	; 0x626 <lcd_shift_cursor+0xb0>

    case LCD_SHIFT_UP:

		// Si on est sur la ligne du haut
        if(index_to_row(local_index) <= 0){
     59e:	c0 91 41 01 	lds	r28, 0x0141	; 0x800141 <local_index>
     5a2:	8c 2f       	mov	r24, r28
     5a4:	0e 94 8d 02 	call	0x51a	; 0x51a <index_to_row>
     5a8:	81 11       	cpse	r24, r1
     5aa:	07 c0       	rjmp	.+14     	; 0x5ba <lcd_shift_cursor+0x44>

			// On se rend à la fin moins une ligne
            local_index += (MAX_INDEX - LCD_NB_COL);
     5ac:	c0 5f       	subi	r28, 0xF0	; 240
     5ae:	c0 93 41 01 	sts	0x0141, r28	; 0x800141 <local_index>
			
			clear_required_flag = TRUE;
     5b2:	81 e0       	ldi	r24, 0x01	; 1
     5b4:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__data_end>
     5b8:	36 c0       	rjmp	.+108    	; 0x626 <lcd_shift_cursor+0xb0>
        }

        else{
			
			// On recule d'une ligne
            local_index -= LCD_NB_COL;
     5ba:	c0 51       	subi	r28, 0x10	; 16
     5bc:	c0 93 41 01 	sts	0x0141, r28	; 0x800141 <local_index>
     5c0:	32 c0       	rjmp	.+100    	; 0x626 <lcd_shift_cursor+0xb0>
        break;

    case LCD_SHIFT_DOWN:

		// Si on est rendu à la dernière ligne
        if(index_to_row(local_index) >= LCD_NB_ROW - 1){
     5c2:	c0 91 41 01 	lds	r28, 0x0141	; 0x800141 <local_index>
     5c6:	8c 2f       	mov	r24, r28
     5c8:	0e 94 8d 02 	call	0x51a	; 0x51a <index_to_row>
     5cc:	88 23       	and	r24, r24
     5ce:	39 f0       	breq	.+14     	; 0x5de <lcd_shift_cursor+0x68>

			// On ne garde que le numéro de colone (donc sa ramène sur la première ligne)
            local_index %= LCD_NB_COL;
     5d0:	cf 70       	andi	r28, 0x0F	; 15
     5d2:	c0 93 41 01 	sts	0x0141, r28	; 0x800141 <local_index>
			
			clear_required_flag = TRUE;
     5d6:	81 e0       	ldi	r24, 0x01	; 1
     5d8:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__data_end>
     5dc:	24 c0       	rjmp	.+72     	; 0x626 <lcd_shift_cursor+0xb0>
        }

        else{

			// On avance d'une ligne
            local_index += LCD_NB_COL;
     5de:	c0 5f       	subi	r28, 0xF0	; 240
     5e0:	c0 93 41 01 	sts	0x0141, r28	; 0x800141 <local_index>
     5e4:	20 c0       	rjmp	.+64     	; 0x626 <lcd_shift_cursor+0xb0>

        break;
	
	case LCD_SHIFT_END:
	
		local_index = ((index_to_row(local_index) + 1) * LCD_NB_COL) - 1;
     5e6:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <local_index>
     5ea:	0e 94 8d 02 	call	0x51a	; 0x51a <index_to_row>
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	01 96       	adiw	r24, 0x01	; 1
     5f2:	82 95       	swap	r24
     5f4:	80 7f       	andi	r24, 0xF0	; 240
     5f6:	81 50       	subi	r24, 0x01	; 1
     5f8:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <local_index>
		
		break;
     5fc:	14 c0       	rjmp	.+40     	; 0x626 <lcd_shift_cursor+0xb0>
		
	case LCD_SHIFT_START:
		
		local_index = index_to_row(local_index) * LCD_NB_COL;
     5fe:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <local_index>
     602:	0e 94 8d 02 	call	0x51a	; 0x51a <index_to_row>
     606:	82 95       	swap	r24
     608:	80 7f       	andi	r24, 0xF0	; 240
     60a:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <local_index>
		
		break;
     60e:	0b c0       	rjmp	.+22     	; 0x626 <lcd_shift_cursor+0xb0>
		
	case LCD_SHIFT_TOP:
	
		// On ne garde que le numéro de colone (donc sa ramène sur la première ligne)
		local_index %= LCD_NB_COL;
     610:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <local_index>
     614:	8f 70       	andi	r24, 0x0F	; 15
     616:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <local_index>
		
		break;
     61a:	05 c0       	rjmp	.+10     	; 0x626 <lcd_shift_cursor+0xb0>
		
	case LCD_SHIFT_BOTTOM:
		
		// On se rend à la fin moins une ligne
		local_index += (MAX_INDEX - LCD_NB_COL);
     61c:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <local_index>
     620:	80 5f       	subi	r24, 0xF0	; 240
     622:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <local_index>
		
		break;
	}		

    hd44780_set_cursor_position(index_to_col(local_index), index_to_row(local_index));
     626:	c0 91 41 01 	lds	r28, 0x0141	; 0x800141 <local_index>
     62a:	8c 2f       	mov	r24, r28
     62c:	0e 94 8d 02 	call	0x51a	; 0x51a <index_to_row>
     630:	d8 2f       	mov	r29, r24
     632:	8c 2f       	mov	r24, r28
     634:	0e 94 8b 02 	call	0x516	; 0x516 <index_to_col>
     638:	6d 2f       	mov	r22, r29
     63a:	0e 94 26 02 	call	0x44c	; 0x44c <hd44780_set_cursor_position>
}
     63e:	df 91       	pop	r29
     640:	cf 91       	pop	r28
     642:	08 95       	ret

00000644 <lcd_write_char>:


void lcd_write_char(char character){
     644:	cf 93       	push	r28
     646:	df 93       	push	r29
     648:	c8 2f       	mov	r28, r24

    bool unsynced;
	
	// Si il s'agit d'un des 32 premier caractères ascii, on s'attend à un contrôle
	// plutôt que l'affichage d'un caractère
	if(character < ' '){
     64a:	80 32       	cpi	r24, 0x20	; 32
     64c:	68 f4       	brcc	.+26     	; 0x668 <lcd_write_char+0x24>
		
		switch (character){
     64e:	8a 30       	cpi	r24, 0x0A	; 10
     650:	19 f0       	breq	.+6      	; 0x658 <lcd_write_char+0x14>
     652:	8d 30       	cpi	r24, 0x0D	; 13
     654:	29 f0       	breq	.+10     	; 0x660 <lcd_write_char+0x1c>
     656:	24 c0       	rjmp	.+72     	; 0x6a0 <lcd_write_char+0x5c>
		case '\n':	// 0x0A	new line
			lcd_shift_cursor(LCD_SHIFT_DOWN);
     658:	83 e0       	ldi	r24, 0x03	; 3
     65a:	0e 94 bb 02 	call	0x576	; 0x576 <lcd_shift_cursor>
			break;
     65e:	20 c0       	rjmp	.+64     	; 0x6a0 <lcd_write_char+0x5c>
		case '\r':
			lcd_shift_cursor(LCD_SHIFT_START);
     660:	85 e0       	ldi	r24, 0x05	; 5
     662:	0e 94 bb 02 	call	0x576	; 0x576 <lcd_shift_cursor>
			break;
     666:	1c c0       	rjmp	.+56     	; 0x6a0 <lcd_write_char+0x5c>
		}		
	}

	else{
		
		if(clear_required_flag == TRUE){
     668:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <__data_end>
     66c:	81 30       	cpi	r24, 0x01	; 1
     66e:	21 f4       	brne	.+8      	; 0x678 <lcd_write_char+0x34>
			
			hd44780_clear_display();
     670:	0e 94 9f 01 	call	0x33e	; 0x33e <hd44780_clear_display>
			//hd44780_set_cursor_position(index_to_col(local_index), index_to_row(local_index));
			clear_required_flag = FALSE;
     674:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <__data_end>
		}
		
		hd44780_write_char(character);
     678:	8c 2f       	mov	r24, r28
     67a:	0e 94 36 02 	call	0x46c	; 0x46c <hd44780_write_char>

		unsynced = shift_local_index(TRUE);
     67e:	81 e0       	ldi	r24, 0x01	; 1
     680:	0e 94 90 02 	call	0x520	; 0x520 <shift_local_index>

		if(unsynced == TRUE){
     684:	81 30       	cpi	r24, 0x01	; 1
     686:	61 f4       	brne	.+24     	; 0x6a0 <lcd_write_char+0x5c>

			hd44780_set_cursor_position(index_to_col(local_index), index_to_row(local_index));
     688:	c0 91 41 01 	lds	r28, 0x0141	; 0x800141 <local_index>
     68c:	8c 2f       	mov	r24, r28
     68e:	0e 94 8d 02 	call	0x51a	; 0x51a <index_to_row>
     692:	d8 2f       	mov	r29, r24
     694:	8c 2f       	mov	r24, r28
     696:	0e 94 8b 02 	call	0x516	; 0x516 <index_to_col>
     69a:	6d 2f       	mov	r22, r29
     69c:	0e 94 26 02 	call	0x44c	; 0x44c <hd44780_set_cursor_position>
		}
	}
}
     6a0:	df 91       	pop	r29
     6a2:	cf 91       	pop	r28
     6a4:	08 95       	ret

000006a6 <lcd_write_string>:


void lcd_write_string(const char* string){
     6a6:	0f 93       	push	r16
     6a8:	1f 93       	push	r17
     6aa:	cf 93       	push	r28
     6ac:	8c 01       	movw	r16, r24

    uint8_t index = 0;
     6ae:	c0 e0       	ldi	r28, 0x00	; 0

    while(string[index] != '\0'){
     6b0:	03 c0       	rjmp	.+6      	; 0x6b8 <lcd_write_string+0x12>

        lcd_write_char(string[index]);
     6b2:	0e 94 22 03 	call	0x644	; 0x644 <lcd_write_char>

        index++;
     6b6:	cf 5f       	subi	r28, 0xFF	; 255

void lcd_write_string(const char* string){

    uint8_t index = 0;

    while(string[index] != '\0'){
     6b8:	f8 01       	movw	r30, r16
     6ba:	ec 0f       	add	r30, r28
     6bc:	f1 1d       	adc	r31, r1
     6be:	80 81       	ld	r24, Z
     6c0:	81 11       	cpse	r24, r1
     6c2:	f7 cf       	rjmp	.-18     	; 0x6b2 <lcd_write_string+0xc>

        lcd_write_char(string[index]);

        index++;
    }
}
     6c4:	cf 91       	pop	r28
     6c6:	1f 91       	pop	r17
     6c8:	0f 91       	pop	r16
     6ca:	08 95       	ret

000006cc <main>:

void display_heartbeat();

//extern uint16_t clock;

int main(void){
     6cc:	cf 93       	push	r28
     6ce:	df 93       	push	r29
     6d0:	cd b7       	in	r28, 0x3d	; 61
     6d2:	de b7       	in	r29, 0x3e	; 62
     6d4:	c7 55       	subi	r28, 0x57	; 87
     6d6:	d1 09       	sbc	r29, r1
     6d8:	0f b6       	in	r0, 0x3f	; 63
     6da:	f8 94       	cli
     6dc:	de bf       	out	0x3e, r29	; 62
     6de:	0f be       	out	0x3f, r0	; 63
     6e0:	cd bf       	out	0x3d, r28	; 61
	
	//*******Fonction******
	uart_init(UART_0);
     6e2:	80 e0       	ldi	r24, 0x00	; 0
     6e4:	0e 94 24 05 	call	0xa48	; 0xa48 <uart_init>
	lcd_init();
     6e8:	0e 94 68 02 	call	0x4d0	; 0x4d0 <lcd_init>
	pwm0_init();
     6ec:	0e 94 a8 00 	call	0x150	; 0x150 <pwm0_init>
	pwm1_init(20000);
     6f0:	80 e2       	ldi	r24, 0x20	; 32
     6f2:	9e e4       	ldi	r25, 0x4E	; 78
     6f4:	0e 94 cf 00 	call	0x19e	; 0x19e <pwm1_init>
	pwm2_init();
     6f8:	0e 94 09 01 	call	0x212	; 0x212 <pwm2_init>


	sei();
     6fc:	78 94       	sei
	
	//*******Uint******
	uint8_t x = 0;						// Position Joystick X
     6fe:	19 82       	std	Y+1, r1	; 0x01
	uint8_t y = 1;						// Position Joystick Y
     700:	81 e0       	ldi	r24, 0x01	; 1
     702:	8a 83       	std	Y+2, r24	; 0x02
	uint8_t z = 0;						// Position potentiomètre
     704:	1b 82       	std	Y+3, r1	; 0x03
	uint8_t mode = 0;					// Variable selection des mondes 1: Déplacement 2: Tir SW1
     706:	1c 82       	std	Y+4, r1	; 0x04
	uint8_t moteurLanceur = 0;			// Activation du moteur de tir SW2
     708:	1d 82       	std	Y+5, r1	; 0x05
	uint8_t servoMoteurLanceur = 0;		// Activation du servo-moteur tir SW3
     70a:	1e 82       	std	Y+6, r1	; 0x06
	uint8_t joystick = 0;				// Bouton JoyStick pour R et D
     70c:	1f 82       	std	Y+7, r1	; 0x07
	
	
	//******Strings*****
	char message[40] = {'\0'};
     70e:	88 e2       	ldi	r24, 0x28	; 40
     710:	fe 01       	movw	r30, r28
     712:	38 96       	adiw	r30, 0x08	; 8
     714:	df 01       	movw	r26, r30
     716:	98 2f       	mov	r25, r24
     718:	1d 92       	st	X+, r1
     71a:	9a 95       	dec	r25
     71c:	e9 f7       	brne	.-6      	; 0x718 <main+0x4c>
	char str    [40] = {'\0'};
     71e:	b8 96       	adiw	r30, 0x28	; 40
     720:	df 01       	movw	r26, r30
     722:	1d 92       	st	X+, r1
     724:	8a 95       	dec	r24
     726:	e9 f7       	brne	.-6      	; 0x722 <main+0x56>
	
	
	
	
	DDRB = clear_bits(DDRB, 0b0001111);
     728:	84 b1       	in	r24, 0x04	; 4
     72a:	80 7f       	andi	r24, 0xF0	; 240
     72c:	84 b9       	out	0x04, r24	; 4
	DDRB = set_bits(DDRB, 0b0001111);
     72e:	84 b1       	in	r24, 0x04	; 4
     730:	8f 60       	ori	r24, 0x0F	; 15
     732:	84 b9       	out	0x04, r24	; 4
	
	while (1)
	{
		
		// Lecture des données reçues par le véhicule
		if (!uart_is_rx_buffer_empty(UART_0)){
     734:	80 e0       	ldi	r24, 0x00	; 0
     736:	0e 94 75 05 	call	0xaea	; 0xaea <uart_is_rx_buffer_empty>
     73a:	81 11       	cpse	r24, r1
     73c:	7e c0       	rjmp	.+252    	; 0x83a <__DATA_REGION_LENGTH__+0x3a>

				lcd_clear_display();
     73e:	0e 94 72 02 	call	0x4e4	; 0x4e4 <lcd_clear_display>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     742:	8f e3       	ldi	r24, 0x3F	; 63
     744:	9c e9       	ldi	r25, 0x9C	; 156
     746:	01 97       	sbiw	r24, 0x01	; 1
     748:	f1 f7       	brne	.-4      	; 0x746 <main+0x7a>
     74a:	00 c0       	rjmp	.+0      	; 0x74c <main+0x80>
     74c:	00 00       	nop
				_delay_ms(20);
				uart_get_string(UART_0,message,151);
     74e:	7e 01       	movw	r14, r28
     750:	98 e0       	ldi	r25, 0x08	; 8
     752:	e9 0e       	add	r14, r25
     754:	f1 1c       	adc	r15, r1
     756:	47 e9       	ldi	r20, 0x97	; 151
     758:	b7 01       	movw	r22, r14
     75a:	80 e0       	ldi	r24, 0x00	; 0
     75c:	0e 94 80 05 	call	0xb00	; 0xb00 <uart_get_string>

				sscanf(message,  "X%03dY%03dZ%03dm%dM%dL%dD%d", &x, &y, &z, &mode, &moteurLanceur, &servoMoteurLanceur, &joystick);
     760:	ce 01       	movw	r24, r28
     762:	07 96       	adiw	r24, 0x07	; 7
     764:	9f 93       	push	r25
     766:	8f 93       	push	r24
     768:	01 97       	sbiw	r24, 0x01	; 1
     76a:	9f 93       	push	r25
     76c:	8f 93       	push	r24
     76e:	01 97       	sbiw	r24, 0x01	; 1
     770:	9f 93       	push	r25
     772:	8f 93       	push	r24
     774:	01 97       	sbiw	r24, 0x01	; 1
     776:	9f 93       	push	r25
     778:	8f 93       	push	r24
     77a:	01 97       	sbiw	r24, 0x01	; 1
     77c:	9f 93       	push	r25
     77e:	8f 93       	push	r24
     780:	01 97       	sbiw	r24, 0x01	; 1
     782:	9f 93       	push	r25
     784:	8f 93       	push	r24
     786:	01 97       	sbiw	r24, 0x01	; 1
     788:	9f 93       	push	r25
     78a:	8f 93       	push	r24
     78c:	01 e0       	ldi	r16, 0x01	; 1
     78e:	11 e0       	ldi	r17, 0x01	; 1
     790:	1f 93       	push	r17
     792:	0f 93       	push	r16
     794:	ff 92       	push	r15
     796:	ef 92       	push	r14
     798:	0e 94 3e 09 	call	0x127c	; 0x127c <sscanf>
				//sprintf(str, "%s", message);
				
				sprintf(str, "X%03dY%03dZ%03dm%dM%dL%dD%d", x, y, z, mode, moteurLanceur, servoMoteurLanceur, joystick);
     79c:	8f 81       	ldd	r24, Y+7	; 0x07
     79e:	1f 92       	push	r1
     7a0:	8f 93       	push	r24
     7a2:	8e 81       	ldd	r24, Y+6	; 0x06
     7a4:	1f 92       	push	r1
     7a6:	8f 93       	push	r24
     7a8:	8d 81       	ldd	r24, Y+5	; 0x05
     7aa:	1f 92       	push	r1
     7ac:	8f 93       	push	r24
     7ae:	8c 81       	ldd	r24, Y+4	; 0x04
     7b0:	1f 92       	push	r1
     7b2:	8f 93       	push	r24
     7b4:	8b 81       	ldd	r24, Y+3	; 0x03
     7b6:	1f 92       	push	r1
     7b8:	8f 93       	push	r24
     7ba:	8a 81       	ldd	r24, Y+2	; 0x02
     7bc:	1f 92       	push	r1
     7be:	8f 93       	push	r24
     7c0:	89 81       	ldd	r24, Y+1	; 0x01
     7c2:	1f 92       	push	r1
     7c4:	8f 93       	push	r24
     7c6:	1f 93       	push	r17
     7c8:	0f 93       	push	r16
     7ca:	8e 01       	movw	r16, r28
     7cc:	00 5d       	subi	r16, 0xD0	; 208
     7ce:	1f 4f       	sbci	r17, 0xFF	; 255
     7d0:	1f 93       	push	r17
     7d2:	0f 93       	push	r16
     7d4:	0e 94 1c 09 	call	0x1238	; 0x1238 <sprintf>
				lcd_set_cursor_position(0,0);
     7d8:	0f b6       	in	r0, 0x3f	; 63
     7da:	f8 94       	cli
     7dc:	de bf       	out	0x3e, r29	; 62
     7de:	0f be       	out	0x3f, r0	; 63
     7e0:	cd bf       	out	0x3d, r28	; 61
     7e2:	60 e0       	ldi	r22, 0x00	; 0
     7e4:	80 e0       	ldi	r24, 0x00	; 0
     7e6:	0e 94 77 02 	call	0x4ee	; 0x4ee <lcd_set_cursor_position>

				lcd_write_string(str);
     7ea:	c8 01       	movw	r24, r16
     7ec:	0e 94 53 03 	call	0x6a6	; 0x6a6 <lcd_write_string>
						
				//Mode rotation (le véhicule tourne sur lui-même par la gauche ou par la droite)
				if(mode == 1){
     7f0:	8c 81       	ldd	r24, Y+4	; 0x04
     7f2:	81 30       	cpi	r24, 0x01	; 1
     7f4:	71 f4       	brne	.+28     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
					setRotation(x,z);	
     7f6:	6b 81       	ldd	r22, Y+3	; 0x03
     7f8:	89 81       	ldd	r24, Y+1	; 0x01
     7fa:	0e 94 d3 05 	call	0xba6	; 0xba6 <setRotation>
					driverLanceur(moteurLanceur,servoMoteurLanceur,y);	
     7fe:	4a 81       	ldd	r20, Y+2	; 0x02
     800:	6e 81       	ldd	r22, Y+6	; 0x06
     802:	8d 81       	ldd	r24, Y+5	; 0x05
     804:	0e 94 6e 07 	call	0xedc	; 0xedc <driverLanceur>
                    pwm1_set_PD5(1250);		
     808:	82 ee       	ldi	r24, 0xE2	; 226
     80a:	94 e0       	ldi	r25, 0x04	; 4
     80c:	0e 94 04 01 	call	0x208	; 0x208 <pwm1_set_PD5>
     810:	14 c0       	rjmp	.+40     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
				}					
				//Mode déplacement (le véhicule peut avancer, reculer, tourner)
				else if(mode == 0){
     812:	81 11       	cpse	r24, r1
     814:	0f c0       	rjmp	.+30     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
					setDeplacement(joystick, x, z);	
     816:	4b 81       	ldd	r20, Y+3	; 0x03
     818:	69 81       	ldd	r22, Y+1	; 0x01
     81a:	8f 81       	ldd	r24, Y+7	; 0x07
     81c:	0e 94 f5 06 	call	0xdea	; 0xdea <setDeplacement>
					driverLanceur(moteurLanceur,servoMoteurLanceur,y);
     820:	4a 81       	ldd	r20, Y+2	; 0x02
     822:	6e 81       	ldd	r22, Y+6	; 0x06
     824:	8d 81       	ldd	r24, Y+5	; 0x05
     826:	0e 94 6e 07 	call	0xedc	; 0xedc <driverLanceur>
                    pwm1_set_PD5(2300);	
     82a:	8c ef       	ldi	r24, 0xFC	; 252
     82c:	98 e0       	ldi	r25, 0x08	; 8
     82e:	0e 94 04 01 	call	0x208	; 0x208 <pwm1_set_PD5>
     832:	03 c0       	rjmp	.+6      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
					}
				//Si problème alors le véhicule arrête de bouger
				else {
					setPuissanceMoteurRoue(0);
     834:	80 e0       	ldi	r24, 0x00	; 0
     836:	0e 94 ca 05 	call	0xb94	; 0xb94 <setPuissanceMoteurRoue>
				}
		}	
	display_heartbeat();		
     83a:	0e 94 0e 07 	call	0xe1c	; 0xe1c <display_heartbeat>
	}
     83e:	7a cf       	rjmp	.-268    	; 0x734 <main+0x68>

00000840 <disable_UDRE_interupt>:


/*** uart_clean_rx_buffer ***/
void uart_clean_rx_buffer(uart_e port){

	fifo_clean(rx_fifo_list[port]);
     840:	88 23       	and	r24, r24
     842:	19 f0       	breq	.+6      	; 0x84a <disable_UDRE_interupt+0xa>
     844:	81 30       	cpi	r24, 0x01	; 1
     846:	39 f0       	breq	.+14     	; 0x856 <disable_UDRE_interupt+0x16>
     848:	08 95       	ret
     84a:	e1 ec       	ldi	r30, 0xC1	; 193
     84c:	f0 e0       	ldi	r31, 0x00	; 0
     84e:	80 81       	ld	r24, Z
     850:	8f 7d       	andi	r24, 0xDF	; 223
     852:	80 83       	st	Z, r24
     854:	08 95       	ret
     856:	e9 ec       	ldi	r30, 0xC9	; 201
     858:	f0 e0       	ldi	r31, 0x00	; 0
     85a:	80 81       	ld	r24, Z
     85c:	8f 7d       	andi	r24, 0xDF	; 223
     85e:	80 83       	st	Z, r24
     860:	08 95       	ret

00000862 <enable_RX_interupt>:
     862:	88 23       	and	r24, r24
     864:	19 f0       	breq	.+6      	; 0x86c <enable_RX_interupt+0xa>
     866:	81 30       	cpi	r24, 0x01	; 1
     868:	39 f0       	breq	.+14     	; 0x878 <enable_RX_interupt+0x16>
     86a:	08 95       	ret
     86c:	e1 ec       	ldi	r30, 0xC1	; 193
     86e:	f0 e0       	ldi	r31, 0x00	; 0
     870:	80 81       	ld	r24, Z
     872:	80 68       	ori	r24, 0x80	; 128
     874:	80 83       	st	Z, r24
     876:	08 95       	ret
     878:	e9 ec       	ldi	r30, 0xC9	; 201
     87a:	f0 e0       	ldi	r31, 0x00	; 0
     87c:	80 81       	ld	r24, Z
     87e:	80 68       	ori	r24, 0x80	; 128
     880:	80 83       	st	Z, r24
     882:	08 95       	ret

00000884 <disable_RX_interupt>:
     884:	88 23       	and	r24, r24
     886:	19 f0       	breq	.+6      	; 0x88e <disable_RX_interupt+0xa>
     888:	81 30       	cpi	r24, 0x01	; 1
     88a:	39 f0       	breq	.+14     	; 0x89a <disable_RX_interupt+0x16>
     88c:	08 95       	ret
     88e:	e1 ec       	ldi	r30, 0xC1	; 193
     890:	f0 e0       	ldi	r31, 0x00	; 0
     892:	80 81       	ld	r24, Z
     894:	8f 77       	andi	r24, 0x7F	; 127
     896:	80 83       	st	Z, r24
     898:	08 95       	ret
     89a:	e9 ec       	ldi	r30, 0xC9	; 201
     89c:	f0 e0       	ldi	r31, 0x00	; 0
     89e:	80 81       	ld	r24, Z
     8a0:	8f 77       	andi	r24, 0x7F	; 127
     8a2:	80 83       	st	Z, r24
     8a4:	08 95       	ret

000008a6 <__vector_21>:
     8a6:	1f 92       	push	r1
     8a8:	0f 92       	push	r0
     8aa:	0f b6       	in	r0, 0x3f	; 63
     8ac:	0f 92       	push	r0
     8ae:	11 24       	eor	r1, r1
     8b0:	2f 93       	push	r18
     8b2:	3f 93       	push	r19
     8b4:	4f 93       	push	r20
     8b6:	5f 93       	push	r21
     8b8:	6f 93       	push	r22
     8ba:	7f 93       	push	r23
     8bc:	8f 93       	push	r24
     8be:	9f 93       	push	r25
     8c0:	af 93       	push	r26
     8c2:	bf 93       	push	r27
     8c4:	ef 93       	push	r30
     8c6:	ff 93       	push	r31
     8c8:	82 e5       	ldi	r24, 0x52	; 82
     8ca:	91 e0       	ldi	r25, 0x01	; 1
     8cc:	0e 94 66 01 	call	0x2cc	; 0x2cc <fifo_pop>
     8d0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     8d4:	82 e5       	ldi	r24, 0x52	; 82
     8d6:	91 e0       	ldi	r25, 0x01	; 1
     8d8:	0e 94 8c 01 	call	0x318	; 0x318 <fifo_is_empty>
     8dc:	81 30       	cpi	r24, 0x01	; 1
     8de:	19 f4       	brne	.+6      	; 0x8e6 <__vector_21+0x40>
     8e0:	80 e0       	ldi	r24, 0x00	; 0
     8e2:	0e 94 20 04 	call	0x840	; 0x840 <disable_UDRE_interupt>
     8e6:	ff 91       	pop	r31
     8e8:	ef 91       	pop	r30
     8ea:	bf 91       	pop	r27
     8ec:	af 91       	pop	r26
     8ee:	9f 91       	pop	r25
     8f0:	8f 91       	pop	r24
     8f2:	7f 91       	pop	r23
     8f4:	6f 91       	pop	r22
     8f6:	5f 91       	pop	r21
     8f8:	4f 91       	pop	r20
     8fa:	3f 91       	pop	r19
     8fc:	2f 91       	pop	r18
     8fe:	0f 90       	pop	r0
     900:	0f be       	out	0x3f, r0	; 63
     902:	0f 90       	pop	r0
     904:	1f 90       	pop	r1
     906:	18 95       	reti

00000908 <__vector_20>:
     908:	1f 92       	push	r1
     90a:	0f 92       	push	r0
     90c:	0f b6       	in	r0, 0x3f	; 63
     90e:	0f 92       	push	r0
     910:	11 24       	eor	r1, r1
     912:	2f 93       	push	r18
     914:	3f 93       	push	r19
     916:	4f 93       	push	r20
     918:	5f 93       	push	r21
     91a:	6f 93       	push	r22
     91c:	7f 93       	push	r23
     91e:	8f 93       	push	r24
     920:	9f 93       	push	r25
     922:	af 93       	push	r26
     924:	bf 93       	push	r27
     926:	ef 93       	push	r30
     928:	ff 93       	push	r31
     92a:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     92e:	8a e5       	ldi	r24, 0x5A	; 90
     930:	91 e0       	ldi	r25, 0x01	; 1
     932:	0e 94 42 01 	call	0x284	; 0x284 <fifo_push>
     936:	ff 91       	pop	r31
     938:	ef 91       	pop	r30
     93a:	bf 91       	pop	r27
     93c:	af 91       	pop	r26
     93e:	9f 91       	pop	r25
     940:	8f 91       	pop	r24
     942:	7f 91       	pop	r23
     944:	6f 91       	pop	r22
     946:	5f 91       	pop	r21
     948:	4f 91       	pop	r20
     94a:	3f 91       	pop	r19
     94c:	2f 91       	pop	r18
     94e:	0f 90       	pop	r0
     950:	0f be       	out	0x3f, r0	; 63
     952:	0f 90       	pop	r0
     954:	1f 90       	pop	r1
     956:	18 95       	reti

00000958 <__vector_29>:
     958:	1f 92       	push	r1
     95a:	0f 92       	push	r0
     95c:	0f b6       	in	r0, 0x3f	; 63
     95e:	0f 92       	push	r0
     960:	11 24       	eor	r1, r1
     962:	2f 93       	push	r18
     964:	3f 93       	push	r19
     966:	4f 93       	push	r20
     968:	5f 93       	push	r21
     96a:	6f 93       	push	r22
     96c:	7f 93       	push	r23
     96e:	8f 93       	push	r24
     970:	9f 93       	push	r25
     972:	af 93       	push	r26
     974:	bf 93       	push	r27
     976:	ef 93       	push	r30
     978:	ff 93       	push	r31
     97a:	82 e4       	ldi	r24, 0x42	; 66
     97c:	91 e0       	ldi	r25, 0x01	; 1
     97e:	0e 94 66 01 	call	0x2cc	; 0x2cc <fifo_pop>
     982:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f80ce>
     986:	82 e4       	ldi	r24, 0x42	; 66
     988:	91 e0       	ldi	r25, 0x01	; 1
     98a:	0e 94 8c 01 	call	0x318	; 0x318 <fifo_is_empty>
     98e:	88 23       	and	r24, r24
     990:	19 f0       	breq	.+6      	; 0x998 <__vector_29+0x40>
     992:	81 e0       	ldi	r24, 0x01	; 1
     994:	0e 94 20 04 	call	0x840	; 0x840 <disable_UDRE_interupt>
     998:	ff 91       	pop	r31
     99a:	ef 91       	pop	r30
     99c:	bf 91       	pop	r27
     99e:	af 91       	pop	r26
     9a0:	9f 91       	pop	r25
     9a2:	8f 91       	pop	r24
     9a4:	7f 91       	pop	r23
     9a6:	6f 91       	pop	r22
     9a8:	5f 91       	pop	r21
     9aa:	4f 91       	pop	r20
     9ac:	3f 91       	pop	r19
     9ae:	2f 91       	pop	r18
     9b0:	0f 90       	pop	r0
     9b2:	0f be       	out	0x3f, r0	; 63
     9b4:	0f 90       	pop	r0
     9b6:	1f 90       	pop	r1
     9b8:	18 95       	reti

000009ba <__vector_28>:
     9ba:	1f 92       	push	r1
     9bc:	0f 92       	push	r0
     9be:	0f b6       	in	r0, 0x3f	; 63
     9c0:	0f 92       	push	r0
     9c2:	11 24       	eor	r1, r1
     9c4:	2f 93       	push	r18
     9c6:	3f 93       	push	r19
     9c8:	4f 93       	push	r20
     9ca:	5f 93       	push	r21
     9cc:	6f 93       	push	r22
     9ce:	7f 93       	push	r23
     9d0:	8f 93       	push	r24
     9d2:	9f 93       	push	r25
     9d4:	af 93       	push	r26
     9d6:	bf 93       	push	r27
     9d8:	ef 93       	push	r30
     9da:	ff 93       	push	r31
     9dc:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f80ce>
     9e0:	8a e4       	ldi	r24, 0x4A	; 74
     9e2:	91 e0       	ldi	r25, 0x01	; 1
     9e4:	0e 94 42 01 	call	0x284	; 0x284 <fifo_push>
     9e8:	ff 91       	pop	r31
     9ea:	ef 91       	pop	r30
     9ec:	bf 91       	pop	r27
     9ee:	af 91       	pop	r26
     9f0:	9f 91       	pop	r25
     9f2:	8f 91       	pop	r24
     9f4:	7f 91       	pop	r23
     9f6:	6f 91       	pop	r22
     9f8:	5f 91       	pop	r21
     9fa:	4f 91       	pop	r20
     9fc:	3f 91       	pop	r19
     9fe:	2f 91       	pop	r18
     a00:	0f 90       	pop	r0
     a02:	0f be       	out	0x3f, r0	; 63
     a04:	0f 90       	pop	r0
     a06:	1f 90       	pop	r1
     a08:	18 95       	reti

00000a0a <uart_set_baudrate>:
     a0a:	88 23       	and	r24, r24
     a0c:	19 f0       	breq	.+6      	; 0xa14 <uart_set_baudrate+0xa>
     a0e:	81 30       	cpi	r24, 0x01	; 1
     a10:	71 f0       	breq	.+28     	; 0xa2e <uart_set_baudrate+0x24>
     a12:	08 95       	ret
     a14:	e6 2f       	mov	r30, r22
     a16:	f0 e0       	ldi	r31, 0x00	; 0
     a18:	ee 0f       	add	r30, r30
     a1a:	ff 1f       	adc	r31, r31
     a1c:	e8 5d       	subi	r30, 0xD8	; 216
     a1e:	fe 4f       	sbci	r31, 0xFE	; 254
     a20:	80 81       	ld	r24, Z
     a22:	91 81       	ldd	r25, Z+1	; 0x01
     a24:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     a28:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     a2c:	08 95       	ret
     a2e:	e6 2f       	mov	r30, r22
     a30:	f0 e0       	ldi	r31, 0x00	; 0
     a32:	ee 0f       	add	r30, r30
     a34:	ff 1f       	adc	r31, r31
     a36:	e8 5d       	subi	r30, 0xD8	; 216
     a38:	fe 4f       	sbci	r31, 0xFE	; 254
     a3a:	80 81       	ld	r24, Z
     a3c:	91 81       	ldd	r25, Z+1	; 0x01
     a3e:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7f80cd>
     a42:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7f80cc>
     a46:	08 95       	ret

00000a48 <uart_init>:
     a48:	cf 93       	push	r28
     a4a:	c8 2f       	mov	r28, r24
     a4c:	88 23       	and	r24, r24
     a4e:	19 f0       	breq	.+6      	; 0xa56 <uart_init+0xe>
     a50:	81 30       	cpi	r24, 0x01	; 1
     a52:	c1 f0       	breq	.+48     	; 0xa84 <uart_init+0x3c>
     a54:	2d c0       	rjmp	.+90     	; 0xab0 <uart_init+0x68>
     a56:	86 e0       	ldi	r24, 0x06	; 6
     a58:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     a5c:	88 e9       	ldi	r24, 0x98	; 152
     a5e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     a62:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     a66:	46 e9       	ldi	r20, 0x96	; 150
     a68:	68 e1       	ldi	r22, 0x18	; 24
     a6a:	72 e0       	ldi	r23, 0x02	; 2
     a6c:	8a e5       	ldi	r24, 0x5A	; 90
     a6e:	91 e0       	ldi	r25, 0x01	; 1
     a70:	0e 94 37 01 	call	0x26e	; 0x26e <fifo_init>
     a74:	46 e9       	ldi	r20, 0x96	; 150
     a76:	62 e8       	ldi	r22, 0x82	; 130
     a78:	71 e0       	ldi	r23, 0x01	; 1
     a7a:	82 e5       	ldi	r24, 0x52	; 82
     a7c:	91 e0       	ldi	r25, 0x01	; 1
     a7e:	0e 94 37 01 	call	0x26e	; 0x26e <fifo_init>
     a82:	16 c0       	rjmp	.+44     	; 0xab0 <uart_init+0x68>
     a84:	86 e0       	ldi	r24, 0x06	; 6
     a86:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7f80ca>
     a8a:	88 e9       	ldi	r24, 0x98	; 152
     a8c:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7f80c9>
     a90:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7f80c8>
     a94:	40 e1       	ldi	r20, 0x10	; 16
     a96:	62 e7       	ldi	r22, 0x72	; 114
     a98:	71 e0       	ldi	r23, 0x01	; 1
     a9a:	8a e4       	ldi	r24, 0x4A	; 74
     a9c:	91 e0       	ldi	r25, 0x01	; 1
     a9e:	0e 94 37 01 	call	0x26e	; 0x26e <fifo_init>
     aa2:	40 e1       	ldi	r20, 0x10	; 16
     aa4:	62 e6       	ldi	r22, 0x62	; 98
     aa6:	71 e0       	ldi	r23, 0x01	; 1
     aa8:	82 e4       	ldi	r24, 0x42	; 66
     aaa:	91 e0       	ldi	r25, 0x01	; 1
     aac:	0e 94 37 01 	call	0x26e	; 0x26e <fifo_init>
     ab0:	62 e0       	ldi	r22, 0x02	; 2
     ab2:	8c 2f       	mov	r24, r28
     ab4:	0e 94 05 05 	call	0xa0a	; 0xa0a <uart_set_baudrate>
     ab8:	cf 91       	pop	r28
     aba:	08 95       	ret

00000abc <uart_get_byte>:
     abc:	cf 93       	push	r28
     abe:	df 93       	push	r29
     ac0:	c8 2f       	mov	r28, r24
     ac2:	0e 94 42 04 	call	0x884	; 0x884 <disable_RX_interupt>
     ac6:	ec 2f       	mov	r30, r28
     ac8:	f0 e0       	ldi	r31, 0x00	; 0
     aca:	ee 0f       	add	r30, r30
     acc:	ff 1f       	adc	r31, r31
     ace:	ec 5d       	subi	r30, 0xDC	; 220
     ad0:	fe 4f       	sbci	r31, 0xFE	; 254
     ad2:	80 81       	ld	r24, Z
     ad4:	91 81       	ldd	r25, Z+1	; 0x01
     ad6:	0e 94 66 01 	call	0x2cc	; 0x2cc <fifo_pop>
     ada:	d8 2f       	mov	r29, r24
     adc:	8c 2f       	mov	r24, r28
     ade:	0e 94 31 04 	call	0x862	; 0x862 <enable_RX_interupt>
     ae2:	8d 2f       	mov	r24, r29
     ae4:	df 91       	pop	r29
     ae6:	cf 91       	pop	r28
     ae8:	08 95       	ret

00000aea <uart_is_rx_buffer_empty>:
}

/*** is_rx_buffer_empty ***/
bool uart_is_rx_buffer_empty(uart_e port){

    return fifo_is_empty(rx_fifo_list[port]);
     aea:	e8 2f       	mov	r30, r24
     aec:	f0 e0       	ldi	r31, 0x00	; 0
     aee:	ee 0f       	add	r30, r30
     af0:	ff 1f       	adc	r31, r31
     af2:	ec 5d       	subi	r30, 0xDC	; 220
     af4:	fe 4f       	sbci	r31, 0xFE	; 254
     af6:	80 81       	ld	r24, Z
     af8:	91 81       	ldd	r25, Z+1	; 0x01
     afa:	0e 94 8c 01 	call	0x318	; 0x318 <fifo_is_empty>
}
     afe:	08 95       	ret

00000b00 <uart_get_string>:

    return byte;
}


void uart_get_string(uart_e port, char* out_buffer, uint8_t buffer_length){
     b00:	df 92       	push	r13
     b02:	ef 92       	push	r14
     b04:	ff 92       	push	r15
     b06:	0f 93       	push	r16
     b08:	1f 93       	push	r17
     b0a:	cf 93       	push	r28
     b0c:	df 93       	push	r29
     b0e:	d8 2f       	mov	r29, r24
     b10:	8b 01       	movw	r16, r22
     b12:	d4 2e       	mov	r13, r20

	uint8_t index = 0;
     b14:	c0 e0       	ldi	r28, 0x00	; 0

	while(uart_is_rx_buffer_empty(port) == FALSE){
     b16:	11 c0       	rjmp	.+34     	; 0xb3a <uart_get_string+0x3a>

		out_buffer[index] = uart_get_byte(port);
     b18:	78 01       	movw	r14, r16
     b1a:	ec 0e       	add	r14, r28
     b1c:	f1 1c       	adc	r15, r1
     b1e:	8d 2f       	mov	r24, r29
     b20:	0e 94 5e 05 	call	0xabc	; 0xabc <uart_get_byte>
     b24:	f7 01       	movw	r30, r14
     b26:	80 83       	st	Z, r24
		index++;
     b28:	cf 5f       	subi	r28, 0xFF	; 255

		// Si il ne reste de la place que pour le \0
		if(index >= buffer_length - 1){
     b2a:	2c 2f       	mov	r18, r28
     b2c:	30 e0       	ldi	r19, 0x00	; 0
     b2e:	8d 2d       	mov	r24, r13
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	01 97       	sbiw	r24, 0x01	; 1
     b34:	28 17       	cp	r18, r24
     b36:	39 07       	cpc	r19, r25
     b38:	2c f4       	brge	.+10     	; 0xb44 <uart_get_string+0x44>

void uart_get_string(uart_e port, char* out_buffer, uint8_t buffer_length){

	uint8_t index = 0;

	while(uart_is_rx_buffer_empty(port) == FALSE){
     b3a:	8d 2f       	mov	r24, r29
     b3c:	0e 94 75 05 	call	0xaea	; 0xaea <uart_is_rx_buffer_empty>
     b40:	88 23       	and	r24, r24
     b42:	51 f3       	breq	.-44     	; 0xb18 <uart_get_string+0x18>
		}
	}


	// Très temporaire pour déboguer
	if(index == 0){
     b44:	c1 11       	cpse	r28, r1
     b46:	05 c0       	rjmp	.+10     	; 0xb52 <uart_get_string+0x52>

		string_copy(out_buffer, "-vide-");
     b48:	6d e1       	ldi	r22, 0x1D	; 29
     b4a:	71 e0       	ldi	r23, 0x01	; 1
     b4c:	c8 01       	movw	r24, r16
     b4e:	0e 94 b5 05 	call	0xb6a	; 0xb6a <string_copy>
	}

	// On ferme la string
	out_buffer[index] = '\0';
     b52:	f8 01       	movw	r30, r16
     b54:	ec 0f       	add	r30, r28
     b56:	f1 1d       	adc	r31, r1
     b58:	10 82       	st	Z, r1
}
     b5a:	df 91       	pop	r29
     b5c:	cf 91       	pop	r28
     b5e:	1f 91       	pop	r17
     b60:	0f 91       	pop	r16
     b62:	ff 90       	pop	r15
     b64:	ef 90       	pop	r14
     b66:	df 90       	pop	r13
     b68:	08 95       	ret

00000b6a <string_copy>:
    }

    return length;
}

uint8_t string_copy(char* out_string, const char* in_string){
     b6a:	dc 01       	movw	r26, r24
	
	uint8_t i = 0;
     b6c:	80 e0       	ldi	r24, 0x00	; 0
	
	while(in_string[i] != '\0'){
     b6e:	05 c0       	rjmp	.+10     	; 0xb7a <string_copy+0x10>
		
		out_string[i] = in_string[i];
     b70:	fd 01       	movw	r30, r26
     b72:	e2 0f       	add	r30, r18
     b74:	f3 1f       	adc	r31, r19
     b76:	40 83       	st	Z, r20
		i++;
     b78:	8f 5f       	subi	r24, 0xFF	; 255

uint8_t string_copy(char* out_string, const char* in_string){
	
	uint8_t i = 0;
	
	while(in_string[i] != '\0'){
     b7a:	28 2f       	mov	r18, r24
     b7c:	30 e0       	ldi	r19, 0x00	; 0
     b7e:	fb 01       	movw	r30, r22
     b80:	e2 0f       	add	r30, r18
     b82:	f3 1f       	adc	r31, r19
     b84:	40 81       	ld	r20, Z
     b86:	41 11       	cpse	r20, r1
     b88:	f3 cf       	rjmp	.-26     	; 0xb70 <string_copy+0x6>
		out_string[i] = in_string[i];
		i++;
	}
	
	// Puisque le while juste avant tchoke au \0, il faut le mettre
	out_string[i] = '\0';
     b8a:	fd 01       	movw	r30, r26
     b8c:	e2 0f       	add	r30, r18
     b8e:	f3 1f       	adc	r31, r19
     b90:	10 82       	st	Z, r1
	
	return i;
}
     b92:	08 95       	ret

00000b94 <setPuissanceMoteurRoue>:
	* Parametre uint8_t sw3 : Bouton sw3 circuit_mannette
	* init servo : 2300 
    * init servo : 
	*/
	
	void driverServoMoteur(uint8_t bouton){
     b94:	cf 93       	push	r28
     b96:	c8 2f       	mov	r28, r24
     b98:	0e 94 cb 00 	call	0x196	; 0x196 <pwm0_set_PB3>
     b9c:	8c 2f       	mov	r24, r28
     b9e:	0e 94 cd 00 	call	0x19a	; 0x19a <pwm0_set_PB4>
     ba2:	cf 91       	pop	r28
     ba4:	08 95       	ret

00000ba6 <setRotation>:
     ba6:	88 3c       	cpi	r24, 0xC8	; 200
     ba8:	50 f0       	brcs	.+20     	; 0xbbe <setRotation+0x18>
     baa:	84 b1       	in	r24, 0x04	; 4
     bac:	89 7f       	andi	r24, 0xF9	; 249
     bae:	84 b9       	out	0x04, r24	; 4
     bb0:	84 b1       	in	r24, 0x04	; 4
     bb2:	84 60       	ori	r24, 0x04	; 4
     bb4:	85 b9       	out	0x05, r24	; 5
     bb6:	86 2f       	mov	r24, r22
     bb8:	0e 94 ca 05 	call	0xb94	; 0xb94 <setPuissanceMoteurRoue>
     bbc:	08 95       	ret
     bbe:	85 36       	cpi	r24, 0x65	; 101
     bc0:	50 f4       	brcc	.+20     	; 0xbd6 <setRotation+0x30>
     bc2:	84 b1       	in	r24, 0x04	; 4
     bc4:	89 7f       	andi	r24, 0xF9	; 249
     bc6:	84 b9       	out	0x04, r24	; 4
     bc8:	84 b1       	in	r24, 0x04	; 4
     bca:	82 60       	ori	r24, 0x02	; 2
     bcc:	85 b9       	out	0x05, r24	; 5
     bce:	86 2f       	mov	r24, r22
     bd0:	0e 94 ca 05 	call	0xb94	; 0xb94 <setPuissanceMoteurRoue>
     bd4:	08 95       	ret
     bd6:	80 e0       	ldi	r24, 0x00	; 0
     bd8:	0e 94 ca 05 	call	0xb94	; 0xb94 <setPuissanceMoteurRoue>
     bdc:	08 95       	ret

00000bde <setPuissance_gauche>:
     bde:	7f 92       	push	r7
     be0:	8f 92       	push	r8
     be2:	9f 92       	push	r9
     be4:	af 92       	push	r10
     be6:	bf 92       	push	r11
     be8:	cf 92       	push	r12
     bea:	df 92       	push	r13
     bec:	ef 92       	push	r14
     bee:	ff 92       	push	r15
     bf0:	0f 93       	push	r16
     bf2:	1f 93       	push	r17
     bf4:	cf 93       	push	r28
     bf6:	df 93       	push	r29
     bf8:	cd b7       	in	r28, 0x3d	; 61
     bfa:	de b7       	in	r29, 0x3e	; 62
     bfc:	a8 97       	sbiw	r28, 0x28	; 40
     bfe:	0f b6       	in	r0, 0x3f	; 63
     c00:	f8 94       	cli
     c02:	de bf       	out	0x3e, r29	; 62
     c04:	0f be       	out	0x3f, r0	; 63
     c06:	cd bf       	out	0x3d, r28	; 61
     c08:	f6 2e       	mov	r15, r22
     c0a:	8e 01       	movw	r16, r28
     c0c:	0f 5f       	subi	r16, 0xFF	; 255
     c0e:	1f 4f       	sbci	r17, 0xFF	; 255
     c10:	98 e2       	ldi	r25, 0x28	; 40
     c12:	f8 01       	movw	r30, r16
     c14:	11 92       	st	Z+, r1
     c16:	9a 95       	dec	r25
     c18:	e9 f7       	brne	.-6      	; 0xc14 <setPuissance_gauche+0x36>
     c1a:	68 2f       	mov	r22, r24
     c1c:	70 e0       	ldi	r23, 0x00	; 0
     c1e:	80 e0       	ldi	r24, 0x00	; 0
     c20:	90 e0       	ldi	r25, 0x00	; 0
     c22:	0e 94 1b 08 	call	0x1036	; 0x1036 <__floatunsisf>
     c26:	24 e3       	ldi	r18, 0x34	; 52
     c28:	30 e8       	ldi	r19, 0x80	; 128
     c2a:	47 eb       	ldi	r20, 0xB7	; 183
     c2c:	5b e3       	ldi	r21, 0x3B	; 59
     c2e:	0e 94 a9 08 	call	0x1152	; 0x1152 <__mulsf3>
     c32:	2d ec       	ldi	r18, 0xCD	; 205
     c34:	3c ec       	ldi	r19, 0xCC	; 204
     c36:	4c e4       	ldi	r20, 0x4C	; 76
     c38:	5e e3       	ldi	r21, 0x3E	; 62
     c3a:	0e 94 79 07 	call	0xef2	; 0xef2 <__addsf3>
     c3e:	4b 01       	movw	r8, r22
     c40:	5c 01       	movw	r10, r24
     c42:	6f 2d       	mov	r22, r15
     c44:	70 e0       	ldi	r23, 0x00	; 0
     c46:	80 e0       	ldi	r24, 0x00	; 0
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	0e 94 1d 08 	call	0x103a	; 0x103a <__floatsisf>
     c4e:	a5 01       	movw	r20, r10
     c50:	94 01       	movw	r18, r8
     c52:	0e 94 a9 08 	call	0x1152	; 0x1152 <__mulsf3>
     c56:	0e 94 e5 07 	call	0xfca	; 0xfca <__fixsfsi>
     c5a:	4b 01       	movw	r8, r22
     c5c:	5c 01       	movw	r10, r24
     c5e:	07 2e       	mov	r0, r23
     c60:	00 0c       	add	r0, r0
     c62:	88 0b       	sbc	r24, r24
     c64:	99 0b       	sbc	r25, r25
     c66:	0e 94 1d 08 	call	0x103a	; 0x103a <__floatsisf>
     c6a:	e6 2e       	mov	r14, r22
     c6c:	d7 2e       	mov	r13, r23
     c6e:	c8 2e       	mov	r12, r24
     c70:	79 2e       	mov	r7, r25
     c72:	88 2d       	mov	r24, r8
     c74:	0e 94 cb 00 	call	0x196	; 0x196 <pwm0_set_PB3>
     c78:	8f 2d       	mov	r24, r15
     c7a:	0e 94 cd 00 	call	0x19a	; 0x19a <pwm0_set_PB4>
     c7e:	7f 92       	push	r7
     c80:	cf 92       	push	r12
     c82:	df 92       	push	r13
     c84:	ef 92       	push	r14
     c86:	8a e3       	ldi	r24, 0x3A	; 58
     c88:	91 e0       	ldi	r25, 0x01	; 1
     c8a:	9f 93       	push	r25
     c8c:	8f 93       	push	r24
     c8e:	1f 93       	push	r17
     c90:	0f 93       	push	r16
     c92:	0e 94 1c 09 	call	0x1238	; 0x1238 <sprintf>
     c96:	61 e0       	ldi	r22, 0x01	; 1
     c98:	8a e0       	ldi	r24, 0x0A	; 10
     c9a:	0e 94 77 02 	call	0x4ee	; 0x4ee <lcd_set_cursor_position>
     c9e:	c8 01       	movw	r24, r16
     ca0:	0e 94 53 03 	call	0x6a6	; 0x6a6 <lcd_write_string>
     ca4:	0f b6       	in	r0, 0x3f	; 63
     ca6:	f8 94       	cli
     ca8:	de bf       	out	0x3e, r29	; 62
     caa:	0f be       	out	0x3f, r0	; 63
     cac:	cd bf       	out	0x3d, r28	; 61
     cae:	a8 96       	adiw	r28, 0x28	; 40
     cb0:	0f b6       	in	r0, 0x3f	; 63
     cb2:	f8 94       	cli
     cb4:	de bf       	out	0x3e, r29	; 62
     cb6:	0f be       	out	0x3f, r0	; 63
     cb8:	cd bf       	out	0x3d, r28	; 61
     cba:	df 91       	pop	r29
     cbc:	cf 91       	pop	r28
     cbe:	1f 91       	pop	r17
     cc0:	0f 91       	pop	r16
     cc2:	ff 90       	pop	r15
     cc4:	ef 90       	pop	r14
     cc6:	df 90       	pop	r13
     cc8:	cf 90       	pop	r12
     cca:	bf 90       	pop	r11
     ccc:	af 90       	pop	r10
     cce:	9f 90       	pop	r9
     cd0:	8f 90       	pop	r8
     cd2:	7f 90       	pop	r7
     cd4:	08 95       	ret

00000cd6 <setPuissance_droite>:
     cd6:	7f 92       	push	r7
     cd8:	8f 92       	push	r8
     cda:	9f 92       	push	r9
     cdc:	af 92       	push	r10
     cde:	bf 92       	push	r11
     ce0:	cf 92       	push	r12
     ce2:	df 92       	push	r13
     ce4:	ef 92       	push	r14
     ce6:	ff 92       	push	r15
     ce8:	0f 93       	push	r16
     cea:	1f 93       	push	r17
     cec:	cf 93       	push	r28
     cee:	df 93       	push	r29
     cf0:	cd b7       	in	r28, 0x3d	; 61
     cf2:	de b7       	in	r29, 0x3e	; 62
     cf4:	a8 97       	sbiw	r28, 0x28	; 40
     cf6:	0f b6       	in	r0, 0x3f	; 63
     cf8:	f8 94       	cli
     cfa:	de bf       	out	0x3e, r29	; 62
     cfc:	0f be       	out	0x3f, r0	; 63
     cfe:	cd bf       	out	0x3d, r28	; 61
     d00:	b6 2e       	mov	r11, r22
     d02:	8e 01       	movw	r16, r28
     d04:	0f 5f       	subi	r16, 0xFF	; 255
     d06:	1f 4f       	sbci	r17, 0xFF	; 255
     d08:	98 e2       	ldi	r25, 0x28	; 40
     d0a:	f8 01       	movw	r30, r16
     d0c:	11 92       	st	Z+, r1
     d0e:	9a 95       	dec	r25
     d10:	e9 f7       	brne	.-6      	; 0xd0c <setPuissance_droite+0x36>
     d12:	68 2f       	mov	r22, r24
     d14:	70 e0       	ldi	r23, 0x00	; 0
     d16:	80 e0       	ldi	r24, 0x00	; 0
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	0e 94 1b 08 	call	0x1036	; 0x1036 <__floatunsisf>
     d1e:	24 e3       	ldi	r18, 0x34	; 52
     d20:	30 e8       	ldi	r19, 0x80	; 128
     d22:	47 eb       	ldi	r20, 0xB7	; 183
     d24:	5b eb       	ldi	r21, 0xBB	; 187
     d26:	0e 94 a9 08 	call	0x1152	; 0x1152 <__mulsf3>
     d2a:	2b e1       	ldi	r18, 0x1B	; 27
     d2c:	3f e2       	ldi	r19, 0x2F	; 47
     d2e:	4d ed       	ldi	r20, 0xDD	; 221
     d30:	5f e3       	ldi	r21, 0x3F	; 63
     d32:	0e 94 79 07 	call	0xef2	; 0xef2 <__addsf3>
     d36:	6b 01       	movw	r12, r22
     d38:	7c 01       	movw	r14, r24
     d3a:	6b 2d       	mov	r22, r11
     d3c:	70 e0       	ldi	r23, 0x00	; 0
     d3e:	80 e0       	ldi	r24, 0x00	; 0
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	0e 94 1d 08 	call	0x103a	; 0x103a <__floatsisf>
     d46:	a7 01       	movw	r20, r14
     d48:	96 01       	movw	r18, r12
     d4a:	0e 94 a9 08 	call	0x1152	; 0x1152 <__mulsf3>
     d4e:	0e 94 e5 07 	call	0xfca	; 0xfca <__fixsfsi>
     d52:	6b 01       	movw	r12, r22
     d54:	7c 01       	movw	r14, r24
     d56:	07 2e       	mov	r0, r23
     d58:	00 0c       	add	r0, r0
     d5a:	88 0b       	sbc	r24, r24
     d5c:	99 0b       	sbc	r25, r25
     d5e:	0e 94 1d 08 	call	0x103a	; 0x103a <__floatsisf>
     d62:	a6 2e       	mov	r10, r22
     d64:	97 2e       	mov	r9, r23
     d66:	88 2e       	mov	r8, r24
     d68:	79 2e       	mov	r7, r25
     d6a:	8b 2d       	mov	r24, r11
     d6c:	0e 94 cb 00 	call	0x196	; 0x196 <pwm0_set_PB3>
     d70:	8c 2d       	mov	r24, r12
     d72:	0e 94 cd 00 	call	0x19a	; 0x19a <pwm0_set_PB4>
     d76:	7f 92       	push	r7
     d78:	8f 92       	push	r8
     d7a:	9f 92       	push	r9
     d7c:	af 92       	push	r10
     d7e:	8a e3       	ldi	r24, 0x3A	; 58
     d80:	91 e0       	ldi	r25, 0x01	; 1
     d82:	9f 93       	push	r25
     d84:	8f 93       	push	r24
     d86:	1f 93       	push	r17
     d88:	0f 93       	push	r16
     d8a:	0e 94 1c 09 	call	0x1238	; 0x1238 <sprintf>
     d8e:	61 e0       	ldi	r22, 0x01	; 1
     d90:	8a e0       	ldi	r24, 0x0A	; 10
     d92:	0e 94 77 02 	call	0x4ee	; 0x4ee <lcd_set_cursor_position>
     d96:	c8 01       	movw	r24, r16
     d98:	0e 94 53 03 	call	0x6a6	; 0x6a6 <lcd_write_string>
     d9c:	0f b6       	in	r0, 0x3f	; 63
     d9e:	f8 94       	cli
     da0:	de bf       	out	0x3e, r29	; 62
     da2:	0f be       	out	0x3f, r0	; 63
     da4:	cd bf       	out	0x3d, r28	; 61
     da6:	a8 96       	adiw	r28, 0x28	; 40
     da8:	0f b6       	in	r0, 0x3f	; 63
     daa:	f8 94       	cli
     dac:	de bf       	out	0x3e, r29	; 62
     dae:	0f be       	out	0x3f, r0	; 63
     db0:	cd bf       	out	0x3d, r28	; 61
     db2:	df 91       	pop	r29
     db4:	cf 91       	pop	r28
     db6:	1f 91       	pop	r17
     db8:	0f 91       	pop	r16
     dba:	ff 90       	pop	r15
     dbc:	ef 90       	pop	r14
     dbe:	df 90       	pop	r13
     dc0:	cf 90       	pop	r12
     dc2:	bf 90       	pop	r11
     dc4:	af 90       	pop	r10
     dc6:	9f 90       	pop	r9
     dc8:	8f 90       	pop	r8
     dca:	7f 90       	pop	r7
     dcc:	08 95       	ret

00000dce <setPuissance_tourner>:
     dce:	8e 37       	cpi	r24, 0x7E	; 126
     dd0:	18 f4       	brcc	.+6      	; 0xdd8 <setPuissance_tourner+0xa>
     dd2:	0e 94 ef 05 	call	0xbde	; 0xbde <setPuissance_gauche>
     dd6:	08 95       	ret
     dd8:	82 38       	cpi	r24, 0x82	; 130
     dda:	18 f0       	brcs	.+6      	; 0xde2 <setPuissance_tourner+0x14>
     ddc:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <setPuissance_droite>
     de0:	08 95       	ret
     de2:	86 2f       	mov	r24, r22
     de4:	0e 94 ca 05 	call	0xb94	; 0xb94 <setPuissanceMoteurRoue>
     de8:	08 95       	ret

00000dea <setDeplacement>:
     dea:	96 2f       	mov	r25, r22
     dec:	81 30       	cpi	r24, 0x01	; 1
     dee:	41 f4       	brne	.+16     	; 0xe00 <setDeplacement+0x16>
     df0:	84 b1       	in	r24, 0x04	; 4
     df2:	89 7f       	andi	r24, 0xF9	; 249
     df4:	85 b9       	out	0x05, r24	; 5
     df6:	64 2f       	mov	r22, r20
     df8:	89 2f       	mov	r24, r25
     dfa:	0e 94 e7 06 	call	0xdce	; 0xdce <setPuissance_tourner>
     dfe:	08 95       	ret
     e00:	81 11       	cpse	r24, r1
     e02:	08 c0       	rjmp	.+16     	; 0xe14 <setDeplacement+0x2a>
     e04:	84 b1       	in	r24, 0x04	; 4
     e06:	86 60       	ori	r24, 0x06	; 6
     e08:	85 b9       	out	0x05, r24	; 5
     e0a:	64 2f       	mov	r22, r20
     e0c:	89 2f       	mov	r24, r25
     e0e:	0e 94 e7 06 	call	0xdce	; 0xdce <setPuissance_tourner>
     e12:	08 95       	ret
     e14:	80 e0       	ldi	r24, 0x00	; 0
     e16:	0e 94 ca 05 	call	0xb94	; 0xb94 <setPuissanceMoteurRoue>
     e1a:	08 95       	ret

00000e1c <display_heartbeat>:
     e1c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e20:	8a 35       	cpi	r24, 0x5A	; 90
     e22:	11 f0       	breq	.+4      	; 0xe28 <display_heartbeat+0xc>
     e24:	8f 5f       	subi	r24, 0xFF	; 255
     e26:	01 c0       	rjmp	.+2      	; 0xe2a <display_heartbeat+0xe>
     e28:	81 e4       	ldi	r24, 0x41	; 65
     e2a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     e2e:	61 e0       	ldi	r22, 0x01	; 1
     e30:	8f e0       	ldi	r24, 0x0F	; 15
     e32:	0e 94 77 02 	call	0x4ee	; 0x4ee <lcd_set_cursor_position>
     e36:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e3a:	0e 94 22 03 	call	0x644	; 0x644 <lcd_write_char>
     e3e:	08 95       	ret

00000e40 <driverMoteurElevation>:
     e40:	cf 93       	push	r28
     e42:	c8 2f       	mov	r28, r24
     e44:	61 e0       	ldi	r22, 0x01	; 1
     e46:	88 e0       	ldi	r24, 0x08	; 8
     e48:	0e 94 77 02 	call	0x4ee	; 0x4ee <lcd_set_cursor_position>
     e4c:	cf 3f       	cpi	r28, 0xFF	; 255
     e4e:	39 f4       	brne	.+14     	; 0xe5e <driverMoteurElevation+0x1e>
     e50:	85 b1       	in	r24, 0x05	; 5
     e52:	8e 7f       	andi	r24, 0xFE	; 254
     e54:	85 b9       	out	0x05, r24	; 5
     e56:	8f ef       	ldi	r24, 0xFF	; 255
     e58:	0e 94 34 01 	call	0x268	; 0x268 <pwm2_set_PD6>
     e5c:	0c c0       	rjmp	.+24     	; 0xe76 <driverMoteurElevation+0x36>
     e5e:	c1 11       	cpse	r28, r1
     e60:	07 c0       	rjmp	.+14     	; 0xe70 <driverMoteurElevation+0x30>
     e62:	85 b1       	in	r24, 0x05	; 5
     e64:	81 60       	ori	r24, 0x01	; 1
     e66:	85 b9       	out	0x05, r24	; 5
     e68:	8f ef       	ldi	r24, 0xFF	; 255
     e6a:	0e 94 34 01 	call	0x268	; 0x268 <pwm2_set_PD6>
     e6e:	03 c0       	rjmp	.+6      	; 0xe76 <driverMoteurElevation+0x36>
     e70:	80 e0       	ldi	r24, 0x00	; 0
     e72:	0e 94 34 01 	call	0x268	; 0x268 <pwm2_set_PD6>
     e76:	cf 91       	pop	r28
     e78:	08 95       	ret

00000e7a <driverMoteurRoueInertie>:
	* Parametre : Bonton switch 2
	*
	*/
	void driverMoteurRoueInertie(uint8_t bouton){

		if (bouton){
     e7a:	88 23       	and	r24, r24
     e7c:	19 f1       	breq	.+70     	; 0xec4 <driverMoteurRoueInertie+0x4a>
			if(clock2 < DELAIS_DEPART_ROUE_INERTIE){
     e7e:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <clock2>
     e82:	90 91 b1 02 	lds	r25, 0x02B1	; 0x8002b1 <clock2+0x1>
     e86:	84 31       	cpi	r24, 0x14	; 20
     e88:	91 05       	cpc	r25, r1
     e8a:	68 f4       	brcc	.+26     	; 0xea6 <driverMoteurRoueInertie+0x2c>
			pwm2_set_PD7(PUISSANCE_MAX);
     e8c:	8f ef       	ldi	r24, 0xFF	; 255
     e8e:	0e 94 31 01 	call	0x262	; 0x262 <pwm2_set_PD7>
			clock2++;
     e92:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <clock2>
     e96:	90 91 b1 02 	lds	r25, 0x02B1	; 0x8002b1 <clock2+0x1>
     e9a:	01 96       	adiw	r24, 0x01	; 1
     e9c:	90 93 b1 02 	sts	0x02B1, r25	; 0x8002b1 <clock2+0x1>
     ea0:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <clock2>
     ea4:	08 95       	ret
			}
			else if(clock2 >= DELAIS_DEPART_ROUE_INERTIE){
     ea6:	44 97       	sbiw	r24, 0x14	; 20
     ea8:	c0 f0       	brcs	.+48     	; 0xeda <driverMoteurRoueInertie+0x60>
			pwm2_set_PD7(PUISSANCE_MOTEUR_ROUE_INERTIE);
     eaa:	88 ec       	ldi	r24, 0xC8	; 200
     eac:	0e 94 31 01 	call	0x262	; 0x262 <pwm2_set_PD7>
			clock++;
     eb0:	80 91 ae 02 	lds	r24, 0x02AE	; 0x8002ae <clock>
     eb4:	90 91 af 02 	lds	r25, 0x02AF	; 0x8002af <clock+0x1>
     eb8:	01 96       	adiw	r24, 0x01	; 1
     eba:	90 93 af 02 	sts	0x02AF, r25	; 0x8002af <clock+0x1>
     ebe:	80 93 ae 02 	sts	0x02AE, r24	; 0x8002ae <clock>
     ec2:	08 95       	ret
			}
		}
		else {
			pwm2_set_PD7(0);
     ec4:	80 e0       	ldi	r24, 0x00	; 0
     ec6:	0e 94 31 01 	call	0x262	; 0x262 <pwm2_set_PD7>
			clock = RESET_CLOCK;
     eca:	10 92 af 02 	sts	0x02AF, r1	; 0x8002af <clock+0x1>
     ece:	10 92 ae 02 	sts	0x02AE, r1	; 0x8002ae <clock>
			clock2 = RESET_CLOCK;
     ed2:	10 92 b1 02 	sts	0x02B1, r1	; 0x8002b1 <clock2+0x1>
     ed6:	10 92 b0 02 	sts	0x02B0, r1	; 0x8002b0 <clock2>
     eda:	08 95       	ret

00000edc <driverLanceur>:
	*Parametre uint8_t sw2 : Bouton sw2 circuit_mannette
	*Parametre uint8_t sw3 : Bouton sw3 circuit_mannette
	*Parametre uint8_t y   : Joystick y cicuit_mannette
	*
	*/
	void driverLanceur(uint8_t sw2,uint8_t sw3, uint8_t y){
     edc:	cf 93       	push	r28
     ede:	c8 2f       	mov	r28, r24
     ee0:	84 2f       	mov	r24, r20

		driverMoteurElevation(y);
     ee2:	0e 94 20 07 	call	0xe40	; 0xe40 <driverMoteurElevation>
		driverServoMoteur(sw3);
		driverMoteurRoueInertie(sw2);
     ee6:	8c 2f       	mov	r24, r28
     ee8:	0e 94 3d 07 	call	0xe7a	; 0xe7a <driverMoteurRoueInertie>
     eec:	cf 91       	pop	r28
     eee:	08 95       	ret

00000ef0 <__subsf3>:
     ef0:	50 58       	subi	r21, 0x80	; 128

00000ef2 <__addsf3>:
     ef2:	bb 27       	eor	r27, r27
     ef4:	aa 27       	eor	r26, r26
     ef6:	0e 94 90 07 	call	0xf20	; 0xf20 <__addsf3x>
     efa:	0c 94 6f 08 	jmp	0x10de	; 0x10de <__fp_round>
     efe:	0e 94 61 08 	call	0x10c2	; 0x10c2 <__fp_pscA>
     f02:	38 f0       	brcs	.+14     	; 0xf12 <__addsf3+0x20>
     f04:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fp_pscB>
     f08:	20 f0       	brcs	.+8      	; 0xf12 <__addsf3+0x20>
     f0a:	39 f4       	brne	.+14     	; 0xf1a <__addsf3+0x28>
     f0c:	9f 3f       	cpi	r25, 0xFF	; 255
     f0e:	19 f4       	brne	.+6      	; 0xf16 <__addsf3+0x24>
     f10:	26 f4       	brtc	.+8      	; 0xf1a <__addsf3+0x28>
     f12:	0c 94 5e 08 	jmp	0x10bc	; 0x10bc <__fp_nan>
     f16:	0e f4       	brtc	.+2      	; 0xf1a <__addsf3+0x28>
     f18:	e0 95       	com	r30
     f1a:	e7 fb       	bst	r30, 7
     f1c:	0c 94 58 08 	jmp	0x10b0	; 0x10b0 <__fp_inf>

00000f20 <__addsf3x>:
     f20:	e9 2f       	mov	r30, r25
     f22:	0e 94 80 08 	call	0x1100	; 0x1100 <__fp_split3>
     f26:	58 f3       	brcs	.-42     	; 0xefe <__addsf3+0xc>
     f28:	ba 17       	cp	r27, r26
     f2a:	62 07       	cpc	r22, r18
     f2c:	73 07       	cpc	r23, r19
     f2e:	84 07       	cpc	r24, r20
     f30:	95 07       	cpc	r25, r21
     f32:	20 f0       	brcs	.+8      	; 0xf3c <__addsf3x+0x1c>
     f34:	79 f4       	brne	.+30     	; 0xf54 <__addsf3x+0x34>
     f36:	a6 f5       	brtc	.+104    	; 0xfa0 <__addsf3x+0x80>
     f38:	0c 94 a2 08 	jmp	0x1144	; 0x1144 <__fp_zero>
     f3c:	0e f4       	brtc	.+2      	; 0xf40 <__addsf3x+0x20>
     f3e:	e0 95       	com	r30
     f40:	0b 2e       	mov	r0, r27
     f42:	ba 2f       	mov	r27, r26
     f44:	a0 2d       	mov	r26, r0
     f46:	0b 01       	movw	r0, r22
     f48:	b9 01       	movw	r22, r18
     f4a:	90 01       	movw	r18, r0
     f4c:	0c 01       	movw	r0, r24
     f4e:	ca 01       	movw	r24, r20
     f50:	a0 01       	movw	r20, r0
     f52:	11 24       	eor	r1, r1
     f54:	ff 27       	eor	r31, r31
     f56:	59 1b       	sub	r21, r25
     f58:	99 f0       	breq	.+38     	; 0xf80 <__addsf3x+0x60>
     f5a:	59 3f       	cpi	r21, 0xF9	; 249
     f5c:	50 f4       	brcc	.+20     	; 0xf72 <__addsf3x+0x52>
     f5e:	50 3e       	cpi	r21, 0xE0	; 224
     f60:	68 f1       	brcs	.+90     	; 0xfbc <__addsf3x+0x9c>
     f62:	1a 16       	cp	r1, r26
     f64:	f0 40       	sbci	r31, 0x00	; 0
     f66:	a2 2f       	mov	r26, r18
     f68:	23 2f       	mov	r18, r19
     f6a:	34 2f       	mov	r19, r20
     f6c:	44 27       	eor	r20, r20
     f6e:	58 5f       	subi	r21, 0xF8	; 248
     f70:	f3 cf       	rjmp	.-26     	; 0xf58 <__addsf3x+0x38>
     f72:	46 95       	lsr	r20
     f74:	37 95       	ror	r19
     f76:	27 95       	ror	r18
     f78:	a7 95       	ror	r26
     f7a:	f0 40       	sbci	r31, 0x00	; 0
     f7c:	53 95       	inc	r21
     f7e:	c9 f7       	brne	.-14     	; 0xf72 <__addsf3x+0x52>
     f80:	7e f4       	brtc	.+30     	; 0xfa0 <__addsf3x+0x80>
     f82:	1f 16       	cp	r1, r31
     f84:	ba 0b       	sbc	r27, r26
     f86:	62 0b       	sbc	r22, r18
     f88:	73 0b       	sbc	r23, r19
     f8a:	84 0b       	sbc	r24, r20
     f8c:	ba f0       	brmi	.+46     	; 0xfbc <__addsf3x+0x9c>
     f8e:	91 50       	subi	r25, 0x01	; 1
     f90:	a1 f0       	breq	.+40     	; 0xfba <__addsf3x+0x9a>
     f92:	ff 0f       	add	r31, r31
     f94:	bb 1f       	adc	r27, r27
     f96:	66 1f       	adc	r22, r22
     f98:	77 1f       	adc	r23, r23
     f9a:	88 1f       	adc	r24, r24
     f9c:	c2 f7       	brpl	.-16     	; 0xf8e <__addsf3x+0x6e>
     f9e:	0e c0       	rjmp	.+28     	; 0xfbc <__addsf3x+0x9c>
     fa0:	ba 0f       	add	r27, r26
     fa2:	62 1f       	adc	r22, r18
     fa4:	73 1f       	adc	r23, r19
     fa6:	84 1f       	adc	r24, r20
     fa8:	48 f4       	brcc	.+18     	; 0xfbc <__addsf3x+0x9c>
     faa:	87 95       	ror	r24
     fac:	77 95       	ror	r23
     fae:	67 95       	ror	r22
     fb0:	b7 95       	ror	r27
     fb2:	f7 95       	ror	r31
     fb4:	9e 3f       	cpi	r25, 0xFE	; 254
     fb6:	08 f0       	brcs	.+2      	; 0xfba <__addsf3x+0x9a>
     fb8:	b0 cf       	rjmp	.-160    	; 0xf1a <__addsf3+0x28>
     fba:	93 95       	inc	r25
     fbc:	88 0f       	add	r24, r24
     fbe:	08 f0       	brcs	.+2      	; 0xfc2 <__addsf3x+0xa2>
     fc0:	99 27       	eor	r25, r25
     fc2:	ee 0f       	add	r30, r30
     fc4:	97 95       	ror	r25
     fc6:	87 95       	ror	r24
     fc8:	08 95       	ret

00000fca <__fixsfsi>:
     fca:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <__fixunssfsi>
     fce:	68 94       	set
     fd0:	b1 11       	cpse	r27, r1
     fd2:	0c 94 a3 08 	jmp	0x1146	; 0x1146 <__fp_szero>
     fd6:	08 95       	ret

00000fd8 <__fixunssfsi>:
     fd8:	0e 94 88 08 	call	0x1110	; 0x1110 <__fp_splitA>
     fdc:	88 f0       	brcs	.+34     	; 0x1000 <__fixunssfsi+0x28>
     fde:	9f 57       	subi	r25, 0x7F	; 127
     fe0:	98 f0       	brcs	.+38     	; 0x1008 <__fixunssfsi+0x30>
     fe2:	b9 2f       	mov	r27, r25
     fe4:	99 27       	eor	r25, r25
     fe6:	b7 51       	subi	r27, 0x17	; 23
     fe8:	b0 f0       	brcs	.+44     	; 0x1016 <__fixunssfsi+0x3e>
     fea:	e1 f0       	breq	.+56     	; 0x1024 <__fixunssfsi+0x4c>
     fec:	66 0f       	add	r22, r22
     fee:	77 1f       	adc	r23, r23
     ff0:	88 1f       	adc	r24, r24
     ff2:	99 1f       	adc	r25, r25
     ff4:	1a f0       	brmi	.+6      	; 0xffc <__fixunssfsi+0x24>
     ff6:	ba 95       	dec	r27
     ff8:	c9 f7       	brne	.-14     	; 0xfec <__fixunssfsi+0x14>
     ffa:	14 c0       	rjmp	.+40     	; 0x1024 <__fixunssfsi+0x4c>
     ffc:	b1 30       	cpi	r27, 0x01	; 1
     ffe:	91 f0       	breq	.+36     	; 0x1024 <__fixunssfsi+0x4c>
    1000:	0e 94 a2 08 	call	0x1144	; 0x1144 <__fp_zero>
    1004:	b1 e0       	ldi	r27, 0x01	; 1
    1006:	08 95       	ret
    1008:	0c 94 a2 08 	jmp	0x1144	; 0x1144 <__fp_zero>
    100c:	67 2f       	mov	r22, r23
    100e:	78 2f       	mov	r23, r24
    1010:	88 27       	eor	r24, r24
    1012:	b8 5f       	subi	r27, 0xF8	; 248
    1014:	39 f0       	breq	.+14     	; 0x1024 <__fixunssfsi+0x4c>
    1016:	b9 3f       	cpi	r27, 0xF9	; 249
    1018:	cc f3       	brlt	.-14     	; 0x100c <__fixunssfsi+0x34>
    101a:	86 95       	lsr	r24
    101c:	77 95       	ror	r23
    101e:	67 95       	ror	r22
    1020:	b3 95       	inc	r27
    1022:	d9 f7       	brne	.-10     	; 0x101a <__fixunssfsi+0x42>
    1024:	3e f4       	brtc	.+14     	; 0x1034 <__fixunssfsi+0x5c>
    1026:	90 95       	com	r25
    1028:	80 95       	com	r24
    102a:	70 95       	com	r23
    102c:	61 95       	neg	r22
    102e:	7f 4f       	sbci	r23, 0xFF	; 255
    1030:	8f 4f       	sbci	r24, 0xFF	; 255
    1032:	9f 4f       	sbci	r25, 0xFF	; 255
    1034:	08 95       	ret

00001036 <__floatunsisf>:
    1036:	e8 94       	clt
    1038:	09 c0       	rjmp	.+18     	; 0x104c <__floatsisf+0x12>

0000103a <__floatsisf>:
    103a:	97 fb       	bst	r25, 7
    103c:	3e f4       	brtc	.+14     	; 0x104c <__floatsisf+0x12>
    103e:	90 95       	com	r25
    1040:	80 95       	com	r24
    1042:	70 95       	com	r23
    1044:	61 95       	neg	r22
    1046:	7f 4f       	sbci	r23, 0xFF	; 255
    1048:	8f 4f       	sbci	r24, 0xFF	; 255
    104a:	9f 4f       	sbci	r25, 0xFF	; 255
    104c:	99 23       	and	r25, r25
    104e:	a9 f0       	breq	.+42     	; 0x107a <__floatsisf+0x40>
    1050:	f9 2f       	mov	r31, r25
    1052:	96 e9       	ldi	r25, 0x96	; 150
    1054:	bb 27       	eor	r27, r27
    1056:	93 95       	inc	r25
    1058:	f6 95       	lsr	r31
    105a:	87 95       	ror	r24
    105c:	77 95       	ror	r23
    105e:	67 95       	ror	r22
    1060:	b7 95       	ror	r27
    1062:	f1 11       	cpse	r31, r1
    1064:	f8 cf       	rjmp	.-16     	; 0x1056 <__floatsisf+0x1c>
    1066:	fa f4       	brpl	.+62     	; 0x10a6 <__floatsisf+0x6c>
    1068:	bb 0f       	add	r27, r27
    106a:	11 f4       	brne	.+4      	; 0x1070 <__floatsisf+0x36>
    106c:	60 ff       	sbrs	r22, 0
    106e:	1b c0       	rjmp	.+54     	; 0x10a6 <__floatsisf+0x6c>
    1070:	6f 5f       	subi	r22, 0xFF	; 255
    1072:	7f 4f       	sbci	r23, 0xFF	; 255
    1074:	8f 4f       	sbci	r24, 0xFF	; 255
    1076:	9f 4f       	sbci	r25, 0xFF	; 255
    1078:	16 c0       	rjmp	.+44     	; 0x10a6 <__floatsisf+0x6c>
    107a:	88 23       	and	r24, r24
    107c:	11 f0       	breq	.+4      	; 0x1082 <__floatsisf+0x48>
    107e:	96 e9       	ldi	r25, 0x96	; 150
    1080:	11 c0       	rjmp	.+34     	; 0x10a4 <__floatsisf+0x6a>
    1082:	77 23       	and	r23, r23
    1084:	21 f0       	breq	.+8      	; 0x108e <__floatsisf+0x54>
    1086:	9e e8       	ldi	r25, 0x8E	; 142
    1088:	87 2f       	mov	r24, r23
    108a:	76 2f       	mov	r23, r22
    108c:	05 c0       	rjmp	.+10     	; 0x1098 <__floatsisf+0x5e>
    108e:	66 23       	and	r22, r22
    1090:	71 f0       	breq	.+28     	; 0x10ae <__floatsisf+0x74>
    1092:	96 e8       	ldi	r25, 0x86	; 134
    1094:	86 2f       	mov	r24, r22
    1096:	70 e0       	ldi	r23, 0x00	; 0
    1098:	60 e0       	ldi	r22, 0x00	; 0
    109a:	2a f0       	brmi	.+10     	; 0x10a6 <__floatsisf+0x6c>
    109c:	9a 95       	dec	r25
    109e:	66 0f       	add	r22, r22
    10a0:	77 1f       	adc	r23, r23
    10a2:	88 1f       	adc	r24, r24
    10a4:	da f7       	brpl	.-10     	; 0x109c <__floatsisf+0x62>
    10a6:	88 0f       	add	r24, r24
    10a8:	96 95       	lsr	r25
    10aa:	87 95       	ror	r24
    10ac:	97 f9       	bld	r25, 7
    10ae:	08 95       	ret

000010b0 <__fp_inf>:
    10b0:	97 f9       	bld	r25, 7
    10b2:	9f 67       	ori	r25, 0x7F	; 127
    10b4:	80 e8       	ldi	r24, 0x80	; 128
    10b6:	70 e0       	ldi	r23, 0x00	; 0
    10b8:	60 e0       	ldi	r22, 0x00	; 0
    10ba:	08 95       	ret

000010bc <__fp_nan>:
    10bc:	9f ef       	ldi	r25, 0xFF	; 255
    10be:	80 ec       	ldi	r24, 0xC0	; 192
    10c0:	08 95       	ret

000010c2 <__fp_pscA>:
    10c2:	00 24       	eor	r0, r0
    10c4:	0a 94       	dec	r0
    10c6:	16 16       	cp	r1, r22
    10c8:	17 06       	cpc	r1, r23
    10ca:	18 06       	cpc	r1, r24
    10cc:	09 06       	cpc	r0, r25
    10ce:	08 95       	ret

000010d0 <__fp_pscB>:
    10d0:	00 24       	eor	r0, r0
    10d2:	0a 94       	dec	r0
    10d4:	12 16       	cp	r1, r18
    10d6:	13 06       	cpc	r1, r19
    10d8:	14 06       	cpc	r1, r20
    10da:	05 06       	cpc	r0, r21
    10dc:	08 95       	ret

000010de <__fp_round>:
    10de:	09 2e       	mov	r0, r25
    10e0:	03 94       	inc	r0
    10e2:	00 0c       	add	r0, r0
    10e4:	11 f4       	brne	.+4      	; 0x10ea <__fp_round+0xc>
    10e6:	88 23       	and	r24, r24
    10e8:	52 f0       	brmi	.+20     	; 0x10fe <__fp_round+0x20>
    10ea:	bb 0f       	add	r27, r27
    10ec:	40 f4       	brcc	.+16     	; 0x10fe <__fp_round+0x20>
    10ee:	bf 2b       	or	r27, r31
    10f0:	11 f4       	brne	.+4      	; 0x10f6 <__fp_round+0x18>
    10f2:	60 ff       	sbrs	r22, 0
    10f4:	04 c0       	rjmp	.+8      	; 0x10fe <__fp_round+0x20>
    10f6:	6f 5f       	subi	r22, 0xFF	; 255
    10f8:	7f 4f       	sbci	r23, 0xFF	; 255
    10fa:	8f 4f       	sbci	r24, 0xFF	; 255
    10fc:	9f 4f       	sbci	r25, 0xFF	; 255
    10fe:	08 95       	ret

00001100 <__fp_split3>:
    1100:	57 fd       	sbrc	r21, 7
    1102:	90 58       	subi	r25, 0x80	; 128
    1104:	44 0f       	add	r20, r20
    1106:	55 1f       	adc	r21, r21
    1108:	59 f0       	breq	.+22     	; 0x1120 <__fp_splitA+0x10>
    110a:	5f 3f       	cpi	r21, 0xFF	; 255
    110c:	71 f0       	breq	.+28     	; 0x112a <__fp_splitA+0x1a>
    110e:	47 95       	ror	r20

00001110 <__fp_splitA>:
    1110:	88 0f       	add	r24, r24
    1112:	97 fb       	bst	r25, 7
    1114:	99 1f       	adc	r25, r25
    1116:	61 f0       	breq	.+24     	; 0x1130 <__fp_splitA+0x20>
    1118:	9f 3f       	cpi	r25, 0xFF	; 255
    111a:	79 f0       	breq	.+30     	; 0x113a <__fp_splitA+0x2a>
    111c:	87 95       	ror	r24
    111e:	08 95       	ret
    1120:	12 16       	cp	r1, r18
    1122:	13 06       	cpc	r1, r19
    1124:	14 06       	cpc	r1, r20
    1126:	55 1f       	adc	r21, r21
    1128:	f2 cf       	rjmp	.-28     	; 0x110e <__fp_split3+0xe>
    112a:	46 95       	lsr	r20
    112c:	f1 df       	rcall	.-30     	; 0x1110 <__fp_splitA>
    112e:	08 c0       	rjmp	.+16     	; 0x1140 <__fp_splitA+0x30>
    1130:	16 16       	cp	r1, r22
    1132:	17 06       	cpc	r1, r23
    1134:	18 06       	cpc	r1, r24
    1136:	99 1f       	adc	r25, r25
    1138:	f1 cf       	rjmp	.-30     	; 0x111c <__fp_splitA+0xc>
    113a:	86 95       	lsr	r24
    113c:	71 05       	cpc	r23, r1
    113e:	61 05       	cpc	r22, r1
    1140:	08 94       	sec
    1142:	08 95       	ret

00001144 <__fp_zero>:
    1144:	e8 94       	clt

00001146 <__fp_szero>:
    1146:	bb 27       	eor	r27, r27
    1148:	66 27       	eor	r22, r22
    114a:	77 27       	eor	r23, r23
    114c:	cb 01       	movw	r24, r22
    114e:	97 f9       	bld	r25, 7
    1150:	08 95       	ret

00001152 <__mulsf3>:
    1152:	0e 94 bc 08 	call	0x1178	; 0x1178 <__mulsf3x>
    1156:	0c 94 6f 08 	jmp	0x10de	; 0x10de <__fp_round>
    115a:	0e 94 61 08 	call	0x10c2	; 0x10c2 <__fp_pscA>
    115e:	38 f0       	brcs	.+14     	; 0x116e <__mulsf3+0x1c>
    1160:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fp_pscB>
    1164:	20 f0       	brcs	.+8      	; 0x116e <__mulsf3+0x1c>
    1166:	95 23       	and	r25, r21
    1168:	11 f0       	breq	.+4      	; 0x116e <__mulsf3+0x1c>
    116a:	0c 94 58 08 	jmp	0x10b0	; 0x10b0 <__fp_inf>
    116e:	0c 94 5e 08 	jmp	0x10bc	; 0x10bc <__fp_nan>
    1172:	11 24       	eor	r1, r1
    1174:	0c 94 a3 08 	jmp	0x1146	; 0x1146 <__fp_szero>

00001178 <__mulsf3x>:
    1178:	0e 94 80 08 	call	0x1100	; 0x1100 <__fp_split3>
    117c:	70 f3       	brcs	.-36     	; 0x115a <__mulsf3+0x8>

0000117e <__mulsf3_pse>:
    117e:	95 9f       	mul	r25, r21
    1180:	c1 f3       	breq	.-16     	; 0x1172 <__mulsf3+0x20>
    1182:	95 0f       	add	r25, r21
    1184:	50 e0       	ldi	r21, 0x00	; 0
    1186:	55 1f       	adc	r21, r21
    1188:	62 9f       	mul	r22, r18
    118a:	f0 01       	movw	r30, r0
    118c:	72 9f       	mul	r23, r18
    118e:	bb 27       	eor	r27, r27
    1190:	f0 0d       	add	r31, r0
    1192:	b1 1d       	adc	r27, r1
    1194:	63 9f       	mul	r22, r19
    1196:	aa 27       	eor	r26, r26
    1198:	f0 0d       	add	r31, r0
    119a:	b1 1d       	adc	r27, r1
    119c:	aa 1f       	adc	r26, r26
    119e:	64 9f       	mul	r22, r20
    11a0:	66 27       	eor	r22, r22
    11a2:	b0 0d       	add	r27, r0
    11a4:	a1 1d       	adc	r26, r1
    11a6:	66 1f       	adc	r22, r22
    11a8:	82 9f       	mul	r24, r18
    11aa:	22 27       	eor	r18, r18
    11ac:	b0 0d       	add	r27, r0
    11ae:	a1 1d       	adc	r26, r1
    11b0:	62 1f       	adc	r22, r18
    11b2:	73 9f       	mul	r23, r19
    11b4:	b0 0d       	add	r27, r0
    11b6:	a1 1d       	adc	r26, r1
    11b8:	62 1f       	adc	r22, r18
    11ba:	83 9f       	mul	r24, r19
    11bc:	a0 0d       	add	r26, r0
    11be:	61 1d       	adc	r22, r1
    11c0:	22 1f       	adc	r18, r18
    11c2:	74 9f       	mul	r23, r20
    11c4:	33 27       	eor	r19, r19
    11c6:	a0 0d       	add	r26, r0
    11c8:	61 1d       	adc	r22, r1
    11ca:	23 1f       	adc	r18, r19
    11cc:	84 9f       	mul	r24, r20
    11ce:	60 0d       	add	r22, r0
    11d0:	21 1d       	adc	r18, r1
    11d2:	82 2f       	mov	r24, r18
    11d4:	76 2f       	mov	r23, r22
    11d6:	6a 2f       	mov	r22, r26
    11d8:	11 24       	eor	r1, r1
    11da:	9f 57       	subi	r25, 0x7F	; 127
    11dc:	50 40       	sbci	r21, 0x00	; 0
    11de:	9a f0       	brmi	.+38     	; 0x1206 <__mulsf3_pse+0x88>
    11e0:	f1 f0       	breq	.+60     	; 0x121e <__mulsf3_pse+0xa0>
    11e2:	88 23       	and	r24, r24
    11e4:	4a f0       	brmi	.+18     	; 0x11f8 <__mulsf3_pse+0x7a>
    11e6:	ee 0f       	add	r30, r30
    11e8:	ff 1f       	adc	r31, r31
    11ea:	bb 1f       	adc	r27, r27
    11ec:	66 1f       	adc	r22, r22
    11ee:	77 1f       	adc	r23, r23
    11f0:	88 1f       	adc	r24, r24
    11f2:	91 50       	subi	r25, 0x01	; 1
    11f4:	50 40       	sbci	r21, 0x00	; 0
    11f6:	a9 f7       	brne	.-22     	; 0x11e2 <__mulsf3_pse+0x64>
    11f8:	9e 3f       	cpi	r25, 0xFE	; 254
    11fa:	51 05       	cpc	r21, r1
    11fc:	80 f0       	brcs	.+32     	; 0x121e <__mulsf3_pse+0xa0>
    11fe:	0c 94 58 08 	jmp	0x10b0	; 0x10b0 <__fp_inf>
    1202:	0c 94 a3 08 	jmp	0x1146	; 0x1146 <__fp_szero>
    1206:	5f 3f       	cpi	r21, 0xFF	; 255
    1208:	e4 f3       	brlt	.-8      	; 0x1202 <__mulsf3_pse+0x84>
    120a:	98 3e       	cpi	r25, 0xE8	; 232
    120c:	d4 f3       	brlt	.-12     	; 0x1202 <__mulsf3_pse+0x84>
    120e:	86 95       	lsr	r24
    1210:	77 95       	ror	r23
    1212:	67 95       	ror	r22
    1214:	b7 95       	ror	r27
    1216:	f7 95       	ror	r31
    1218:	e7 95       	ror	r30
    121a:	9f 5f       	subi	r25, 0xFF	; 255
    121c:	c1 f7       	brne	.-16     	; 0x120e <__mulsf3_pse+0x90>
    121e:	fe 2b       	or	r31, r30
    1220:	88 0f       	add	r24, r24
    1222:	91 1d       	adc	r25, r1
    1224:	96 95       	lsr	r25
    1226:	87 95       	ror	r24
    1228:	97 f9       	bld	r25, 7
    122a:	08 95       	ret

0000122c <__tablejump2__>:
    122c:	ee 0f       	add	r30, r30
    122e:	ff 1f       	adc	r31, r31
    1230:	05 90       	lpm	r0, Z+
    1232:	f4 91       	lpm	r31, Z
    1234:	e0 2d       	mov	r30, r0
    1236:	09 94       	ijmp

00001238 <sprintf>:
    1238:	ae e0       	ldi	r26, 0x0E	; 14
    123a:	b0 e0       	ldi	r27, 0x00	; 0
    123c:	e2 e2       	ldi	r30, 0x22	; 34
    123e:	f9 e0       	ldi	r31, 0x09	; 9
    1240:	0c 94 11 0f 	jmp	0x1e22	; 0x1e22 <__prologue_saves__+0x1c>
    1244:	0d 89       	ldd	r16, Y+21	; 0x15
    1246:	1e 89       	ldd	r17, Y+22	; 0x16
    1248:	86 e0       	ldi	r24, 0x06	; 6
    124a:	8c 83       	std	Y+4, r24	; 0x04
    124c:	1a 83       	std	Y+2, r17	; 0x02
    124e:	09 83       	std	Y+1, r16	; 0x01
    1250:	8f ef       	ldi	r24, 0xFF	; 255
    1252:	9f e7       	ldi	r25, 0x7F	; 127
    1254:	9e 83       	std	Y+6, r25	; 0x06
    1256:	8d 83       	std	Y+5, r24	; 0x05
    1258:	ae 01       	movw	r20, r28
    125a:	47 5e       	subi	r20, 0xE7	; 231
    125c:	5f 4f       	sbci	r21, 0xFF	; 255
    125e:	6f 89       	ldd	r22, Y+23	; 0x17
    1260:	78 8d       	ldd	r23, Y+24	; 0x18
    1262:	ce 01       	movw	r24, r28
    1264:	01 96       	adiw	r24, 0x01	; 1
    1266:	0e 94 57 09 	call	0x12ae	; 0x12ae <vfprintf>
    126a:	ef 81       	ldd	r30, Y+7	; 0x07
    126c:	f8 85       	ldd	r31, Y+8	; 0x08
    126e:	e0 0f       	add	r30, r16
    1270:	f1 1f       	adc	r31, r17
    1272:	10 82       	st	Z, r1
    1274:	2e 96       	adiw	r28, 0x0e	; 14
    1276:	e4 e0       	ldi	r30, 0x04	; 4
    1278:	0c 94 2d 0f 	jmp	0x1e5a	; 0x1e5a <__epilogue_restores__+0x1c>

0000127c <sscanf>:
    127c:	ae e0       	ldi	r26, 0x0E	; 14
    127e:	b0 e0       	ldi	r27, 0x00	; 0
    1280:	e4 e4       	ldi	r30, 0x44	; 68
    1282:	f9 e0       	ldi	r31, 0x09	; 9
    1284:	0c 94 13 0f 	jmp	0x1e26	; 0x1e26 <__prologue_saves__+0x20>
    1288:	85 e0       	ldi	r24, 0x05	; 5
    128a:	8c 83       	std	Y+4, r24	; 0x04
    128c:	8b 89       	ldd	r24, Y+19	; 0x13
    128e:	9c 89       	ldd	r25, Y+20	; 0x14
    1290:	9a 83       	std	Y+2, r25	; 0x02
    1292:	89 83       	std	Y+1, r24	; 0x01
    1294:	ae 01       	movw	r20, r28
    1296:	49 5e       	subi	r20, 0xE9	; 233
    1298:	5f 4f       	sbci	r21, 0xFF	; 255
    129a:	6d 89       	ldd	r22, Y+21	; 0x15
    129c:	7e 89       	ldd	r23, Y+22	; 0x16
    129e:	ce 01       	movw	r24, r28
    12a0:	01 96       	adiw	r24, 0x01	; 1
    12a2:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <vfscanf>
    12a6:	2e 96       	adiw	r28, 0x0e	; 14
    12a8:	e2 e0       	ldi	r30, 0x02	; 2
    12aa:	0c 94 2f 0f 	jmp	0x1e5e	; 0x1e5e <__epilogue_restores__+0x20>

000012ae <vfprintf>:
    12ae:	ab e0       	ldi	r26, 0x0B	; 11
    12b0:	b0 e0       	ldi	r27, 0x00	; 0
    12b2:	ed e5       	ldi	r30, 0x5D	; 93
    12b4:	f9 e0       	ldi	r31, 0x09	; 9
    12b6:	0c 94 03 0f 	jmp	0x1e06	; 0x1e06 <__prologue_saves__>
    12ba:	6c 01       	movw	r12, r24
    12bc:	7b 01       	movw	r14, r22
    12be:	8a 01       	movw	r16, r20
    12c0:	fc 01       	movw	r30, r24
    12c2:	17 82       	std	Z+7, r1	; 0x07
    12c4:	16 82       	std	Z+6, r1	; 0x06
    12c6:	83 81       	ldd	r24, Z+3	; 0x03
    12c8:	81 ff       	sbrs	r24, 1
    12ca:	cc c1       	rjmp	.+920    	; 0x1664 <vfprintf+0x3b6>
    12cc:	ce 01       	movw	r24, r28
    12ce:	01 96       	adiw	r24, 0x01	; 1
    12d0:	3c 01       	movw	r6, r24
    12d2:	f6 01       	movw	r30, r12
    12d4:	93 81       	ldd	r25, Z+3	; 0x03
    12d6:	f7 01       	movw	r30, r14
    12d8:	93 fd       	sbrc	r25, 3
    12da:	85 91       	lpm	r24, Z+
    12dc:	93 ff       	sbrs	r25, 3
    12de:	81 91       	ld	r24, Z+
    12e0:	7f 01       	movw	r14, r30
    12e2:	88 23       	and	r24, r24
    12e4:	09 f4       	brne	.+2      	; 0x12e8 <vfprintf+0x3a>
    12e6:	ba c1       	rjmp	.+884    	; 0x165c <vfprintf+0x3ae>
    12e8:	85 32       	cpi	r24, 0x25	; 37
    12ea:	39 f4       	brne	.+14     	; 0x12fa <vfprintf+0x4c>
    12ec:	93 fd       	sbrc	r25, 3
    12ee:	85 91       	lpm	r24, Z+
    12f0:	93 ff       	sbrs	r25, 3
    12f2:	81 91       	ld	r24, Z+
    12f4:	7f 01       	movw	r14, r30
    12f6:	85 32       	cpi	r24, 0x25	; 37
    12f8:	29 f4       	brne	.+10     	; 0x1304 <vfprintf+0x56>
    12fa:	b6 01       	movw	r22, r12
    12fc:	90 e0       	ldi	r25, 0x00	; 0
    12fe:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <fputc>
    1302:	e7 cf       	rjmp	.-50     	; 0x12d2 <vfprintf+0x24>
    1304:	91 2c       	mov	r9, r1
    1306:	21 2c       	mov	r2, r1
    1308:	31 2c       	mov	r3, r1
    130a:	ff e1       	ldi	r31, 0x1F	; 31
    130c:	f3 15       	cp	r31, r3
    130e:	d8 f0       	brcs	.+54     	; 0x1346 <vfprintf+0x98>
    1310:	8b 32       	cpi	r24, 0x2B	; 43
    1312:	79 f0       	breq	.+30     	; 0x1332 <vfprintf+0x84>
    1314:	38 f4       	brcc	.+14     	; 0x1324 <vfprintf+0x76>
    1316:	80 32       	cpi	r24, 0x20	; 32
    1318:	79 f0       	breq	.+30     	; 0x1338 <vfprintf+0x8a>
    131a:	83 32       	cpi	r24, 0x23	; 35
    131c:	a1 f4       	brne	.+40     	; 0x1346 <vfprintf+0x98>
    131e:	23 2d       	mov	r18, r3
    1320:	20 61       	ori	r18, 0x10	; 16
    1322:	1d c0       	rjmp	.+58     	; 0x135e <vfprintf+0xb0>
    1324:	8d 32       	cpi	r24, 0x2D	; 45
    1326:	61 f0       	breq	.+24     	; 0x1340 <vfprintf+0x92>
    1328:	80 33       	cpi	r24, 0x30	; 48
    132a:	69 f4       	brne	.+26     	; 0x1346 <vfprintf+0x98>
    132c:	23 2d       	mov	r18, r3
    132e:	21 60       	ori	r18, 0x01	; 1
    1330:	16 c0       	rjmp	.+44     	; 0x135e <vfprintf+0xb0>
    1332:	83 2d       	mov	r24, r3
    1334:	82 60       	ori	r24, 0x02	; 2
    1336:	38 2e       	mov	r3, r24
    1338:	e3 2d       	mov	r30, r3
    133a:	e4 60       	ori	r30, 0x04	; 4
    133c:	3e 2e       	mov	r3, r30
    133e:	2a c0       	rjmp	.+84     	; 0x1394 <vfprintf+0xe6>
    1340:	f3 2d       	mov	r31, r3
    1342:	f8 60       	ori	r31, 0x08	; 8
    1344:	1d c0       	rjmp	.+58     	; 0x1380 <vfprintf+0xd2>
    1346:	37 fc       	sbrc	r3, 7
    1348:	2d c0       	rjmp	.+90     	; 0x13a4 <vfprintf+0xf6>
    134a:	20 ed       	ldi	r18, 0xD0	; 208
    134c:	28 0f       	add	r18, r24
    134e:	2a 30       	cpi	r18, 0x0A	; 10
    1350:	40 f0       	brcs	.+16     	; 0x1362 <vfprintf+0xb4>
    1352:	8e 32       	cpi	r24, 0x2E	; 46
    1354:	b9 f4       	brne	.+46     	; 0x1384 <vfprintf+0xd6>
    1356:	36 fc       	sbrc	r3, 6
    1358:	81 c1       	rjmp	.+770    	; 0x165c <vfprintf+0x3ae>
    135a:	23 2d       	mov	r18, r3
    135c:	20 64       	ori	r18, 0x40	; 64
    135e:	32 2e       	mov	r3, r18
    1360:	19 c0       	rjmp	.+50     	; 0x1394 <vfprintf+0xe6>
    1362:	36 fe       	sbrs	r3, 6
    1364:	06 c0       	rjmp	.+12     	; 0x1372 <vfprintf+0xc4>
    1366:	8a e0       	ldi	r24, 0x0A	; 10
    1368:	98 9e       	mul	r9, r24
    136a:	20 0d       	add	r18, r0
    136c:	11 24       	eor	r1, r1
    136e:	92 2e       	mov	r9, r18
    1370:	11 c0       	rjmp	.+34     	; 0x1394 <vfprintf+0xe6>
    1372:	ea e0       	ldi	r30, 0x0A	; 10
    1374:	2e 9e       	mul	r2, r30
    1376:	20 0d       	add	r18, r0
    1378:	11 24       	eor	r1, r1
    137a:	22 2e       	mov	r2, r18
    137c:	f3 2d       	mov	r31, r3
    137e:	f0 62       	ori	r31, 0x20	; 32
    1380:	3f 2e       	mov	r3, r31
    1382:	08 c0       	rjmp	.+16     	; 0x1394 <vfprintf+0xe6>
    1384:	8c 36       	cpi	r24, 0x6C	; 108
    1386:	21 f4       	brne	.+8      	; 0x1390 <vfprintf+0xe2>
    1388:	83 2d       	mov	r24, r3
    138a:	80 68       	ori	r24, 0x80	; 128
    138c:	38 2e       	mov	r3, r24
    138e:	02 c0       	rjmp	.+4      	; 0x1394 <vfprintf+0xe6>
    1390:	88 36       	cpi	r24, 0x68	; 104
    1392:	41 f4       	brne	.+16     	; 0x13a4 <vfprintf+0xf6>
    1394:	f7 01       	movw	r30, r14
    1396:	93 fd       	sbrc	r25, 3
    1398:	85 91       	lpm	r24, Z+
    139a:	93 ff       	sbrs	r25, 3
    139c:	81 91       	ld	r24, Z+
    139e:	7f 01       	movw	r14, r30
    13a0:	81 11       	cpse	r24, r1
    13a2:	b3 cf       	rjmp	.-154    	; 0x130a <vfprintf+0x5c>
    13a4:	98 2f       	mov	r25, r24
    13a6:	9f 7d       	andi	r25, 0xDF	; 223
    13a8:	95 54       	subi	r25, 0x45	; 69
    13aa:	93 30       	cpi	r25, 0x03	; 3
    13ac:	28 f4       	brcc	.+10     	; 0x13b8 <vfprintf+0x10a>
    13ae:	0c 5f       	subi	r16, 0xFC	; 252
    13b0:	1f 4f       	sbci	r17, 0xFF	; 255
    13b2:	9f e3       	ldi	r25, 0x3F	; 63
    13b4:	99 83       	std	Y+1, r25	; 0x01
    13b6:	0d c0       	rjmp	.+26     	; 0x13d2 <vfprintf+0x124>
    13b8:	83 36       	cpi	r24, 0x63	; 99
    13ba:	31 f0       	breq	.+12     	; 0x13c8 <vfprintf+0x11a>
    13bc:	83 37       	cpi	r24, 0x73	; 115
    13be:	71 f0       	breq	.+28     	; 0x13dc <vfprintf+0x12e>
    13c0:	83 35       	cpi	r24, 0x53	; 83
    13c2:	09 f0       	breq	.+2      	; 0x13c6 <vfprintf+0x118>
    13c4:	59 c0       	rjmp	.+178    	; 0x1478 <vfprintf+0x1ca>
    13c6:	21 c0       	rjmp	.+66     	; 0x140a <vfprintf+0x15c>
    13c8:	f8 01       	movw	r30, r16
    13ca:	80 81       	ld	r24, Z
    13cc:	89 83       	std	Y+1, r24	; 0x01
    13ce:	0e 5f       	subi	r16, 0xFE	; 254
    13d0:	1f 4f       	sbci	r17, 0xFF	; 255
    13d2:	88 24       	eor	r8, r8
    13d4:	83 94       	inc	r8
    13d6:	91 2c       	mov	r9, r1
    13d8:	53 01       	movw	r10, r6
    13da:	13 c0       	rjmp	.+38     	; 0x1402 <vfprintf+0x154>
    13dc:	28 01       	movw	r4, r16
    13de:	f2 e0       	ldi	r31, 0x02	; 2
    13e0:	4f 0e       	add	r4, r31
    13e2:	51 1c       	adc	r5, r1
    13e4:	f8 01       	movw	r30, r16
    13e6:	a0 80       	ld	r10, Z
    13e8:	b1 80       	ldd	r11, Z+1	; 0x01
    13ea:	36 fe       	sbrs	r3, 6
    13ec:	03 c0       	rjmp	.+6      	; 0x13f4 <vfprintf+0x146>
    13ee:	69 2d       	mov	r22, r9
    13f0:	70 e0       	ldi	r23, 0x00	; 0
    13f2:	02 c0       	rjmp	.+4      	; 0x13f8 <vfprintf+0x14a>
    13f4:	6f ef       	ldi	r22, 0xFF	; 255
    13f6:	7f ef       	ldi	r23, 0xFF	; 255
    13f8:	c5 01       	movw	r24, r10
    13fa:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <strnlen>
    13fe:	4c 01       	movw	r8, r24
    1400:	82 01       	movw	r16, r4
    1402:	f3 2d       	mov	r31, r3
    1404:	ff 77       	andi	r31, 0x7F	; 127
    1406:	3f 2e       	mov	r3, r31
    1408:	16 c0       	rjmp	.+44     	; 0x1436 <vfprintf+0x188>
    140a:	28 01       	movw	r4, r16
    140c:	22 e0       	ldi	r18, 0x02	; 2
    140e:	42 0e       	add	r4, r18
    1410:	51 1c       	adc	r5, r1
    1412:	f8 01       	movw	r30, r16
    1414:	a0 80       	ld	r10, Z
    1416:	b1 80       	ldd	r11, Z+1	; 0x01
    1418:	36 fe       	sbrs	r3, 6
    141a:	03 c0       	rjmp	.+6      	; 0x1422 <vfprintf+0x174>
    141c:	69 2d       	mov	r22, r9
    141e:	70 e0       	ldi	r23, 0x00	; 0
    1420:	02 c0       	rjmp	.+4      	; 0x1426 <vfprintf+0x178>
    1422:	6f ef       	ldi	r22, 0xFF	; 255
    1424:	7f ef       	ldi	r23, 0xFF	; 255
    1426:	c5 01       	movw	r24, r10
    1428:	0e 94 f9 0d 	call	0x1bf2	; 0x1bf2 <strnlen_P>
    142c:	4c 01       	movw	r8, r24
    142e:	f3 2d       	mov	r31, r3
    1430:	f0 68       	ori	r31, 0x80	; 128
    1432:	3f 2e       	mov	r3, r31
    1434:	82 01       	movw	r16, r4
    1436:	33 fc       	sbrc	r3, 3
    1438:	1b c0       	rjmp	.+54     	; 0x1470 <vfprintf+0x1c2>
    143a:	82 2d       	mov	r24, r2
    143c:	90 e0       	ldi	r25, 0x00	; 0
    143e:	88 16       	cp	r8, r24
    1440:	99 06       	cpc	r9, r25
    1442:	b0 f4       	brcc	.+44     	; 0x1470 <vfprintf+0x1c2>
    1444:	b6 01       	movw	r22, r12
    1446:	80 e2       	ldi	r24, 0x20	; 32
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <fputc>
    144e:	2a 94       	dec	r2
    1450:	f4 cf       	rjmp	.-24     	; 0x143a <vfprintf+0x18c>
    1452:	f5 01       	movw	r30, r10
    1454:	37 fc       	sbrc	r3, 7
    1456:	85 91       	lpm	r24, Z+
    1458:	37 fe       	sbrs	r3, 7
    145a:	81 91       	ld	r24, Z+
    145c:	5f 01       	movw	r10, r30
    145e:	b6 01       	movw	r22, r12
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <fputc>
    1466:	21 10       	cpse	r2, r1
    1468:	2a 94       	dec	r2
    146a:	21 e0       	ldi	r18, 0x01	; 1
    146c:	82 1a       	sub	r8, r18
    146e:	91 08       	sbc	r9, r1
    1470:	81 14       	cp	r8, r1
    1472:	91 04       	cpc	r9, r1
    1474:	71 f7       	brne	.-36     	; 0x1452 <vfprintf+0x1a4>
    1476:	e8 c0       	rjmp	.+464    	; 0x1648 <vfprintf+0x39a>
    1478:	84 36       	cpi	r24, 0x64	; 100
    147a:	11 f0       	breq	.+4      	; 0x1480 <vfprintf+0x1d2>
    147c:	89 36       	cpi	r24, 0x69	; 105
    147e:	41 f5       	brne	.+80     	; 0x14d0 <vfprintf+0x222>
    1480:	f8 01       	movw	r30, r16
    1482:	37 fe       	sbrs	r3, 7
    1484:	07 c0       	rjmp	.+14     	; 0x1494 <vfprintf+0x1e6>
    1486:	60 81       	ld	r22, Z
    1488:	71 81       	ldd	r23, Z+1	; 0x01
    148a:	82 81       	ldd	r24, Z+2	; 0x02
    148c:	93 81       	ldd	r25, Z+3	; 0x03
    148e:	0c 5f       	subi	r16, 0xFC	; 252
    1490:	1f 4f       	sbci	r17, 0xFF	; 255
    1492:	08 c0       	rjmp	.+16     	; 0x14a4 <vfprintf+0x1f6>
    1494:	60 81       	ld	r22, Z
    1496:	71 81       	ldd	r23, Z+1	; 0x01
    1498:	07 2e       	mov	r0, r23
    149a:	00 0c       	add	r0, r0
    149c:	88 0b       	sbc	r24, r24
    149e:	99 0b       	sbc	r25, r25
    14a0:	0e 5f       	subi	r16, 0xFE	; 254
    14a2:	1f 4f       	sbci	r17, 0xFF	; 255
    14a4:	f3 2d       	mov	r31, r3
    14a6:	ff 76       	andi	r31, 0x6F	; 111
    14a8:	3f 2e       	mov	r3, r31
    14aa:	97 ff       	sbrs	r25, 7
    14ac:	09 c0       	rjmp	.+18     	; 0x14c0 <vfprintf+0x212>
    14ae:	90 95       	com	r25
    14b0:	80 95       	com	r24
    14b2:	70 95       	com	r23
    14b4:	61 95       	neg	r22
    14b6:	7f 4f       	sbci	r23, 0xFF	; 255
    14b8:	8f 4f       	sbci	r24, 0xFF	; 255
    14ba:	9f 4f       	sbci	r25, 0xFF	; 255
    14bc:	f0 68       	ori	r31, 0x80	; 128
    14be:	3f 2e       	mov	r3, r31
    14c0:	2a e0       	ldi	r18, 0x0A	; 10
    14c2:	30 e0       	ldi	r19, 0x00	; 0
    14c4:	a3 01       	movw	r20, r6
    14c6:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <__ultoa_invert>
    14ca:	88 2e       	mov	r8, r24
    14cc:	86 18       	sub	r8, r6
    14ce:	45 c0       	rjmp	.+138    	; 0x155a <vfprintf+0x2ac>
    14d0:	85 37       	cpi	r24, 0x75	; 117
    14d2:	31 f4       	brne	.+12     	; 0x14e0 <vfprintf+0x232>
    14d4:	23 2d       	mov	r18, r3
    14d6:	2f 7e       	andi	r18, 0xEF	; 239
    14d8:	b2 2e       	mov	r11, r18
    14da:	2a e0       	ldi	r18, 0x0A	; 10
    14dc:	30 e0       	ldi	r19, 0x00	; 0
    14de:	25 c0       	rjmp	.+74     	; 0x152a <vfprintf+0x27c>
    14e0:	93 2d       	mov	r25, r3
    14e2:	99 7f       	andi	r25, 0xF9	; 249
    14e4:	b9 2e       	mov	r11, r25
    14e6:	8f 36       	cpi	r24, 0x6F	; 111
    14e8:	c1 f0       	breq	.+48     	; 0x151a <vfprintf+0x26c>
    14ea:	18 f4       	brcc	.+6      	; 0x14f2 <vfprintf+0x244>
    14ec:	88 35       	cpi	r24, 0x58	; 88
    14ee:	79 f0       	breq	.+30     	; 0x150e <vfprintf+0x260>
    14f0:	b5 c0       	rjmp	.+362    	; 0x165c <vfprintf+0x3ae>
    14f2:	80 37       	cpi	r24, 0x70	; 112
    14f4:	19 f0       	breq	.+6      	; 0x14fc <vfprintf+0x24e>
    14f6:	88 37       	cpi	r24, 0x78	; 120
    14f8:	21 f0       	breq	.+8      	; 0x1502 <vfprintf+0x254>
    14fa:	b0 c0       	rjmp	.+352    	; 0x165c <vfprintf+0x3ae>
    14fc:	e9 2f       	mov	r30, r25
    14fe:	e0 61       	ori	r30, 0x10	; 16
    1500:	be 2e       	mov	r11, r30
    1502:	b4 fe       	sbrs	r11, 4
    1504:	0d c0       	rjmp	.+26     	; 0x1520 <vfprintf+0x272>
    1506:	fb 2d       	mov	r31, r11
    1508:	f4 60       	ori	r31, 0x04	; 4
    150a:	bf 2e       	mov	r11, r31
    150c:	09 c0       	rjmp	.+18     	; 0x1520 <vfprintf+0x272>
    150e:	34 fe       	sbrs	r3, 4
    1510:	0a c0       	rjmp	.+20     	; 0x1526 <vfprintf+0x278>
    1512:	29 2f       	mov	r18, r25
    1514:	26 60       	ori	r18, 0x06	; 6
    1516:	b2 2e       	mov	r11, r18
    1518:	06 c0       	rjmp	.+12     	; 0x1526 <vfprintf+0x278>
    151a:	28 e0       	ldi	r18, 0x08	; 8
    151c:	30 e0       	ldi	r19, 0x00	; 0
    151e:	05 c0       	rjmp	.+10     	; 0x152a <vfprintf+0x27c>
    1520:	20 e1       	ldi	r18, 0x10	; 16
    1522:	30 e0       	ldi	r19, 0x00	; 0
    1524:	02 c0       	rjmp	.+4      	; 0x152a <vfprintf+0x27c>
    1526:	20 e1       	ldi	r18, 0x10	; 16
    1528:	32 e0       	ldi	r19, 0x02	; 2
    152a:	f8 01       	movw	r30, r16
    152c:	b7 fe       	sbrs	r11, 7
    152e:	07 c0       	rjmp	.+14     	; 0x153e <vfprintf+0x290>
    1530:	60 81       	ld	r22, Z
    1532:	71 81       	ldd	r23, Z+1	; 0x01
    1534:	82 81       	ldd	r24, Z+2	; 0x02
    1536:	93 81       	ldd	r25, Z+3	; 0x03
    1538:	0c 5f       	subi	r16, 0xFC	; 252
    153a:	1f 4f       	sbci	r17, 0xFF	; 255
    153c:	06 c0       	rjmp	.+12     	; 0x154a <vfprintf+0x29c>
    153e:	60 81       	ld	r22, Z
    1540:	71 81       	ldd	r23, Z+1	; 0x01
    1542:	80 e0       	ldi	r24, 0x00	; 0
    1544:	90 e0       	ldi	r25, 0x00	; 0
    1546:	0e 5f       	subi	r16, 0xFE	; 254
    1548:	1f 4f       	sbci	r17, 0xFF	; 255
    154a:	a3 01       	movw	r20, r6
    154c:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <__ultoa_invert>
    1550:	88 2e       	mov	r8, r24
    1552:	86 18       	sub	r8, r6
    1554:	fb 2d       	mov	r31, r11
    1556:	ff 77       	andi	r31, 0x7F	; 127
    1558:	3f 2e       	mov	r3, r31
    155a:	36 fe       	sbrs	r3, 6
    155c:	0d c0       	rjmp	.+26     	; 0x1578 <vfprintf+0x2ca>
    155e:	23 2d       	mov	r18, r3
    1560:	2e 7f       	andi	r18, 0xFE	; 254
    1562:	a2 2e       	mov	r10, r18
    1564:	89 14       	cp	r8, r9
    1566:	58 f4       	brcc	.+22     	; 0x157e <vfprintf+0x2d0>
    1568:	34 fe       	sbrs	r3, 4
    156a:	0b c0       	rjmp	.+22     	; 0x1582 <vfprintf+0x2d4>
    156c:	32 fc       	sbrc	r3, 2
    156e:	09 c0       	rjmp	.+18     	; 0x1582 <vfprintf+0x2d4>
    1570:	83 2d       	mov	r24, r3
    1572:	8e 7e       	andi	r24, 0xEE	; 238
    1574:	a8 2e       	mov	r10, r24
    1576:	05 c0       	rjmp	.+10     	; 0x1582 <vfprintf+0x2d4>
    1578:	b8 2c       	mov	r11, r8
    157a:	a3 2c       	mov	r10, r3
    157c:	03 c0       	rjmp	.+6      	; 0x1584 <vfprintf+0x2d6>
    157e:	b8 2c       	mov	r11, r8
    1580:	01 c0       	rjmp	.+2      	; 0x1584 <vfprintf+0x2d6>
    1582:	b9 2c       	mov	r11, r9
    1584:	a4 fe       	sbrs	r10, 4
    1586:	0f c0       	rjmp	.+30     	; 0x15a6 <vfprintf+0x2f8>
    1588:	fe 01       	movw	r30, r28
    158a:	e8 0d       	add	r30, r8
    158c:	f1 1d       	adc	r31, r1
    158e:	80 81       	ld	r24, Z
    1590:	80 33       	cpi	r24, 0x30	; 48
    1592:	21 f4       	brne	.+8      	; 0x159c <vfprintf+0x2ee>
    1594:	9a 2d       	mov	r25, r10
    1596:	99 7e       	andi	r25, 0xE9	; 233
    1598:	a9 2e       	mov	r10, r25
    159a:	09 c0       	rjmp	.+18     	; 0x15ae <vfprintf+0x300>
    159c:	a2 fe       	sbrs	r10, 2
    159e:	06 c0       	rjmp	.+12     	; 0x15ac <vfprintf+0x2fe>
    15a0:	b3 94       	inc	r11
    15a2:	b3 94       	inc	r11
    15a4:	04 c0       	rjmp	.+8      	; 0x15ae <vfprintf+0x300>
    15a6:	8a 2d       	mov	r24, r10
    15a8:	86 78       	andi	r24, 0x86	; 134
    15aa:	09 f0       	breq	.+2      	; 0x15ae <vfprintf+0x300>
    15ac:	b3 94       	inc	r11
    15ae:	a3 fc       	sbrc	r10, 3
    15b0:	11 c0       	rjmp	.+34     	; 0x15d4 <vfprintf+0x326>
    15b2:	a0 fe       	sbrs	r10, 0
    15b4:	06 c0       	rjmp	.+12     	; 0x15c2 <vfprintf+0x314>
    15b6:	b2 14       	cp	r11, r2
    15b8:	88 f4       	brcc	.+34     	; 0x15dc <vfprintf+0x32e>
    15ba:	28 0c       	add	r2, r8
    15bc:	92 2c       	mov	r9, r2
    15be:	9b 18       	sub	r9, r11
    15c0:	0e c0       	rjmp	.+28     	; 0x15de <vfprintf+0x330>
    15c2:	b2 14       	cp	r11, r2
    15c4:	60 f4       	brcc	.+24     	; 0x15de <vfprintf+0x330>
    15c6:	b6 01       	movw	r22, r12
    15c8:	80 e2       	ldi	r24, 0x20	; 32
    15ca:	90 e0       	ldi	r25, 0x00	; 0
    15cc:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <fputc>
    15d0:	b3 94       	inc	r11
    15d2:	f7 cf       	rjmp	.-18     	; 0x15c2 <vfprintf+0x314>
    15d4:	b2 14       	cp	r11, r2
    15d6:	18 f4       	brcc	.+6      	; 0x15de <vfprintf+0x330>
    15d8:	2b 18       	sub	r2, r11
    15da:	02 c0       	rjmp	.+4      	; 0x15e0 <vfprintf+0x332>
    15dc:	98 2c       	mov	r9, r8
    15de:	21 2c       	mov	r2, r1
    15e0:	a4 fe       	sbrs	r10, 4
    15e2:	10 c0       	rjmp	.+32     	; 0x1604 <vfprintf+0x356>
    15e4:	b6 01       	movw	r22, r12
    15e6:	80 e3       	ldi	r24, 0x30	; 48
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <fputc>
    15ee:	a2 fe       	sbrs	r10, 2
    15f0:	17 c0       	rjmp	.+46     	; 0x1620 <vfprintf+0x372>
    15f2:	a1 fc       	sbrc	r10, 1
    15f4:	03 c0       	rjmp	.+6      	; 0x15fc <vfprintf+0x34e>
    15f6:	88 e7       	ldi	r24, 0x78	; 120
    15f8:	90 e0       	ldi	r25, 0x00	; 0
    15fa:	02 c0       	rjmp	.+4      	; 0x1600 <vfprintf+0x352>
    15fc:	88 e5       	ldi	r24, 0x58	; 88
    15fe:	90 e0       	ldi	r25, 0x00	; 0
    1600:	b6 01       	movw	r22, r12
    1602:	0c c0       	rjmp	.+24     	; 0x161c <vfprintf+0x36e>
    1604:	8a 2d       	mov	r24, r10
    1606:	86 78       	andi	r24, 0x86	; 134
    1608:	59 f0       	breq	.+22     	; 0x1620 <vfprintf+0x372>
    160a:	a1 fe       	sbrs	r10, 1
    160c:	02 c0       	rjmp	.+4      	; 0x1612 <vfprintf+0x364>
    160e:	8b e2       	ldi	r24, 0x2B	; 43
    1610:	01 c0       	rjmp	.+2      	; 0x1614 <vfprintf+0x366>
    1612:	80 e2       	ldi	r24, 0x20	; 32
    1614:	a7 fc       	sbrc	r10, 7
    1616:	8d e2       	ldi	r24, 0x2D	; 45
    1618:	b6 01       	movw	r22, r12
    161a:	90 e0       	ldi	r25, 0x00	; 0
    161c:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <fputc>
    1620:	89 14       	cp	r8, r9
    1622:	38 f4       	brcc	.+14     	; 0x1632 <vfprintf+0x384>
    1624:	b6 01       	movw	r22, r12
    1626:	80 e3       	ldi	r24, 0x30	; 48
    1628:	90 e0       	ldi	r25, 0x00	; 0
    162a:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <fputc>
    162e:	9a 94       	dec	r9
    1630:	f7 cf       	rjmp	.-18     	; 0x1620 <vfprintf+0x372>
    1632:	8a 94       	dec	r8
    1634:	f3 01       	movw	r30, r6
    1636:	e8 0d       	add	r30, r8
    1638:	f1 1d       	adc	r31, r1
    163a:	80 81       	ld	r24, Z
    163c:	b6 01       	movw	r22, r12
    163e:	90 e0       	ldi	r25, 0x00	; 0
    1640:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <fputc>
    1644:	81 10       	cpse	r8, r1
    1646:	f5 cf       	rjmp	.-22     	; 0x1632 <vfprintf+0x384>
    1648:	22 20       	and	r2, r2
    164a:	09 f4       	brne	.+2      	; 0x164e <vfprintf+0x3a0>
    164c:	42 ce       	rjmp	.-892    	; 0x12d2 <vfprintf+0x24>
    164e:	b6 01       	movw	r22, r12
    1650:	80 e2       	ldi	r24, 0x20	; 32
    1652:	90 e0       	ldi	r25, 0x00	; 0
    1654:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <fputc>
    1658:	2a 94       	dec	r2
    165a:	f6 cf       	rjmp	.-20     	; 0x1648 <vfprintf+0x39a>
    165c:	f6 01       	movw	r30, r12
    165e:	86 81       	ldd	r24, Z+6	; 0x06
    1660:	97 81       	ldd	r25, Z+7	; 0x07
    1662:	02 c0       	rjmp	.+4      	; 0x1668 <vfprintf+0x3ba>
    1664:	8f ef       	ldi	r24, 0xFF	; 255
    1666:	9f ef       	ldi	r25, 0xFF	; 255
    1668:	2b 96       	adiw	r28, 0x0b	; 11
    166a:	e2 e1       	ldi	r30, 0x12	; 18
    166c:	0c 94 1f 0f 	jmp	0x1e3e	; 0x1e3e <__epilogue_restores__>

00001670 <putval>:
    1670:	20 fd       	sbrc	r18, 0
    1672:	09 c0       	rjmp	.+18     	; 0x1686 <putval+0x16>
    1674:	fc 01       	movw	r30, r24
    1676:	23 fd       	sbrc	r18, 3
    1678:	05 c0       	rjmp	.+10     	; 0x1684 <putval+0x14>
    167a:	22 ff       	sbrs	r18, 2
    167c:	02 c0       	rjmp	.+4      	; 0x1682 <putval+0x12>
    167e:	73 83       	std	Z+3, r23	; 0x03
    1680:	62 83       	std	Z+2, r22	; 0x02
    1682:	51 83       	std	Z+1, r21	; 0x01
    1684:	40 83       	st	Z, r20
    1686:	08 95       	ret

00001688 <mulacc>:
    1688:	44 fd       	sbrc	r20, 4
    168a:	17 c0       	rjmp	.+46     	; 0x16ba <mulacc+0x32>
    168c:	46 fd       	sbrc	r20, 6
    168e:	17 c0       	rjmp	.+46     	; 0x16be <mulacc+0x36>
    1690:	ab 01       	movw	r20, r22
    1692:	bc 01       	movw	r22, r24
    1694:	da 01       	movw	r26, r20
    1696:	fb 01       	movw	r30, r22
    1698:	aa 0f       	add	r26, r26
    169a:	bb 1f       	adc	r27, r27
    169c:	ee 1f       	adc	r30, r30
    169e:	ff 1f       	adc	r31, r31
    16a0:	10 94       	com	r1
    16a2:	d1 f7       	brne	.-12     	; 0x1698 <mulacc+0x10>
    16a4:	4a 0f       	add	r20, r26
    16a6:	5b 1f       	adc	r21, r27
    16a8:	6e 1f       	adc	r22, r30
    16aa:	7f 1f       	adc	r23, r31
    16ac:	cb 01       	movw	r24, r22
    16ae:	ba 01       	movw	r22, r20
    16b0:	66 0f       	add	r22, r22
    16b2:	77 1f       	adc	r23, r23
    16b4:	88 1f       	adc	r24, r24
    16b6:	99 1f       	adc	r25, r25
    16b8:	09 c0       	rjmp	.+18     	; 0x16cc <mulacc+0x44>
    16ba:	33 e0       	ldi	r19, 0x03	; 3
    16bc:	01 c0       	rjmp	.+2      	; 0x16c0 <mulacc+0x38>
    16be:	34 e0       	ldi	r19, 0x04	; 4
    16c0:	66 0f       	add	r22, r22
    16c2:	77 1f       	adc	r23, r23
    16c4:	88 1f       	adc	r24, r24
    16c6:	99 1f       	adc	r25, r25
    16c8:	31 50       	subi	r19, 0x01	; 1
    16ca:	d1 f7       	brne	.-12     	; 0x16c0 <mulacc+0x38>
    16cc:	62 0f       	add	r22, r18
    16ce:	71 1d       	adc	r23, r1
    16d0:	81 1d       	adc	r24, r1
    16d2:	91 1d       	adc	r25, r1
    16d4:	08 95       	ret

000016d6 <skip_spaces>:
    16d6:	0f 93       	push	r16
    16d8:	1f 93       	push	r17
    16da:	cf 93       	push	r28
    16dc:	df 93       	push	r29
    16de:	8c 01       	movw	r16, r24
    16e0:	c8 01       	movw	r24, r16
    16e2:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <fgetc>
    16e6:	ec 01       	movw	r28, r24
    16e8:	97 fd       	sbrc	r25, 7
    16ea:	08 c0       	rjmp	.+16     	; 0x16fc <skip_spaces+0x26>
    16ec:	0e 94 e5 0d 	call	0x1bca	; 0x1bca <isspace>
    16f0:	89 2b       	or	r24, r25
    16f2:	b1 f7       	brne	.-20     	; 0x16e0 <skip_spaces+0xa>
    16f4:	b8 01       	movw	r22, r16
    16f6:	ce 01       	movw	r24, r28
    16f8:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <ungetc>
    16fc:	ce 01       	movw	r24, r28
    16fe:	df 91       	pop	r29
    1700:	cf 91       	pop	r28
    1702:	1f 91       	pop	r17
    1704:	0f 91       	pop	r16
    1706:	08 95       	ret

00001708 <conv_int>:
    1708:	8f 92       	push	r8
    170a:	9f 92       	push	r9
    170c:	af 92       	push	r10
    170e:	bf 92       	push	r11
    1710:	ef 92       	push	r14
    1712:	ff 92       	push	r15
    1714:	0f 93       	push	r16
    1716:	1f 93       	push	r17
    1718:	cf 93       	push	r28
    171a:	df 93       	push	r29
    171c:	8c 01       	movw	r16, r24
    171e:	d6 2f       	mov	r29, r22
    1720:	7a 01       	movw	r14, r20
    1722:	b2 2e       	mov	r11, r18
    1724:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <fgetc>
    1728:	9c 01       	movw	r18, r24
    172a:	33 27       	eor	r19, r19
    172c:	2b 32       	cpi	r18, 0x2B	; 43
    172e:	31 05       	cpc	r19, r1
    1730:	31 f0       	breq	.+12     	; 0x173e <conv_int+0x36>
    1732:	2d 32       	cpi	r18, 0x2D	; 45
    1734:	31 05       	cpc	r19, r1
    1736:	61 f4       	brne	.+24     	; 0x1750 <conv_int+0x48>
    1738:	8b 2d       	mov	r24, r11
    173a:	80 68       	ori	r24, 0x80	; 128
    173c:	b8 2e       	mov	r11, r24
    173e:	d1 50       	subi	r29, 0x01	; 1
    1740:	11 f4       	brne	.+4      	; 0x1746 <conv_int+0x3e>
    1742:	80 e0       	ldi	r24, 0x00	; 0
    1744:	68 c0       	rjmp	.+208    	; 0x1816 <conv_int+0x10e>
    1746:	c8 01       	movw	r24, r16
    1748:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <fgetc>
    174c:	97 fd       	sbrc	r25, 7
    174e:	f9 cf       	rjmp	.-14     	; 0x1742 <conv_int+0x3a>
    1750:	cb 2d       	mov	r28, r11
    1752:	cd 7f       	andi	r28, 0xFD	; 253
    1754:	2b 2d       	mov	r18, r11
    1756:	20 73       	andi	r18, 0x30	; 48
    1758:	09 f5       	brne	.+66     	; 0x179c <conv_int+0x94>
    175a:	80 33       	cpi	r24, 0x30	; 48
    175c:	f9 f4       	brne	.+62     	; 0x179c <conv_int+0x94>
    175e:	aa 24       	eor	r10, r10
    1760:	aa 94       	dec	r10
    1762:	ad 0e       	add	r10, r29
    1764:	09 f4       	brne	.+2      	; 0x1768 <conv_int+0x60>
    1766:	43 c0       	rjmp	.+134    	; 0x17ee <conv_int+0xe6>
    1768:	c8 01       	movw	r24, r16
    176a:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <fgetc>
    176e:	97 fd       	sbrc	r25, 7
    1770:	3e c0       	rjmp	.+124    	; 0x17ee <conv_int+0xe6>
    1772:	9c 01       	movw	r18, r24
    1774:	2f 7d       	andi	r18, 0xDF	; 223
    1776:	33 27       	eor	r19, r19
    1778:	28 35       	cpi	r18, 0x58	; 88
    177a:	31 05       	cpc	r19, r1
    177c:	49 f4       	brne	.+18     	; 0x1790 <conv_int+0x88>
    177e:	c2 64       	ori	r28, 0x42	; 66
    1780:	d2 50       	subi	r29, 0x02	; 2
    1782:	a9 f1       	breq	.+106    	; 0x17ee <conv_int+0xe6>
    1784:	c8 01       	movw	r24, r16
    1786:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <fgetc>
    178a:	97 ff       	sbrs	r25, 7
    178c:	07 c0       	rjmp	.+14     	; 0x179c <conv_int+0x94>
    178e:	2f c0       	rjmp	.+94     	; 0x17ee <conv_int+0xe6>
    1790:	b6 fe       	sbrs	r11, 6
    1792:	02 c0       	rjmp	.+4      	; 0x1798 <conv_int+0x90>
    1794:	c2 60       	ori	r28, 0x02	; 2
    1796:	01 c0       	rjmp	.+2      	; 0x179a <conv_int+0x92>
    1798:	c2 61       	ori	r28, 0x12	; 18
    179a:	da 2d       	mov	r29, r10
    179c:	81 2c       	mov	r8, r1
    179e:	91 2c       	mov	r9, r1
    17a0:	54 01       	movw	r10, r8
    17a2:	20 ed       	ldi	r18, 0xD0	; 208
    17a4:	28 0f       	add	r18, r24
    17a6:	28 30       	cpi	r18, 0x08	; 8
    17a8:	80 f0       	brcs	.+32     	; 0x17ca <conv_int+0xc2>
    17aa:	c4 ff       	sbrs	r28, 4
    17ac:	04 c0       	rjmp	.+8      	; 0x17b6 <conv_int+0xae>
    17ae:	b8 01       	movw	r22, r16
    17b0:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <ungetc>
    17b4:	19 c0       	rjmp	.+50     	; 0x17e8 <conv_int+0xe0>
    17b6:	2a 30       	cpi	r18, 0x0A	; 10
    17b8:	40 f0       	brcs	.+16     	; 0x17ca <conv_int+0xc2>
    17ba:	c6 ff       	sbrs	r28, 6
    17bc:	f8 cf       	rjmp	.-16     	; 0x17ae <conv_int+0xa6>
    17be:	2f 7d       	andi	r18, 0xDF	; 223
    17c0:	3f ee       	ldi	r19, 0xEF	; 239
    17c2:	32 0f       	add	r19, r18
    17c4:	36 30       	cpi	r19, 0x06	; 6
    17c6:	98 f7       	brcc	.-26     	; 0x17ae <conv_int+0xa6>
    17c8:	27 50       	subi	r18, 0x07	; 7
    17ca:	4c 2f       	mov	r20, r28
    17cc:	c5 01       	movw	r24, r10
    17ce:	b4 01       	movw	r22, r8
    17d0:	0e 94 44 0b 	call	0x1688	; 0x1688 <mulacc>
    17d4:	4b 01       	movw	r8, r22
    17d6:	5c 01       	movw	r10, r24
    17d8:	c2 60       	ori	r28, 0x02	; 2
    17da:	d1 50       	subi	r29, 0x01	; 1
    17dc:	59 f0       	breq	.+22     	; 0x17f4 <conv_int+0xec>
    17de:	c8 01       	movw	r24, r16
    17e0:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <fgetc>
    17e4:	97 ff       	sbrs	r25, 7
    17e6:	dd cf       	rjmp	.-70     	; 0x17a2 <conv_int+0x9a>
    17e8:	c1 fd       	sbrc	r28, 1
    17ea:	04 c0       	rjmp	.+8      	; 0x17f4 <conv_int+0xec>
    17ec:	aa cf       	rjmp	.-172    	; 0x1742 <conv_int+0x3a>
    17ee:	81 2c       	mov	r8, r1
    17f0:	91 2c       	mov	r9, r1
    17f2:	54 01       	movw	r10, r8
    17f4:	c7 ff       	sbrs	r28, 7
    17f6:	08 c0       	rjmp	.+16     	; 0x1808 <conv_int+0x100>
    17f8:	b0 94       	com	r11
    17fa:	a0 94       	com	r10
    17fc:	90 94       	com	r9
    17fe:	80 94       	com	r8
    1800:	81 1c       	adc	r8, r1
    1802:	91 1c       	adc	r9, r1
    1804:	a1 1c       	adc	r10, r1
    1806:	b1 1c       	adc	r11, r1
    1808:	2c 2f       	mov	r18, r28
    180a:	b5 01       	movw	r22, r10
    180c:	a4 01       	movw	r20, r8
    180e:	c7 01       	movw	r24, r14
    1810:	0e 94 38 0b 	call	0x1670	; 0x1670 <putval>
    1814:	81 e0       	ldi	r24, 0x01	; 1
    1816:	df 91       	pop	r29
    1818:	cf 91       	pop	r28
    181a:	1f 91       	pop	r17
    181c:	0f 91       	pop	r16
    181e:	ff 90       	pop	r15
    1820:	ef 90       	pop	r14
    1822:	bf 90       	pop	r11
    1824:	af 90       	pop	r10
    1826:	9f 90       	pop	r9
    1828:	8f 90       	pop	r8
    182a:	08 95       	ret

0000182c <conv_brk>:
    182c:	a0 e2       	ldi	r26, 0x20	; 32
    182e:	b0 e0       	ldi	r27, 0x00	; 0
    1830:	ec e1       	ldi	r30, 0x1C	; 28
    1832:	fc e0       	ldi	r31, 0x0C	; 12
    1834:	0c 94 06 0f 	jmp	0x1e0c	; 0x1e0c <__prologue_saves__+0x6>
    1838:	5c 01       	movw	r10, r24
    183a:	96 2e       	mov	r9, r22
    183c:	7a 01       	movw	r14, r20
    183e:	f9 01       	movw	r30, r18
    1840:	8e 01       	movw	r16, r28
    1842:	0f 5f       	subi	r16, 0xFF	; 255
    1844:	1f 4f       	sbci	r17, 0xFF	; 255
    1846:	68 01       	movw	r12, r16
    1848:	80 e2       	ldi	r24, 0x20	; 32
    184a:	d8 01       	movw	r26, r16
    184c:	1d 92       	st	X+, r1
    184e:	8a 95       	dec	r24
    1850:	e9 f7       	brne	.-6      	; 0x184c <conv_brk+0x20>
    1852:	d5 01       	movw	r26, r10
    1854:	13 96       	adiw	r26, 0x03	; 3
    1856:	8c 90       	ld	r8, X
    1858:	80 e0       	ldi	r24, 0x00	; 0
    185a:	90 e0       	ldi	r25, 0x00	; 0
    185c:	61 2c       	mov	r6, r1
    185e:	71 2c       	mov	r7, r1
    1860:	30 e0       	ldi	r19, 0x00	; 0
    1862:	61 e0       	ldi	r22, 0x01	; 1
    1864:	70 e0       	ldi	r23, 0x00	; 0
    1866:	83 fc       	sbrc	r8, 3
    1868:	25 91       	lpm	r18, Z+
    186a:	83 fe       	sbrs	r8, 3
    186c:	21 91       	ld	r18, Z+
    186e:	8f 01       	movw	r16, r30
    1870:	52 2e       	mov	r5, r18
    1872:	21 11       	cpse	r18, r1
    1874:	03 c0       	rjmp	.+6      	; 0x187c <conv_brk+0x50>
    1876:	80 e0       	ldi	r24, 0x00	; 0
    1878:	90 e0       	ldi	r25, 0x00	; 0
    187a:	92 c0       	rjmp	.+292    	; 0x19a0 <conv_brk+0x174>
    187c:	2e 35       	cpi	r18, 0x5E	; 94
    187e:	11 f4       	brne	.+4      	; 0x1884 <conv_brk+0x58>
    1880:	00 97       	sbiw	r24, 0x00	; 0
    1882:	51 f1       	breq	.+84     	; 0x18d8 <conv_brk+0xac>
    1884:	43 2f       	mov	r20, r19
    1886:	50 e0       	ldi	r21, 0x00	; 0
    1888:	48 17       	cp	r20, r24
    188a:	59 07       	cpc	r21, r25
    188c:	3c f4       	brge	.+14     	; 0x189c <conv_brk+0x70>
    188e:	2d 35       	cpi	r18, 0x5D	; 93
    1890:	59 f1       	breq	.+86     	; 0x18e8 <conv_brk+0xbc>
    1892:	2d 32       	cpi	r18, 0x2D	; 45
    1894:	19 f4       	brne	.+6      	; 0x189c <conv_brk+0x70>
    1896:	77 20       	and	r7, r7
    1898:	09 f1       	breq	.+66     	; 0x18dc <conv_brk+0xb0>
    189a:	03 c0       	rjmp	.+6      	; 0x18a2 <conv_brk+0x76>
    189c:	77 20       	and	r7, r7
    189e:	09 f4       	brne	.+2      	; 0x18a2 <conv_brk+0x76>
    18a0:	6a c0       	rjmp	.+212    	; 0x1976 <conv_brk+0x14a>
    18a2:	45 2d       	mov	r20, r5
    18a4:	46 95       	lsr	r20
    18a6:	46 95       	lsr	r20
    18a8:	46 95       	lsr	r20
    18aa:	d6 01       	movw	r26, r12
    18ac:	a4 0f       	add	r26, r20
    18ae:	b1 1d       	adc	r27, r1
    18b0:	45 2d       	mov	r20, r5
    18b2:	47 70       	andi	r20, 0x07	; 7
    18b4:	8b 01       	movw	r16, r22
    18b6:	02 c0       	rjmp	.+4      	; 0x18bc <conv_brk+0x90>
    18b8:	00 0f       	add	r16, r16
    18ba:	11 1f       	adc	r17, r17
    18bc:	4a 95       	dec	r20
    18be:	e2 f7       	brpl	.-8      	; 0x18b8 <conv_brk+0x8c>
    18c0:	a8 01       	movw	r20, r16
    18c2:	5c 91       	ld	r21, X
    18c4:	45 2b       	or	r20, r21
    18c6:	4c 93       	st	X, r20
    18c8:	65 14       	cp	r6, r5
    18ca:	59 f0       	breq	.+22     	; 0x18e2 <conv_brk+0xb6>
    18cc:	56 14       	cp	r5, r6
    18ce:	10 f4       	brcc	.+4      	; 0x18d4 <conv_brk+0xa8>
    18d0:	53 94       	inc	r5
    18d2:	e7 cf       	rjmp	.-50     	; 0x18a2 <conv_brk+0x76>
    18d4:	5a 94       	dec	r5
    18d6:	e5 cf       	rjmp	.-54     	; 0x18a2 <conv_brk+0x76>
    18d8:	31 e0       	ldi	r19, 0x01	; 1
    18da:	04 c0       	rjmp	.+8      	; 0x18e4 <conv_brk+0xb8>
    18dc:	77 24       	eor	r7, r7
    18de:	73 94       	inc	r7
    18e0:	01 c0       	rjmp	.+2      	; 0x18e4 <conv_brk+0xb8>
    18e2:	71 2c       	mov	r7, r1
    18e4:	01 96       	adiw	r24, 0x01	; 1
    18e6:	bf cf       	rjmp	.-130    	; 0x1866 <conv_brk+0x3a>
    18e8:	77 20       	and	r7, r7
    18ea:	19 f0       	breq	.+6      	; 0x18f2 <conv_brk+0xc6>
    18ec:	8e 81       	ldd	r24, Y+6	; 0x06
    18ee:	80 62       	ori	r24, 0x20	; 32
    18f0:	8e 83       	std	Y+6, r24	; 0x06
    18f2:	31 11       	cpse	r19, r1
    18f4:	03 c0       	rjmp	.+6      	; 0x18fc <conv_brk+0xd0>
    18f6:	88 24       	eor	r8, r8
    18f8:	83 94       	inc	r8
    18fa:	17 c0       	rjmp	.+46     	; 0x192a <conv_brk+0xfe>
    18fc:	f6 01       	movw	r30, r12
    18fe:	9e 01       	movw	r18, r28
    1900:	2f 5d       	subi	r18, 0xDF	; 223
    1902:	3f 4f       	sbci	r19, 0xFF	; 255
    1904:	80 81       	ld	r24, Z
    1906:	80 95       	com	r24
    1908:	81 93       	st	Z+, r24
    190a:	2e 17       	cp	r18, r30
    190c:	3f 07       	cpc	r19, r31
    190e:	d1 f7       	brne	.-12     	; 0x1904 <conv_brk+0xd8>
    1910:	f2 cf       	rjmp	.-28     	; 0x18f6 <conv_brk+0xca>
    1912:	e1 14       	cp	r14, r1
    1914:	f1 04       	cpc	r15, r1
    1916:	29 f0       	breq	.+10     	; 0x1922 <conv_brk+0xf6>
    1918:	d7 01       	movw	r26, r14
    191a:	8c 93       	st	X, r24
    191c:	f7 01       	movw	r30, r14
    191e:	31 96       	adiw	r30, 0x01	; 1
    1920:	7f 01       	movw	r14, r30
    1922:	9a 94       	dec	r9
    1924:	81 2c       	mov	r8, r1
    1926:	99 20       	and	r9, r9
    1928:	f9 f0       	breq	.+62     	; 0x1968 <conv_brk+0x13c>
    192a:	c5 01       	movw	r24, r10
    192c:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <fgetc>
    1930:	97 fd       	sbrc	r25, 7
    1932:	18 c0       	rjmp	.+48     	; 0x1964 <conv_brk+0x138>
    1934:	fc 01       	movw	r30, r24
    1936:	ff 27       	eor	r31, r31
    1938:	23 e0       	ldi	r18, 0x03	; 3
    193a:	f5 95       	asr	r31
    193c:	e7 95       	ror	r30
    193e:	2a 95       	dec	r18
    1940:	e1 f7       	brne	.-8      	; 0x193a <conv_brk+0x10e>
    1942:	ec 0d       	add	r30, r12
    1944:	fd 1d       	adc	r31, r13
    1946:	20 81       	ld	r18, Z
    1948:	30 e0       	ldi	r19, 0x00	; 0
    194a:	ac 01       	movw	r20, r24
    194c:	47 70       	andi	r20, 0x07	; 7
    194e:	55 27       	eor	r21, r21
    1950:	02 c0       	rjmp	.+4      	; 0x1956 <conv_brk+0x12a>
    1952:	35 95       	asr	r19
    1954:	27 95       	ror	r18
    1956:	4a 95       	dec	r20
    1958:	e2 f7       	brpl	.-8      	; 0x1952 <conv_brk+0x126>
    195a:	20 fd       	sbrc	r18, 0
    195c:	da cf       	rjmp	.-76     	; 0x1912 <conv_brk+0xe6>
    195e:	b5 01       	movw	r22, r10
    1960:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <ungetc>
    1964:	81 10       	cpse	r8, r1
    1966:	87 cf       	rjmp	.-242    	; 0x1876 <conv_brk+0x4a>
    1968:	e1 14       	cp	r14, r1
    196a:	f1 04       	cpc	r15, r1
    196c:	11 f0       	breq	.+4      	; 0x1972 <conv_brk+0x146>
    196e:	d7 01       	movw	r26, r14
    1970:	1c 92       	st	X, r1
    1972:	c8 01       	movw	r24, r16
    1974:	15 c0       	rjmp	.+42     	; 0x19a0 <conv_brk+0x174>
    1976:	42 2f       	mov	r20, r18
    1978:	46 95       	lsr	r20
    197a:	46 95       	lsr	r20
    197c:	46 95       	lsr	r20
    197e:	d6 01       	movw	r26, r12
    1980:	a4 0f       	add	r26, r20
    1982:	b1 1d       	adc	r27, r1
    1984:	42 2f       	mov	r20, r18
    1986:	47 70       	andi	r20, 0x07	; 7
    1988:	8b 01       	movw	r16, r22
    198a:	02 c0       	rjmp	.+4      	; 0x1990 <conv_brk+0x164>
    198c:	00 0f       	add	r16, r16
    198e:	11 1f       	adc	r17, r17
    1990:	4a 95       	dec	r20
    1992:	e2 f7       	brpl	.-8      	; 0x198c <conv_brk+0x160>
    1994:	a8 01       	movw	r20, r16
    1996:	5c 91       	ld	r21, X
    1998:	45 2b       	or	r20, r21
    199a:	4c 93       	st	X, r20
    199c:	62 2e       	mov	r6, r18
    199e:	a2 cf       	rjmp	.-188    	; 0x18e4 <conv_brk+0xb8>
    19a0:	a0 96       	adiw	r28, 0x20	; 32
    19a2:	ef e0       	ldi	r30, 0x0F	; 15
    19a4:	0c 94 22 0f 	jmp	0x1e44	; 0x1e44 <__epilogue_restores__+0x6>

000019a8 <vfscanf>:
    19a8:	a0 e0       	ldi	r26, 0x00	; 0
    19aa:	b0 e0       	ldi	r27, 0x00	; 0
    19ac:	ea ed       	ldi	r30, 0xDA	; 218
    19ae:	fc e0       	ldi	r31, 0x0C	; 12
    19b0:	0c 94 06 0f 	jmp	0x1e0c	; 0x1e0c <__prologue_saves__+0x6>
    19b4:	6c 01       	movw	r12, r24
    19b6:	eb 01       	movw	r28, r22
    19b8:	5a 01       	movw	r10, r20
    19ba:	fc 01       	movw	r30, r24
    19bc:	17 82       	std	Z+7, r1	; 0x07
    19be:	16 82       	std	Z+6, r1	; 0x06
    19c0:	51 2c       	mov	r5, r1
    19c2:	f6 01       	movw	r30, r12
    19c4:	e3 80       	ldd	r14, Z+3	; 0x03
    19c6:	fe 01       	movw	r30, r28
    19c8:	e3 fc       	sbrc	r14, 3
    19ca:	85 91       	lpm	r24, Z+
    19cc:	e3 fe       	sbrs	r14, 3
    19ce:	81 91       	ld	r24, Z+
    19d0:	18 2f       	mov	r17, r24
    19d2:	ef 01       	movw	r28, r30
    19d4:	88 23       	and	r24, r24
    19d6:	09 f4       	brne	.+2      	; 0x19da <vfscanf+0x32>
    19d8:	ee c0       	rjmp	.+476    	; 0x1bb6 <vfscanf+0x20e>
    19da:	90 e0       	ldi	r25, 0x00	; 0
    19dc:	0e 94 e5 0d 	call	0x1bca	; 0x1bca <isspace>
    19e0:	89 2b       	or	r24, r25
    19e2:	21 f0       	breq	.+8      	; 0x19ec <vfscanf+0x44>
    19e4:	c6 01       	movw	r24, r12
    19e6:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <skip_spaces>
    19ea:	eb cf       	rjmp	.-42     	; 0x19c2 <vfscanf+0x1a>
    19ec:	15 32       	cpi	r17, 0x25	; 37
    19ee:	41 f4       	brne	.+16     	; 0x1a00 <vfscanf+0x58>
    19f0:	fe 01       	movw	r30, r28
    19f2:	e3 fc       	sbrc	r14, 3
    19f4:	15 91       	lpm	r17, Z+
    19f6:	e3 fe       	sbrs	r14, 3
    19f8:	11 91       	ld	r17, Z+
    19fa:	ef 01       	movw	r28, r30
    19fc:	15 32       	cpi	r17, 0x25	; 37
    19fe:	81 f4       	brne	.+32     	; 0x1a20 <vfscanf+0x78>
    1a00:	c6 01       	movw	r24, r12
    1a02:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <fgetc>
    1a06:	97 fd       	sbrc	r25, 7
    1a08:	d4 c0       	rjmp	.+424    	; 0x1bb2 <vfscanf+0x20a>
    1a0a:	41 2f       	mov	r20, r17
    1a0c:	50 e0       	ldi	r21, 0x00	; 0
    1a0e:	9c 01       	movw	r18, r24
    1a10:	33 27       	eor	r19, r19
    1a12:	24 17       	cp	r18, r20
    1a14:	35 07       	cpc	r19, r21
    1a16:	a9 f2       	breq	.-86     	; 0x19c2 <vfscanf+0x1a>
    1a18:	b6 01       	movw	r22, r12
    1a1a:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <ungetc>
    1a1e:	cb c0       	rjmp	.+406    	; 0x1bb6 <vfscanf+0x20e>
    1a20:	1a 32       	cpi	r17, 0x2A	; 42
    1a22:	39 f4       	brne	.+14     	; 0x1a32 <vfscanf+0x8a>
    1a24:	e3 fc       	sbrc	r14, 3
    1a26:	15 91       	lpm	r17, Z+
    1a28:	e3 fe       	sbrs	r14, 3
    1a2a:	11 91       	ld	r17, Z+
    1a2c:	ef 01       	movw	r28, r30
    1a2e:	01 e0       	ldi	r16, 0x01	; 1
    1a30:	01 c0       	rjmp	.+2      	; 0x1a34 <vfscanf+0x8c>
    1a32:	00 e0       	ldi	r16, 0x00	; 0
    1a34:	f1 2c       	mov	r15, r1
    1a36:	20 ed       	ldi	r18, 0xD0	; 208
    1a38:	21 0f       	add	r18, r17
    1a3a:	2a 30       	cpi	r18, 0x0A	; 10
    1a3c:	80 f4       	brcc	.+32     	; 0x1a5e <vfscanf+0xb6>
    1a3e:	02 60       	ori	r16, 0x02	; 2
    1a40:	6f 2d       	mov	r22, r15
    1a42:	70 e0       	ldi	r23, 0x00	; 0
    1a44:	80 e0       	ldi	r24, 0x00	; 0
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	40 e2       	ldi	r20, 0x20	; 32
    1a4a:	0e 94 44 0b 	call	0x1688	; 0x1688 <mulacc>
    1a4e:	f6 2e       	mov	r15, r22
    1a50:	fe 01       	movw	r30, r28
    1a52:	e3 fc       	sbrc	r14, 3
    1a54:	15 91       	lpm	r17, Z+
    1a56:	e3 fe       	sbrs	r14, 3
    1a58:	11 91       	ld	r17, Z+
    1a5a:	ef 01       	movw	r28, r30
    1a5c:	ec cf       	rjmp	.-40     	; 0x1a36 <vfscanf+0x8e>
    1a5e:	01 ff       	sbrs	r16, 1
    1a60:	03 c0       	rjmp	.+6      	; 0x1a68 <vfscanf+0xc0>
    1a62:	f1 10       	cpse	r15, r1
    1a64:	03 c0       	rjmp	.+6      	; 0x1a6c <vfscanf+0xc4>
    1a66:	a7 c0       	rjmp	.+334    	; 0x1bb6 <vfscanf+0x20e>
    1a68:	ff 24       	eor	r15, r15
    1a6a:	fa 94       	dec	r15
    1a6c:	18 36       	cpi	r17, 0x68	; 104
    1a6e:	19 f0       	breq	.+6      	; 0x1a76 <vfscanf+0xce>
    1a70:	1c 36       	cpi	r17, 0x6C	; 108
    1a72:	51 f0       	breq	.+20     	; 0x1a88 <vfscanf+0xe0>
    1a74:	10 c0       	rjmp	.+32     	; 0x1a96 <vfscanf+0xee>
    1a76:	fe 01       	movw	r30, r28
    1a78:	e3 fc       	sbrc	r14, 3
    1a7a:	15 91       	lpm	r17, Z+
    1a7c:	e3 fe       	sbrs	r14, 3
    1a7e:	11 91       	ld	r17, Z+
    1a80:	ef 01       	movw	r28, r30
    1a82:	18 36       	cpi	r17, 0x68	; 104
    1a84:	41 f4       	brne	.+16     	; 0x1a96 <vfscanf+0xee>
    1a86:	08 60       	ori	r16, 0x08	; 8
    1a88:	04 60       	ori	r16, 0x04	; 4
    1a8a:	fe 01       	movw	r30, r28
    1a8c:	e3 fc       	sbrc	r14, 3
    1a8e:	15 91       	lpm	r17, Z+
    1a90:	e3 fe       	sbrs	r14, 3
    1a92:	11 91       	ld	r17, Z+
    1a94:	ef 01       	movw	r28, r30
    1a96:	11 23       	and	r17, r17
    1a98:	09 f4       	brne	.+2      	; 0x1a9c <vfscanf+0xf4>
    1a9a:	8d c0       	rjmp	.+282    	; 0x1bb6 <vfscanf+0x20e>
    1a9c:	61 2f       	mov	r22, r17
    1a9e:	70 e0       	ldi	r23, 0x00	; 0
    1aa0:	86 e0       	ldi	r24, 0x06	; 6
    1aa2:	91 e0       	ldi	r25, 0x01	; 1
    1aa4:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <strchr_P>
    1aa8:	89 2b       	or	r24, r25
    1aaa:	09 f4       	brne	.+2      	; 0x1aae <vfscanf+0x106>
    1aac:	84 c0       	rjmp	.+264    	; 0x1bb6 <vfscanf+0x20e>
    1aae:	00 fd       	sbrc	r16, 0
    1ab0:	07 c0       	rjmp	.+14     	; 0x1ac0 <vfscanf+0x118>
    1ab2:	f5 01       	movw	r30, r10
    1ab4:	80 80       	ld	r8, Z
    1ab6:	91 80       	ldd	r9, Z+1	; 0x01
    1ab8:	c5 01       	movw	r24, r10
    1aba:	02 96       	adiw	r24, 0x02	; 2
    1abc:	5c 01       	movw	r10, r24
    1abe:	02 c0       	rjmp	.+4      	; 0x1ac4 <vfscanf+0x11c>
    1ac0:	81 2c       	mov	r8, r1
    1ac2:	91 2c       	mov	r9, r1
    1ac4:	1e 36       	cpi	r17, 0x6E	; 110
    1ac6:	51 f4       	brne	.+20     	; 0x1adc <vfscanf+0x134>
    1ac8:	f6 01       	movw	r30, r12
    1aca:	46 81       	ldd	r20, Z+6	; 0x06
    1acc:	57 81       	ldd	r21, Z+7	; 0x07
    1ace:	60 e0       	ldi	r22, 0x00	; 0
    1ad0:	70 e0       	ldi	r23, 0x00	; 0
    1ad2:	20 2f       	mov	r18, r16
    1ad4:	c4 01       	movw	r24, r8
    1ad6:	0e 94 38 0b 	call	0x1670	; 0x1670 <putval>
    1ada:	73 cf       	rjmp	.-282    	; 0x19c2 <vfscanf+0x1a>
    1adc:	13 36       	cpi	r17, 0x63	; 99
    1ade:	a9 f4       	brne	.+42     	; 0x1b0a <vfscanf+0x162>
    1ae0:	01 fd       	sbrc	r16, 1
    1ae2:	02 c0       	rjmp	.+4      	; 0x1ae8 <vfscanf+0x140>
    1ae4:	ff 24       	eor	r15, r15
    1ae6:	f3 94       	inc	r15
    1ae8:	c6 01       	movw	r24, r12
    1aea:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <fgetc>
    1aee:	97 fd       	sbrc	r25, 7
    1af0:	60 c0       	rjmp	.+192    	; 0x1bb2 <vfscanf+0x20a>
    1af2:	81 14       	cp	r8, r1
    1af4:	91 04       	cpc	r9, r1
    1af6:	29 f0       	breq	.+10     	; 0x1b02 <vfscanf+0x15a>
    1af8:	f4 01       	movw	r30, r8
    1afa:	80 83       	st	Z, r24
    1afc:	c4 01       	movw	r24, r8
    1afe:	01 96       	adiw	r24, 0x01	; 1
    1b00:	4c 01       	movw	r8, r24
    1b02:	fa 94       	dec	r15
    1b04:	f1 10       	cpse	r15, r1
    1b06:	f0 cf       	rjmp	.-32     	; 0x1ae8 <vfscanf+0x140>
    1b08:	50 c0       	rjmp	.+160    	; 0x1baa <vfscanf+0x202>
    1b0a:	1b 35       	cpi	r17, 0x5B	; 91
    1b0c:	59 f4       	brne	.+22     	; 0x1b24 <vfscanf+0x17c>
    1b0e:	9e 01       	movw	r18, r28
    1b10:	a4 01       	movw	r20, r8
    1b12:	6f 2d       	mov	r22, r15
    1b14:	c6 01       	movw	r24, r12
    1b16:	0e 94 16 0c 	call	0x182c	; 0x182c <conv_brk>
    1b1a:	ec 01       	movw	r28, r24
    1b1c:	89 2b       	or	r24, r25
    1b1e:	09 f0       	breq	.+2      	; 0x1b22 <vfscanf+0x17a>
    1b20:	44 c0       	rjmp	.+136    	; 0x1baa <vfscanf+0x202>
    1b22:	3e c0       	rjmp	.+124    	; 0x1ba0 <vfscanf+0x1f8>
    1b24:	c6 01       	movw	r24, r12
    1b26:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <skip_spaces>
    1b2a:	97 fd       	sbrc	r25, 7
    1b2c:	42 c0       	rjmp	.+132    	; 0x1bb2 <vfscanf+0x20a>
    1b2e:	1f 36       	cpi	r17, 0x6F	; 111
    1b30:	61 f1       	breq	.+88     	; 0x1b8a <vfscanf+0x1e2>
    1b32:	28 f4       	brcc	.+10     	; 0x1b3e <vfscanf+0x196>
    1b34:	14 36       	cpi	r17, 0x64	; 100
    1b36:	39 f1       	breq	.+78     	; 0x1b86 <vfscanf+0x1de>
    1b38:	19 36       	cpi	r17, 0x69	; 105
    1b3a:	51 f1       	breq	.+84     	; 0x1b90 <vfscanf+0x1e8>
    1b3c:	28 c0       	rjmp	.+80     	; 0x1b8e <vfscanf+0x1e6>
    1b3e:	13 37       	cpi	r17, 0x73	; 115
    1b40:	71 f0       	breq	.+28     	; 0x1b5e <vfscanf+0x1b6>
    1b42:	15 37       	cpi	r17, 0x75	; 117
    1b44:	01 f1       	breq	.+64     	; 0x1b86 <vfscanf+0x1de>
    1b46:	23 c0       	rjmp	.+70     	; 0x1b8e <vfscanf+0x1e6>
    1b48:	81 14       	cp	r8, r1
    1b4a:	91 04       	cpc	r9, r1
    1b4c:	29 f0       	breq	.+10     	; 0x1b58 <vfscanf+0x1b0>
    1b4e:	f4 01       	movw	r30, r8
    1b50:	60 82       	st	Z, r6
    1b52:	c4 01       	movw	r24, r8
    1b54:	01 96       	adiw	r24, 0x01	; 1
    1b56:	4c 01       	movw	r8, r24
    1b58:	fa 94       	dec	r15
    1b5a:	ff 20       	and	r15, r15
    1b5c:	71 f0       	breq	.+28     	; 0x1b7a <vfscanf+0x1d2>
    1b5e:	c6 01       	movw	r24, r12
    1b60:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <fgetc>
    1b64:	3c 01       	movw	r6, r24
    1b66:	97 fd       	sbrc	r25, 7
    1b68:	08 c0       	rjmp	.+16     	; 0x1b7a <vfscanf+0x1d2>
    1b6a:	0e 94 e5 0d 	call	0x1bca	; 0x1bca <isspace>
    1b6e:	89 2b       	or	r24, r25
    1b70:	59 f3       	breq	.-42     	; 0x1b48 <vfscanf+0x1a0>
    1b72:	b6 01       	movw	r22, r12
    1b74:	c3 01       	movw	r24, r6
    1b76:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <ungetc>
    1b7a:	81 14       	cp	r8, r1
    1b7c:	91 04       	cpc	r9, r1
    1b7e:	a9 f0       	breq	.+42     	; 0x1baa <vfscanf+0x202>
    1b80:	f4 01       	movw	r30, r8
    1b82:	10 82       	st	Z, r1
    1b84:	12 c0       	rjmp	.+36     	; 0x1baa <vfscanf+0x202>
    1b86:	00 62       	ori	r16, 0x20	; 32
    1b88:	03 c0       	rjmp	.+6      	; 0x1b90 <vfscanf+0x1e8>
    1b8a:	00 61       	ori	r16, 0x10	; 16
    1b8c:	01 c0       	rjmp	.+2      	; 0x1b90 <vfscanf+0x1e8>
    1b8e:	00 64       	ori	r16, 0x40	; 64
    1b90:	20 2f       	mov	r18, r16
    1b92:	a4 01       	movw	r20, r8
    1b94:	6f 2d       	mov	r22, r15
    1b96:	c6 01       	movw	r24, r12
    1b98:	0e 94 84 0b 	call	0x1708	; 0x1708 <conv_int>
    1b9c:	81 11       	cpse	r24, r1
    1b9e:	05 c0       	rjmp	.+10     	; 0x1baa <vfscanf+0x202>
    1ba0:	f6 01       	movw	r30, r12
    1ba2:	83 81       	ldd	r24, Z+3	; 0x03
    1ba4:	80 73       	andi	r24, 0x30	; 48
    1ba6:	29 f4       	brne	.+10     	; 0x1bb2 <vfscanf+0x20a>
    1ba8:	06 c0       	rjmp	.+12     	; 0x1bb6 <vfscanf+0x20e>
    1baa:	00 fd       	sbrc	r16, 0
    1bac:	0a cf       	rjmp	.-492    	; 0x19c2 <vfscanf+0x1a>
    1bae:	53 94       	inc	r5
    1bb0:	08 cf       	rjmp	.-496    	; 0x19c2 <vfscanf+0x1a>
    1bb2:	55 20       	and	r5, r5
    1bb4:	19 f0       	breq	.+6      	; 0x1bbc <vfscanf+0x214>
    1bb6:	85 2d       	mov	r24, r5
    1bb8:	90 e0       	ldi	r25, 0x00	; 0
    1bba:	02 c0       	rjmp	.+4      	; 0x1bc0 <vfscanf+0x218>
    1bbc:	8f ef       	ldi	r24, 0xFF	; 255
    1bbe:	9f ef       	ldi	r25, 0xFF	; 255
    1bc0:	cd b7       	in	r28, 0x3d	; 61
    1bc2:	de b7       	in	r29, 0x3e	; 62
    1bc4:	ef e0       	ldi	r30, 0x0F	; 15
    1bc6:	0c 94 22 0f 	jmp	0x1e44	; 0x1e44 <__epilogue_restores__+0x6>

00001bca <isspace>:
    1bca:	91 11       	cpse	r25, r1
    1bcc:	0c 94 00 0f 	jmp	0x1e00	; 0x1e00 <__ctype_isfalse>
    1bd0:	80 32       	cpi	r24, 0x20	; 32
    1bd2:	19 f0       	breq	.+6      	; 0x1bda <isspace+0x10>
    1bd4:	89 50       	subi	r24, 0x09	; 9
    1bd6:	85 50       	subi	r24, 0x05	; 5
    1bd8:	c8 f7       	brcc	.-14     	; 0x1bcc <isspace+0x2>
    1bda:	08 95       	ret

00001bdc <strchr_P>:
    1bdc:	fc 01       	movw	r30, r24
    1bde:	05 90       	lpm	r0, Z+
    1be0:	06 16       	cp	r0, r22
    1be2:	21 f0       	breq	.+8      	; 0x1bec <strchr_P+0x10>
    1be4:	00 20       	and	r0, r0
    1be6:	d9 f7       	brne	.-10     	; 0x1bde <strchr_P+0x2>
    1be8:	c0 01       	movw	r24, r0
    1bea:	08 95       	ret
    1bec:	31 97       	sbiw	r30, 0x01	; 1
    1bee:	cf 01       	movw	r24, r30
    1bf0:	08 95       	ret

00001bf2 <strnlen_P>:
    1bf2:	fc 01       	movw	r30, r24
    1bf4:	05 90       	lpm	r0, Z+
    1bf6:	61 50       	subi	r22, 0x01	; 1
    1bf8:	70 40       	sbci	r23, 0x00	; 0
    1bfa:	01 10       	cpse	r0, r1
    1bfc:	d8 f7       	brcc	.-10     	; 0x1bf4 <strnlen_P+0x2>
    1bfe:	80 95       	com	r24
    1c00:	90 95       	com	r25
    1c02:	8e 0f       	add	r24, r30
    1c04:	9f 1f       	adc	r25, r31
    1c06:	08 95       	ret

00001c08 <strnlen>:
    1c08:	fc 01       	movw	r30, r24
    1c0a:	61 50       	subi	r22, 0x01	; 1
    1c0c:	70 40       	sbci	r23, 0x00	; 0
    1c0e:	01 90       	ld	r0, Z+
    1c10:	01 10       	cpse	r0, r1
    1c12:	d8 f7       	brcc	.-10     	; 0x1c0a <strnlen+0x2>
    1c14:	80 95       	com	r24
    1c16:	90 95       	com	r25
    1c18:	8e 0f       	add	r24, r30
    1c1a:	9f 1f       	adc	r25, r31
    1c1c:	08 95       	ret

00001c1e <fgetc>:
    1c1e:	cf 93       	push	r28
    1c20:	df 93       	push	r29
    1c22:	ec 01       	movw	r28, r24
    1c24:	2b 81       	ldd	r18, Y+3	; 0x03
    1c26:	20 ff       	sbrs	r18, 0
    1c28:	33 c0       	rjmp	.+102    	; 0x1c90 <fgetc+0x72>
    1c2a:	26 ff       	sbrs	r18, 6
    1c2c:	0a c0       	rjmp	.+20     	; 0x1c42 <fgetc+0x24>
    1c2e:	2f 7b       	andi	r18, 0xBF	; 191
    1c30:	2b 83       	std	Y+3, r18	; 0x03
    1c32:	8e 81       	ldd	r24, Y+6	; 0x06
    1c34:	9f 81       	ldd	r25, Y+7	; 0x07
    1c36:	01 96       	adiw	r24, 0x01	; 1
    1c38:	9f 83       	std	Y+7, r25	; 0x07
    1c3a:	8e 83       	std	Y+6, r24	; 0x06
    1c3c:	8a 81       	ldd	r24, Y+2	; 0x02
    1c3e:	90 e0       	ldi	r25, 0x00	; 0
    1c40:	29 c0       	rjmp	.+82     	; 0x1c94 <fgetc+0x76>
    1c42:	22 ff       	sbrs	r18, 2
    1c44:	0f c0       	rjmp	.+30     	; 0x1c64 <fgetc+0x46>
    1c46:	e8 81       	ld	r30, Y
    1c48:	f9 81       	ldd	r31, Y+1	; 0x01
    1c4a:	80 81       	ld	r24, Z
    1c4c:	08 2e       	mov	r0, r24
    1c4e:	00 0c       	add	r0, r0
    1c50:	99 0b       	sbc	r25, r25
    1c52:	00 97       	sbiw	r24, 0x00	; 0
    1c54:	19 f4       	brne	.+6      	; 0x1c5c <fgetc+0x3e>
    1c56:	20 62       	ori	r18, 0x20	; 32
    1c58:	2b 83       	std	Y+3, r18	; 0x03
    1c5a:	1a c0       	rjmp	.+52     	; 0x1c90 <fgetc+0x72>
    1c5c:	31 96       	adiw	r30, 0x01	; 1
    1c5e:	f9 83       	std	Y+1, r31	; 0x01
    1c60:	e8 83       	st	Y, r30
    1c62:	0e c0       	rjmp	.+28     	; 0x1c80 <fgetc+0x62>
    1c64:	ea 85       	ldd	r30, Y+10	; 0x0a
    1c66:	fb 85       	ldd	r31, Y+11	; 0x0b
    1c68:	09 95       	icall
    1c6a:	97 ff       	sbrs	r25, 7
    1c6c:	09 c0       	rjmp	.+18     	; 0x1c80 <fgetc+0x62>
    1c6e:	2b 81       	ldd	r18, Y+3	; 0x03
    1c70:	01 96       	adiw	r24, 0x01	; 1
    1c72:	11 f0       	breq	.+4      	; 0x1c78 <fgetc+0x5a>
    1c74:	80 e2       	ldi	r24, 0x20	; 32
    1c76:	01 c0       	rjmp	.+2      	; 0x1c7a <fgetc+0x5c>
    1c78:	80 e1       	ldi	r24, 0x10	; 16
    1c7a:	82 2b       	or	r24, r18
    1c7c:	8b 83       	std	Y+3, r24	; 0x03
    1c7e:	08 c0       	rjmp	.+16     	; 0x1c90 <fgetc+0x72>
    1c80:	2e 81       	ldd	r18, Y+6	; 0x06
    1c82:	3f 81       	ldd	r19, Y+7	; 0x07
    1c84:	2f 5f       	subi	r18, 0xFF	; 255
    1c86:	3f 4f       	sbci	r19, 0xFF	; 255
    1c88:	3f 83       	std	Y+7, r19	; 0x07
    1c8a:	2e 83       	std	Y+6, r18	; 0x06
    1c8c:	99 27       	eor	r25, r25
    1c8e:	02 c0       	rjmp	.+4      	; 0x1c94 <fgetc+0x76>
    1c90:	8f ef       	ldi	r24, 0xFF	; 255
    1c92:	9f ef       	ldi	r25, 0xFF	; 255
    1c94:	df 91       	pop	r29
    1c96:	cf 91       	pop	r28
    1c98:	08 95       	ret

00001c9a <fputc>:
    1c9a:	0f 93       	push	r16
    1c9c:	1f 93       	push	r17
    1c9e:	cf 93       	push	r28
    1ca0:	df 93       	push	r29
    1ca2:	fb 01       	movw	r30, r22
    1ca4:	23 81       	ldd	r18, Z+3	; 0x03
    1ca6:	21 fd       	sbrc	r18, 1
    1ca8:	03 c0       	rjmp	.+6      	; 0x1cb0 <fputc+0x16>
    1caa:	8f ef       	ldi	r24, 0xFF	; 255
    1cac:	9f ef       	ldi	r25, 0xFF	; 255
    1cae:	2c c0       	rjmp	.+88     	; 0x1d08 <fputc+0x6e>
    1cb0:	22 ff       	sbrs	r18, 2
    1cb2:	16 c0       	rjmp	.+44     	; 0x1ce0 <fputc+0x46>
    1cb4:	46 81       	ldd	r20, Z+6	; 0x06
    1cb6:	57 81       	ldd	r21, Z+7	; 0x07
    1cb8:	24 81       	ldd	r18, Z+4	; 0x04
    1cba:	35 81       	ldd	r19, Z+5	; 0x05
    1cbc:	42 17       	cp	r20, r18
    1cbe:	53 07       	cpc	r21, r19
    1cc0:	44 f4       	brge	.+16     	; 0x1cd2 <fputc+0x38>
    1cc2:	a0 81       	ld	r26, Z
    1cc4:	b1 81       	ldd	r27, Z+1	; 0x01
    1cc6:	9d 01       	movw	r18, r26
    1cc8:	2f 5f       	subi	r18, 0xFF	; 255
    1cca:	3f 4f       	sbci	r19, 0xFF	; 255
    1ccc:	31 83       	std	Z+1, r19	; 0x01
    1cce:	20 83       	st	Z, r18
    1cd0:	8c 93       	st	X, r24
    1cd2:	26 81       	ldd	r18, Z+6	; 0x06
    1cd4:	37 81       	ldd	r19, Z+7	; 0x07
    1cd6:	2f 5f       	subi	r18, 0xFF	; 255
    1cd8:	3f 4f       	sbci	r19, 0xFF	; 255
    1cda:	37 83       	std	Z+7, r19	; 0x07
    1cdc:	26 83       	std	Z+6, r18	; 0x06
    1cde:	14 c0       	rjmp	.+40     	; 0x1d08 <fputc+0x6e>
    1ce0:	8b 01       	movw	r16, r22
    1ce2:	ec 01       	movw	r28, r24
    1ce4:	fb 01       	movw	r30, r22
    1ce6:	00 84       	ldd	r0, Z+8	; 0x08
    1ce8:	f1 85       	ldd	r31, Z+9	; 0x09
    1cea:	e0 2d       	mov	r30, r0
    1cec:	09 95       	icall
    1cee:	89 2b       	or	r24, r25
    1cf0:	e1 f6       	brne	.-72     	; 0x1caa <fputc+0x10>
    1cf2:	d8 01       	movw	r26, r16
    1cf4:	16 96       	adiw	r26, 0x06	; 6
    1cf6:	8d 91       	ld	r24, X+
    1cf8:	9c 91       	ld	r25, X
    1cfa:	17 97       	sbiw	r26, 0x07	; 7
    1cfc:	01 96       	adiw	r24, 0x01	; 1
    1cfe:	17 96       	adiw	r26, 0x07	; 7
    1d00:	9c 93       	st	X, r25
    1d02:	8e 93       	st	-X, r24
    1d04:	16 97       	sbiw	r26, 0x06	; 6
    1d06:	ce 01       	movw	r24, r28
    1d08:	df 91       	pop	r29
    1d0a:	cf 91       	pop	r28
    1d0c:	1f 91       	pop	r17
    1d0e:	0f 91       	pop	r16
    1d10:	08 95       	ret

00001d12 <ungetc>:
    1d12:	fb 01       	movw	r30, r22
    1d14:	23 81       	ldd	r18, Z+3	; 0x03
    1d16:	20 ff       	sbrs	r18, 0
    1d18:	12 c0       	rjmp	.+36     	; 0x1d3e <ungetc+0x2c>
    1d1a:	26 fd       	sbrc	r18, 6
    1d1c:	10 c0       	rjmp	.+32     	; 0x1d3e <ungetc+0x2c>
    1d1e:	8f 3f       	cpi	r24, 0xFF	; 255
    1d20:	3f ef       	ldi	r19, 0xFF	; 255
    1d22:	93 07       	cpc	r25, r19
    1d24:	61 f0       	breq	.+24     	; 0x1d3e <ungetc+0x2c>
    1d26:	82 83       	std	Z+2, r24	; 0x02
    1d28:	2f 7d       	andi	r18, 0xDF	; 223
    1d2a:	20 64       	ori	r18, 0x40	; 64
    1d2c:	23 83       	std	Z+3, r18	; 0x03
    1d2e:	26 81       	ldd	r18, Z+6	; 0x06
    1d30:	37 81       	ldd	r19, Z+7	; 0x07
    1d32:	21 50       	subi	r18, 0x01	; 1
    1d34:	31 09       	sbc	r19, r1
    1d36:	37 83       	std	Z+7, r19	; 0x07
    1d38:	26 83       	std	Z+6, r18	; 0x06
    1d3a:	99 27       	eor	r25, r25
    1d3c:	08 95       	ret
    1d3e:	8f ef       	ldi	r24, 0xFF	; 255
    1d40:	9f ef       	ldi	r25, 0xFF	; 255
    1d42:	08 95       	ret

00001d44 <__ultoa_invert>:
    1d44:	fa 01       	movw	r30, r20
    1d46:	aa 27       	eor	r26, r26
    1d48:	28 30       	cpi	r18, 0x08	; 8
    1d4a:	51 f1       	breq	.+84     	; 0x1da0 <__ultoa_invert+0x5c>
    1d4c:	20 31       	cpi	r18, 0x10	; 16
    1d4e:	81 f1       	breq	.+96     	; 0x1db0 <__ultoa_invert+0x6c>
    1d50:	e8 94       	clt
    1d52:	6f 93       	push	r22
    1d54:	6e 7f       	andi	r22, 0xFE	; 254
    1d56:	6e 5f       	subi	r22, 0xFE	; 254
    1d58:	7f 4f       	sbci	r23, 0xFF	; 255
    1d5a:	8f 4f       	sbci	r24, 0xFF	; 255
    1d5c:	9f 4f       	sbci	r25, 0xFF	; 255
    1d5e:	af 4f       	sbci	r26, 0xFF	; 255
    1d60:	b1 e0       	ldi	r27, 0x01	; 1
    1d62:	3e d0       	rcall	.+124    	; 0x1de0 <__ultoa_invert+0x9c>
    1d64:	b4 e0       	ldi	r27, 0x04	; 4
    1d66:	3c d0       	rcall	.+120    	; 0x1de0 <__ultoa_invert+0x9c>
    1d68:	67 0f       	add	r22, r23
    1d6a:	78 1f       	adc	r23, r24
    1d6c:	89 1f       	adc	r24, r25
    1d6e:	9a 1f       	adc	r25, r26
    1d70:	a1 1d       	adc	r26, r1
    1d72:	68 0f       	add	r22, r24
    1d74:	79 1f       	adc	r23, r25
    1d76:	8a 1f       	adc	r24, r26
    1d78:	91 1d       	adc	r25, r1
    1d7a:	a1 1d       	adc	r26, r1
    1d7c:	6a 0f       	add	r22, r26
    1d7e:	71 1d       	adc	r23, r1
    1d80:	81 1d       	adc	r24, r1
    1d82:	91 1d       	adc	r25, r1
    1d84:	a1 1d       	adc	r26, r1
    1d86:	20 d0       	rcall	.+64     	; 0x1dc8 <__ultoa_invert+0x84>
    1d88:	09 f4       	brne	.+2      	; 0x1d8c <__ultoa_invert+0x48>
    1d8a:	68 94       	set
    1d8c:	3f 91       	pop	r19
    1d8e:	2a e0       	ldi	r18, 0x0A	; 10
    1d90:	26 9f       	mul	r18, r22
    1d92:	11 24       	eor	r1, r1
    1d94:	30 19       	sub	r19, r0
    1d96:	30 5d       	subi	r19, 0xD0	; 208
    1d98:	31 93       	st	Z+, r19
    1d9a:	de f6       	brtc	.-74     	; 0x1d52 <__ultoa_invert+0xe>
    1d9c:	cf 01       	movw	r24, r30
    1d9e:	08 95       	ret
    1da0:	46 2f       	mov	r20, r22
    1da2:	47 70       	andi	r20, 0x07	; 7
    1da4:	40 5d       	subi	r20, 0xD0	; 208
    1da6:	41 93       	st	Z+, r20
    1da8:	b3 e0       	ldi	r27, 0x03	; 3
    1daa:	0f d0       	rcall	.+30     	; 0x1dca <__ultoa_invert+0x86>
    1dac:	c9 f7       	brne	.-14     	; 0x1da0 <__ultoa_invert+0x5c>
    1dae:	f6 cf       	rjmp	.-20     	; 0x1d9c <__ultoa_invert+0x58>
    1db0:	46 2f       	mov	r20, r22
    1db2:	4f 70       	andi	r20, 0x0F	; 15
    1db4:	40 5d       	subi	r20, 0xD0	; 208
    1db6:	4a 33       	cpi	r20, 0x3A	; 58
    1db8:	18 f0       	brcs	.+6      	; 0x1dc0 <__ultoa_invert+0x7c>
    1dba:	49 5d       	subi	r20, 0xD9	; 217
    1dbc:	31 fd       	sbrc	r19, 1
    1dbe:	40 52       	subi	r20, 0x20	; 32
    1dc0:	41 93       	st	Z+, r20
    1dc2:	02 d0       	rcall	.+4      	; 0x1dc8 <__ultoa_invert+0x84>
    1dc4:	a9 f7       	brne	.-22     	; 0x1db0 <__ultoa_invert+0x6c>
    1dc6:	ea cf       	rjmp	.-44     	; 0x1d9c <__ultoa_invert+0x58>
    1dc8:	b4 e0       	ldi	r27, 0x04	; 4
    1dca:	a6 95       	lsr	r26
    1dcc:	97 95       	ror	r25
    1dce:	87 95       	ror	r24
    1dd0:	77 95       	ror	r23
    1dd2:	67 95       	ror	r22
    1dd4:	ba 95       	dec	r27
    1dd6:	c9 f7       	brne	.-14     	; 0x1dca <__ultoa_invert+0x86>
    1dd8:	00 97       	sbiw	r24, 0x00	; 0
    1dda:	61 05       	cpc	r22, r1
    1ddc:	71 05       	cpc	r23, r1
    1dde:	08 95       	ret
    1de0:	9b 01       	movw	r18, r22
    1de2:	ac 01       	movw	r20, r24
    1de4:	0a 2e       	mov	r0, r26
    1de6:	06 94       	lsr	r0
    1de8:	57 95       	ror	r21
    1dea:	47 95       	ror	r20
    1dec:	37 95       	ror	r19
    1dee:	27 95       	ror	r18
    1df0:	ba 95       	dec	r27
    1df2:	c9 f7       	brne	.-14     	; 0x1de6 <__ultoa_invert+0xa2>
    1df4:	62 0f       	add	r22, r18
    1df6:	73 1f       	adc	r23, r19
    1df8:	84 1f       	adc	r24, r20
    1dfa:	95 1f       	adc	r25, r21
    1dfc:	a0 1d       	adc	r26, r0
    1dfe:	08 95       	ret

00001e00 <__ctype_isfalse>:
    1e00:	99 27       	eor	r25, r25
    1e02:	88 27       	eor	r24, r24

00001e04 <__ctype_istrue>:
    1e04:	08 95       	ret

00001e06 <__prologue_saves__>:
    1e06:	2f 92       	push	r2
    1e08:	3f 92       	push	r3
    1e0a:	4f 92       	push	r4
    1e0c:	5f 92       	push	r5
    1e0e:	6f 92       	push	r6
    1e10:	7f 92       	push	r7
    1e12:	8f 92       	push	r8
    1e14:	9f 92       	push	r9
    1e16:	af 92       	push	r10
    1e18:	bf 92       	push	r11
    1e1a:	cf 92       	push	r12
    1e1c:	df 92       	push	r13
    1e1e:	ef 92       	push	r14
    1e20:	ff 92       	push	r15
    1e22:	0f 93       	push	r16
    1e24:	1f 93       	push	r17
    1e26:	cf 93       	push	r28
    1e28:	df 93       	push	r29
    1e2a:	cd b7       	in	r28, 0x3d	; 61
    1e2c:	de b7       	in	r29, 0x3e	; 62
    1e2e:	ca 1b       	sub	r28, r26
    1e30:	db 0b       	sbc	r29, r27
    1e32:	0f b6       	in	r0, 0x3f	; 63
    1e34:	f8 94       	cli
    1e36:	de bf       	out	0x3e, r29	; 62
    1e38:	0f be       	out	0x3f, r0	; 63
    1e3a:	cd bf       	out	0x3d, r28	; 61
    1e3c:	09 94       	ijmp

00001e3e <__epilogue_restores__>:
    1e3e:	2a 88       	ldd	r2, Y+18	; 0x12
    1e40:	39 88       	ldd	r3, Y+17	; 0x11
    1e42:	48 88       	ldd	r4, Y+16	; 0x10
    1e44:	5f 84       	ldd	r5, Y+15	; 0x0f
    1e46:	6e 84       	ldd	r6, Y+14	; 0x0e
    1e48:	7d 84       	ldd	r7, Y+13	; 0x0d
    1e4a:	8c 84       	ldd	r8, Y+12	; 0x0c
    1e4c:	9b 84       	ldd	r9, Y+11	; 0x0b
    1e4e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1e50:	b9 84       	ldd	r11, Y+9	; 0x09
    1e52:	c8 84       	ldd	r12, Y+8	; 0x08
    1e54:	df 80       	ldd	r13, Y+7	; 0x07
    1e56:	ee 80       	ldd	r14, Y+6	; 0x06
    1e58:	fd 80       	ldd	r15, Y+5	; 0x05
    1e5a:	0c 81       	ldd	r16, Y+4	; 0x04
    1e5c:	1b 81       	ldd	r17, Y+3	; 0x03
    1e5e:	aa 81       	ldd	r26, Y+2	; 0x02
    1e60:	b9 81       	ldd	r27, Y+1	; 0x01
    1e62:	ce 0f       	add	r28, r30
    1e64:	d1 1d       	adc	r29, r1
    1e66:	0f b6       	in	r0, 0x3f	; 63
    1e68:	f8 94       	cli
    1e6a:	de bf       	out	0x3e, r29	; 62
    1e6c:	0f be       	out	0x3f, r0	; 63
    1e6e:	cd bf       	out	0x3d, r28	; 61
    1e70:	ed 01       	movw	r28, r26
    1e72:	08 95       	ret

00001e74 <_exit>:
    1e74:	f8 94       	cli

00001e76 <__stop_program>:
    1e76:	ff cf       	rjmp	.-2      	; 0x1e76 <__stop_program>
